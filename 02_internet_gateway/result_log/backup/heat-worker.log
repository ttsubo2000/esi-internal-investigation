2018-03-30 00:53:47,392 [1;37mINFO[0m heat_worker - Registered gohan 2-step delete flag: marked_for_deletion (resources.py - 62)
2018-03-30 00:53:47,392 [1;37mINFO[0m heat_worker - Gohan config path: /config (resources.py - 274)
2018-03-30 00:53:47,392 [1;37mINFO[0m heat_worker - Gohan state path: /state (resources.py - 298)
================================================
2018-03-30 00:53:47,552 [1;34mDEBUG[0m heat_worker - Starting worker. (etcd_worker.py - 231)
2018-03-30 00:53:47,552 [1;37mINFO[0m heat_worker - Worker started. (etcd_worker.py - 234)
2018-03-30 00:53:47,552 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:53:47,552 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:54:17,559 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:54:17,560 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:54:17,560 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:54:47,565 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:54:47,565 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:54:47,565 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:55:17,569 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:55:17,569 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:55:17,569 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:55:46,261 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695:1:dfb4c using id: 071cf158-e53f-4b4a-af59-76398ec6e3c1 (job_queue.py - 245)
2018-03-30 00:55:46,262 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:55:46,262 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 00:55:46,302 [1;34mDEBUG[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Starting work on new ready job create:heat_worker:ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695:1:dfb4c (etcd_worker.py - 108)
2018-03-30 00:55:46,303 [1;34mDEBUG[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Checking job status for ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 (heat_stacks_worker.py - 44)
2018-03-30 00:55:47,022 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 00:55:47,088 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Template id ese_device_existing resolved from mapping: ACese_device_&Pexisting (resources.py - 835)
2018-03-30 00:55:47,090 [1;34mDEBUG[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  ESE Device (existing) template

parameters:
  name:
    type: string
    label: Physical Router Name
    description: Name of the physical router that will be created.
  hostname:
    type: string
    label: Hostname
    description: Name of host (vrouter) to create router on
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Device
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_router:
    type: OS::Contrail::ExistingResource
    properties:
      fq_name:
        - "default-global-system-config"
        - { get_param: hostname }
      resource_type: "physical_router"

  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: ese_devices
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: switch
      properties:
        device_ip: { get_param: device_ip }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: switch
    depends_on: physical_router

outputs:
  id:
    description: A unique id for the physical router.
    value: { get_resource: physical_router }
  name:
    description: The name of the physical router.
    value: { get_attr: [physical_router, name] }
  fq_name:
    description: The FQ name of the physical router.
    value: { get_attr: [physical_router, fq_name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link] }
 with parameters:
{"device_ip": "10.161.0.34", "name": "QFX-NW02", "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "hostname": "QFX-NW02", "version": 1, "gohan_id": "f5429afc-cf7e-41c4-91ee-36ec403a9695"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 00:55:47,091 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Creating a stack ese_device_f5429afc-cf7e-41c4-91ee-36ec403a9695 with parameters: {u'device_ip': u'10.161.0.34', u'name': u'QFX-NW02', u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'hostname': u'QFX-NW02', u'version': 1, u'gohan_id': u'f5429afc-cf7e-41c4-91ee-36ec403a9695'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  ESE Device (existing) template

parameters:
  name:
    type: string
    label: Physical Router Name
    description: Name of the physical router that will be created.
  hostname:
    type: string
    label: Hostname
    description: Name of host (vrouter) to create router on
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Device
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_router:
    type: OS::Contrail::ExistingResource
    properties:
      fq_name:
        - "default-global-system-config"
        - { get_param: hostname }
      resource_type: "physical_router"

  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: ese_devices
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: switch
      properties:
        device_ip: { get_param: device_ip }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: switch
    depends_on: physical_router

outputs:
  id:
    description: A unique id for the physical router.
    value: { get_resource: physical_router }
  name:
    description: The name of the physical router.
    value: { get_attr: [physical_router, name] }
  fq_name:
    description: The FQ name of the physical router.
    value: { get_attr: [physical_router, fq_name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link] } (heat.py - 162)
2018-03-30 00:55:47,560 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Stack "ese_device_f5429afc-cf7e-41c4-91ee-36ec403a9695" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:55:48,606 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Stack "ese_device_f5429afc-cf7e-41c4-91ee-36ec403a9695" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:55:49,652 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Stack "ese_device_f5429afc-cf7e-41c4-91ee-36ec403a9695" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:55:50,843 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Stack "ese_device_f5429afc-cf7e-41c4-91ee-36ec403a9695" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 00:55:50,843 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - CREATED ese_device_f5429afc-cf7e-41c4-91ee-36ec403a9695 (heat.py - 280)
2018-03-30 00:55:51,025 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Job create finished with results {'heat_outputs': [{u'output_value': u'cc19c36a-a5ed-4dce-be0d-dc228f8b1c00', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'default-global-system-config', u'NWSDP-JNPR-02'], u'description': u'The FQ name of the physical router.', u'output_key': u'fq_name'}, {u'output_value': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'description': u'A unique id for the physical router.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/cc19c36a-a5ed-4dce-be0d-dc228f8b1c00', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'NWSDP-JNPR-02', u'description': u'The name of the physical router.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 00:55:51,197 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Job create:heat_worker:ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695:1:dfb4c finished. (job_queue.py - 266)
2018-03-30 00:55:51,197 [1;37mINFO[0m heat_worker - ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 - Trying to delete internal process state for resource ese_device:f5429afc-cf7e-41c4-91ee-36ec403a9695 (resources.py - 701)
2018-03-30 00:56:16,269 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:56:16,269 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:56:16,269 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:56:46,273 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:56:46,273 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:56:46,273 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:56:53,694 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a:1:yiyuh using id: cafee0ef-48b7-4fd2-ad58-a2d1ddce31f8 (job_queue.py - 245)
2018-03-30 00:56:53,695 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:56:53,695 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 00:56:53,720 [1;34mDEBUG[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Starting work on new ready job create:heat_worker:ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a:1:yiyuh (etcd_worker.py - 108)
2018-03-30 00:56:53,720 [1;34mDEBUG[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Checking job status for ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a (heat_stacks_worker.py - 44)
2018-03-30 00:56:53,898 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 00:56:53,954 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Template id ese_physical_port_new resolved from mapping: ACese_physical_port_&Pexisting (resources.py - 835)
2018-03-30 00:56:53,956 [1;34mDEBUG[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"physical_port_name": "xe-0/0/3", "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_ip": "10.161.0.34", "physical_device": "7e5c78fa-71c0-427e-947f-586b1fc3c470", "version": 1, "gohan_id": "7861b62a-55fe-4e98-9bfc-10bf19052d9a"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 00:56:53,956 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Creating a stack ese_physical_port_7861b62a-55fe-4e98-9bfc-10bf19052d9a with parameters: {u'physical_port_name': u'xe-0/0/3', u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_ip': u'10.161.0.34', u'physical_device': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'version': 1, u'gohan_id': u'7861b62a-55fe-4e98-9bfc-10bf19052d9a'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-03-30 00:56:54,381 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Stack "ese_physical_port_7861b62a-55fe-4e98-9bfc-10bf19052d9a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:56:55,428 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Stack "ese_physical_port_7861b62a-55fe-4e98-9bfc-10bf19052d9a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:56:56,476 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Stack "ese_physical_port_7861b62a-55fe-4e98-9bfc-10bf19052d9a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:56:57,598 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Stack "ese_physical_port_7861b62a-55fe-4e98-9bfc-10bf19052d9a" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 00:56:57,598 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - CREATED ese_physical_port_7861b62a-55fe-4e98-9bfc-10bf19052d9a (heat.py - 280)
2018-03-30 00:56:57,795 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Job create finished with results {'heat_outputs': [{u'output_value': u'c80300f1-641c-4cbc-bd93-d65cef324cfb', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'06bfe521-07f0-4931-9f8c-318c3ad8114e', u'description': u'A unique id for the physical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/c80300f1-641c-4cbc-bd93-d65cef324cfb', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38', u'description': u'The name of the physical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 00:56:57,931 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Job create:heat_worker:ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a:1:yiyuh finished. (job_queue.py - 266)
2018-03-30 00:56:57,932 [1;37mINFO[0m heat_worker - ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a - Trying to delete internal process state for resource ese_physical_port:7861b62a-55fe-4e98-9bfc-10bf19052d9a (resources.py - 701)
2018-03-30 00:57:23,702 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:57:23,702 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:57:23,703 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:57:53,714 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:57:53,714 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:57:53,714 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:57:58,008 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd:1:o9rht using id: 712c81fc-ee0a-4bd5-b3a7-2b115be98c75 (job_queue.py - 245)
2018-03-30 00:57:58,009 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:57:58,009 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 00:57:58,033 [1;34mDEBUG[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Starting work on new ready job create:heat_worker:ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd:1:o9rht (etcd_worker.py - 108)
2018-03-30 00:57:58,033 [1;34mDEBUG[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Checking job status for ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd (heat_stacks_worker.py - 44)
2018-03-30 00:57:58,192 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 00:57:58,260 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Template id ese_physical_port_new resolved from mapping: ACese_physical_port_&Pexisting (resources.py - 835)
2018-03-30 00:57:58,262 [1;34mDEBUG[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"physical_port_name": "xe-0/0/4", "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_ip": "10.161.0.34", "physical_device": "7e5c78fa-71c0-427e-947f-586b1fc3c470", "version": 1, "gohan_id": "76001683-a8bb-4c68-8c87-7b63ea7bd5cd"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 00:57:58,262 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Creating a stack ese_physical_port_76001683-a8bb-4c68-8c87-7b63ea7bd5cd with parameters: {u'physical_port_name': u'xe-0/0/4', u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_ip': u'10.161.0.34', u'physical_device': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'version': 1, u'gohan_id': u'76001683-a8bb-4c68-8c87-7b63ea7bd5cd'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-03-30 00:57:58,690 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Stack "ese_physical_port_76001683-a8bb-4c68-8c87-7b63ea7bd5cd" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:57:59,737 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Stack "ese_physical_port_76001683-a8bb-4c68-8c87-7b63ea7bd5cd" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:58:00,784 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Stack "ese_physical_port_76001683-a8bb-4c68-8c87-7b63ea7bd5cd" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:58:01,901 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Stack "ese_physical_port_76001683-a8bb-4c68-8c87-7b63ea7bd5cd" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 00:58:01,902 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - CREATED ese_physical_port_76001683-a8bb-4c68-8c87-7b63ea7bd5cd (heat.py - 280)
2018-03-30 00:58:02,111 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Job create finished with results {'heat_outputs': [{u'output_value': u'2b9fc4b0-a261-4218-a9fc-7b449642836b', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'06bfe521-07f0-4931-9f8c-318c3ad8114e', u'description': u'A unique id for the physical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/2b9fc4b0-a261-4218-a9fc-7b449642836b', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38', u'description': u'The name of the physical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 00:58:02,258 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Job create:heat_worker:ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd:1:o9rht finished. (job_queue.py - 266)
2018-03-30 00:58:02,259 [1;37mINFO[0m heat_worker - ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd - Trying to delete internal process state for resource ese_physical_port:76001683-a8bb-4c68-8c87-7b63ea7bd5cd (resources.py - 701)
2018-03-30 00:58:28,015 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:58:28,015 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:58:28,015 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:58:58,058 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:edge_router:2a28fdaa-651b-4558-8825-891b93329123:1:u1k89 using id: 17e1a71c-9e29-4080-8396-d218888d121a (job_queue.py - 245)
2018-03-30 00:58:58,059 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:58:58,059 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 00:58:58,083 [1;34mDEBUG[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Starting work on new ready job create:heat_worker:edge_router:2a28fdaa-651b-4558-8825-891b93329123:1:u1k89 (etcd_worker.py - 108)
2018-03-30 00:58:58,083 [1;34mDEBUG[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Checking job status for edge_router:2a28fdaa-651b-4558-8825-891b93329123 (heat_stacks_worker.py - 44)
2018-03-30 00:58:58,260 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 00:58:58,397 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Template id edge_router resolved from mapping: Cedge_router (resources.py - 835)
2018-03-30 00:58:58,398 [1;34mDEBUG[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]}
 with parameters:
{"gohan_id": "2a28fdaa-651b-4558-8825-891b93329123", "device_ip": "192.168.100.102", "version": 1, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 00:58:58,398 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Creating a stack edge_router_2a28fdaa-651b-4558-8825-891b93329123 with parameters: {u'gohan_id': u'2a28fdaa-651b-4558-8825-891b93329123', u'device_ip': u'192.168.100.102', u'version': 1, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]} (heat.py - 162)
2018-03-30 00:58:58,965 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Stack "edge_router_2a28fdaa-651b-4558-8825-891b93329123" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:59:00,038 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Stack "edge_router_2a28fdaa-651b-4558-8825-891b93329123" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 00:59:01,109 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Stack "edge_router_2a28fdaa-651b-4558-8825-891b93329123" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 00:59:01,109 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - CREATED edge_router_2a28fdaa-651b-4558-8825-891b93329123 (heat.py - 280)
2018-03-30 00:59:01,281 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Job create finished with results {'heat_outputs': [{u'output_value': u'7440aa4b-dedc-43ed-ad2d-b60f00f1247d', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/7440aa4b-dedc-43ed-ad2d-b60f00f1247d', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 00:59:01,424 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Job create:heat_worker:edge_router:2a28fdaa-651b-4558-8825-891b93329123:1:u1k89 finished. (job_queue.py - 266)
2018-03-30 00:59:01,424 [1;37mINFO[0m heat_worker - edge_router:2a28fdaa-651b-4558-8825-891b93329123 - Trying to delete internal process state for resource edge_router:2a28fdaa-651b-4558-8825-891b93329123 (resources.py - 701)
2018-03-30 00:59:28,064 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:59:28,064 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:59:28,064 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 00:59:58,075 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 00:59:58,075 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 00:59:58,075 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:00:00,254 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d:1:bov3q using id: 0e7fb24f-434a-421e-b26b-9c47f9f01974 (job_queue.py - 245)
2018-03-30 01:00:00,255 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:00:00,255 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:00:00,308 [1;34mDEBUG[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Starting work on new ready job create:heat_worker:edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d:1:bov3q (etcd_worker.py - 108)
2018-03-30 01:00:00,309 [1;34mDEBUG[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Checking job status for edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d (heat_stacks_worker.py - 44)
2018-03-30 01:00:00,468 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:00:00,526 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Template id edge_router resolved from mapping: Cedge_router (resources.py - 835)
2018-03-30 01:00:00,527 [1;34mDEBUG[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]}
 with parameters:
{"gohan_id": "43119898-9a76-400c-abdc-8d3ec2113b5d", "device_ip": "192.168.100.101", "version": 1, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 01:00:00,527 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Creating a stack edge_router_43119898-9a76-400c-abdc-8d3ec2113b5d with parameters: {u'gohan_id': u'43119898-9a76-400c-abdc-8d3ec2113b5d', u'device_ip': u'192.168.100.101', u'version': 1, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]} (heat.py - 162)
2018-03-30 01:00:01,043 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Stack "edge_router_43119898-9a76-400c-abdc-8d3ec2113b5d" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:00:02,208 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Stack "edge_router_43119898-9a76-400c-abdc-8d3ec2113b5d" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:00:02,208 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - CREATED edge_router_43119898-9a76-400c-abdc-8d3ec2113b5d (heat.py - 280)
2018-03-30 01:00:02,311 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Job create finished with results {'heat_outputs': [{u'output_value': u'b2f3a36a-9427-44bc-a403-664a5a65862a', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/b2f3a36a-9427-44bc-a403-664a5a65862a', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:00:02,446 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Job create:heat_worker:edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d:1:bov3q finished. (job_queue.py - 266)
2018-03-30 01:00:02,447 [1;37mINFO[0m heat_worker - edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d - Trying to delete internal process state for resource edge_router:43119898-9a76-400c-abdc-8d3ec2113b5d (resources.py - 701)
2018-03-30 01:00:30,258 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:00:30,259 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:00:30,259 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:01:00,264 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:01:00,264 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:01:00,264 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:01:03,759 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d:1:3mga1 using id: 2a6aa0d0-5671-401b-a963-9a37c0cfab9a (job_queue.py - 245)
2018-03-30 01:01:03,760 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:01:03,760 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:01:03,795 [1;34mDEBUG[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Starting work on new ready job create:heat_worker:er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d:1:3mga1 (etcd_worker.py - 108)
2018-03-30 01:01:03,795 [1;34mDEBUG[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Checking job status for er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d (heat_stacks_worker.py - 44)
2018-03-30 01:01:03,970 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:01:04,085 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-03-30 01:01:04,086 [1;34mDEBUG[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_ip": "192.168.100.102", "if_name": "ae0", "version": 1, "gohan_id": "7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 01:01:04,087 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Creating a stack er_physical_interface_7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d with parameters: {u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_ip': u'192.168.100.102', u'if_name': u'ae0', u'version': 1, u'gohan_id': u'7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-03-30 01:01:04,535 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Stack "er_physical_interface_7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:01:05,617 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Stack "er_physical_interface_7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:01:06,673 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Stack "er_physical_interface_7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:01:06,673 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - CREATED er_physical_interface_7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d (heat.py - 280)
2018-03-30 01:01:06,781 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Job create finished with results {'heat_outputs': [{u'output_value': u'cf06cbe6-5e6d-4e4a-a754-ce7c876edca4', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/cf06cbe6-5e6d-4e4a-a754-ce7c876edca4', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:01:06,906 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Job create:heat_worker:er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d:1:3mga1 finished. (job_queue.py - 266)
2018-03-30 01:01:06,907 [1;37mINFO[0m heat_worker - er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d - Trying to delete internal process state for resource er_physical_interface:7dd45d1b-1ca1-4735-9a3e-8b7e09125e0d (resources.py - 701)
2018-03-30 01:01:33,764 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:01:33,764 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:01:33,764 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:02:03,774 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:02:03,774 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:02:03,774 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:02:06,040 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a:1:dhby6 using id: 9c0d0b59-56d2-4286-b71e-e0fd68d0c341 (job_queue.py - 245)
2018-03-30 01:02:06,042 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:02:06,042 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:02:06,066 [1;34mDEBUG[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Starting work on new ready job create:heat_worker:er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a:1:dhby6 (etcd_worker.py - 108)
2018-03-30 01:02:06,066 [1;34mDEBUG[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Checking job status for er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a (heat_stacks_worker.py - 44)
2018-03-30 01:02:06,276 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:02:06,359 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-03-30 01:02:06,360 [1;34mDEBUG[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_ip": "192.168.100.101", "if_name": "ae0", "version": 1, "gohan_id": "372f28d1-8fb2-4bb1-9b42-cfc30515735a"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 01:02:06,360 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Creating a stack er_physical_interface_372f28d1-8fb2-4bb1-9b42-cfc30515735a with parameters: {u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_ip': u'192.168.100.101', u'if_name': u'ae0', u'version': 1, u'gohan_id': u'372f28d1-8fb2-4bb1-9b42-cfc30515735a'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-03-30 01:02:06,794 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Stack "er_physical_interface_372f28d1-8fb2-4bb1-9b42-cfc30515735a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:02:07,923 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Stack "er_physical_interface_372f28d1-8fb2-4bb1-9b42-cfc30515735a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:02:08,977 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Stack "er_physical_interface_372f28d1-8fb2-4bb1-9b42-cfc30515735a" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:02:08,977 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - CREATED er_physical_interface_372f28d1-8fb2-4bb1-9b42-cfc30515735a (heat.py - 280)
2018-03-30 01:02:09,077 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Job create finished with results {'heat_outputs': [{u'output_value': u'333a52fa-a1b8-49b2-ae49-a68e0ef37448', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/333a52fa-a1b8-49b2-ae49-a68e0ef37448', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:02:09,247 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Job create:heat_worker:er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a:1:dhby6 finished. (job_queue.py - 266)
2018-03-30 01:02:09,247 [1;37mINFO[0m heat_worker - er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a - Trying to delete internal process state for resource er_physical_interface:372f28d1-8fb2-4bb1-9b42-cfc30515735a (resources.py - 701)
2018-03-30 01:02:36,045 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:02:36,046 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:02:36,046 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:03:06,051 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:03:06,052 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:03:06,052 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:03:32,255 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6:1:kbzvs using id: e95c48fd-e6ea-4647-9fbf-cba8debc079a (job_queue.py - 245)
2018-03-30 01:03:32,256 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:03:32,256 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:03:32,295 [1;34mDEBUG[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Starting work on new ready job create:heat_worker:internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6:1:kbzvs (etcd_worker.py - 108)
2018-03-30 01:03:32,295 [1;34mDEBUG[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Checking job status for internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 (heat_stacks_worker.py - 44)
2018-03-30 01:03:32,452 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:03:32,509 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Template id internet_gateway resolved from mapping: Cinternet_gateway (resources.py - 835)
2018-03-30 01:03:32,517 [1;34mDEBUG[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Internet GW Instance

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: Physical port on the Primary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_interface:
    description: Name of the created logical interface on the Primary device
    label: Logical Interface name
    type: string
  secondary_device_physical_interface:
    description: Physical port on the Secondary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_interface:
    description: Name of the created logical interface on the Secondary device
    label: Logical Interface name
    type: string
  vlan:
    description: vlan tag used by logical interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interface
    label: VRF name
    type: string
  vrf_import_policy:
    description: Import Policy for IGS
    label: Import Policy
    type: string
  vrf_export_policy:
    description: Export Policy for IGS
    label: Export Policy
    type: string
  uplink_import_policy:
    description: Uplink Import Policy for IGS
    label: Uplink Import Policy
    type: string
  input_filter_name:
    description: Policer name to use as input policer
    label: Input policer name
    type: string
  output_filter_name:
    description: Policer name to use as output policer
    label: Output policer name
    type: string
  primary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  secondary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  inet_in_filter:
    label: Internet Input Filter
    type: string
  inet_out_filter:
    label: Internet Output Filter
    type: string
  prefix_list_name:
    label: Prefix list name
    type: string
  filter_term_name:
    label: Filter term name
    type: string
  counter_name_in:
    type: string
    label: Input counter name
  counter_name_out:
    type: string
    label: Output counter name
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:

  netconf_configure_primary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: primary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: primary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: secondary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: secondary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs



  primary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: primary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: primary_device_ip }
        port: { get_param: primary_device_port }
        login: { get_param: primary_device_username }
        password: { get_param: primary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary

  secondary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: secondary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: secondary_device_ip }
        port: { get_param: secondary_device_port }
        login: { get_param: secondary_device_username }
        password: { get_param: secondary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary


outputs:

  primary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: primary_igs_metric_monitor}
  primary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [primary_igs_metric_monitor, link]}

  secondary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: secondary_igs_metric_monitor}
  secondary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [secondary_igs_metric_monitor, link]}

 with parameters:
{"vrf_export_policy": "INSTANCE-USER_OUT", "secondary_device_physical_interface": "ae0", "counter_name_out": "vrf_gw_sample-ha-router-downlink_1025_OUT", "primary_device_logical_interface": "ae0.1025", "primary_device_password": "***", "gohan_id": "d4e4e75c-8c02-420f-9eda-fa5771c3bad6", "vrf_import_policy": "INSTANCE-USER_IN", "prefix_list_name": "vrf_gw_sample-ha-router-downlink_1025_prefix", "output_filter_name": "FILTER_10M-GA-DOWN-INET", "secondary_vrrp_config_group": "InetGW2-VRRP", "primary_device_ip": "192.168.100.102", "version": 1, "inet_in_filter": "INET_IN", "primary_vrrp_config_group": "InetGW1-VRRP", "secondary_device_logical_interface": "ae0.1025", "counter_name_in": "vrf_gw_sample-ha-router-downlink_1025_IN", "inet_out_filter": "INET_OUT", "vlan": "1025", "primary_device_physical_interface": "ae0", "uplink_import_policy": "INSTANCE-MASTER_IN", "input_filter_name": "FILTER_10M-GA-UP-INET", "filter_term_name": "vrf_gw_sample-ha-router-downlink_1025_filter", "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "secondary_device_port": 830, "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "secondary_device_username": "esi", "primary_device_port": 830, "secondary_device_ip": "192.168.100.101"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_vrf_config': u''} (heat.py - 145)
2018-03-30 01:03:32,517 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Creating a stack internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6 with parameters: {u'vrf_export_policy': u'INSTANCE-USER_OUT', u'secondary_device_physical_interface': u'ae0', u'counter_name_out': u'vrf_gw_sample-ha-router-downlink_1025_OUT', u'primary_device_logical_interface': u'ae0.1025', u'primary_device_password': u'***', u'gohan_id': u'd4e4e75c-8c02-420f-9eda-fa5771c3bad6', u'vrf_import_policy': u'INSTANCE-USER_IN', u'prefix_list_name': u'vrf_gw_sample-ha-router-downlink_1025_prefix', u'output_filter_name': u'FILTER_10M-GA-DOWN-INET', u'secondary_vrrp_config_group': u'InetGW2-VRRP', u'primary_device_ip': u'192.168.100.102', u'version': 1, u'inet_in_filter': u'INET_IN', u'primary_vrrp_config_group': u'InetGW1-VRRP', u'secondary_device_logical_interface': u'ae0.1025', u'counter_name_in': u'vrf_gw_sample-ha-router-downlink_1025_IN', u'inet_out_filter': u'INET_OUT', u'vlan': u'1025', u'primary_device_physical_interface': u'ae0', u'uplink_import_policy': u'INSTANCE-MASTER_IN', u'input_filter_name': u'FILTER_10M-GA-UP-INET', u'filter_term_name': u'vrf_gw_sample-ha-router-downlink_1025_filter', u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'secondary_device_username': u'esi', u'primary_device_port': 830, u'secondary_device_ip': u'192.168.100.101'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Internet GW Instance

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: Physical port on the Primary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_interface:
    description: Name of the created logical interface on the Primary device
    label: Logical Interface name
    type: string
  secondary_device_physical_interface:
    description: Physical port on the Secondary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_interface:
    description: Name of the created logical interface on the Secondary device
    label: Logical Interface name
    type: string
  vlan:
    description: vlan tag used by logical interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interface
    label: VRF name
    type: string
  vrf_import_policy:
    description: Import Policy for IGS
    label: Import Policy
    type: string
  vrf_export_policy:
    description: Export Policy for IGS
    label: Export Policy
    type: string
  uplink_import_policy:
    description: Uplink Import Policy for IGS
    label: Uplink Import Policy
    type: string
  input_filter_name:
    description: Policer name to use as input policer
    label: Input policer name
    type: string
  output_filter_name:
    description: Policer name to use as output policer
    label: Output policer name
    type: string
  primary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  secondary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  inet_in_filter:
    label: Internet Input Filter
    type: string
  inet_out_filter:
    label: Internet Output Filter
    type: string
  prefix_list_name:
    label: Prefix list name
    type: string
  filter_term_name:
    label: Filter term name
    type: string
  counter_name_in:
    type: string
    label: Input counter name
  counter_name_out:
    type: string
    label: Output counter name
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:

  netconf_configure_primary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: primary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: primary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: secondary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: secondary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs



  primary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: primary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: primary_device_ip }
        port: { get_param: primary_device_port }
        login: { get_param: primary_device_username }
        password: { get_param: primary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary

  secondary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: secondary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: secondary_device_ip }
        port: { get_param: secondary_device_port }
        login: { get_param: secondary_device_username }
        password: { get_param: secondary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary


outputs:

  primary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: primary_igs_metric_monitor}
  primary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [primary_igs_metric_monitor, link]}

  secondary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: secondary_igs_metric_monitor}
  secondary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [secondary_igs_metric_monitor, link]}
 (heat.py - 162)
2018-03-30 01:03:33,094 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:34,145 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:35,197 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:36,248 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:37,298 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:38,348 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:39,395 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:40,443 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:41,498 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:42,546 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:43,594 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:44,723 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:45,773 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:46,822 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:47,868 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:03:48,927 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Stack "internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:03:48,927 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - CREATED internet_gateway_d4e4e75c-8c02-420f-9eda-fa5771c3bad6 (heat.py - 280)
2018-03-30 01:03:49,045 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Job create finished with results {'heat_outputs': [{u'output_value': u'082e613f-f9d2-4713-9a0a-238c5271d48f', u'description': u'Monitoring Target ID', u'output_key': u'primary_monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/cc9ebe89-fd84-4b9e-b3ed-e1c32fc21c20', u'description': u'Monitoring Process Link', u'output_key': u'secondary_monitoring_link'}, {u'output_value': u'cc9ebe89-fd84-4b9e-b3ed-e1c32fc21c20', u'description': u'Monitoring Target ID', u'output_key': u'secondary_monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/082e613f-f9d2-4713-9a0a-238c5271d48f', u'description': u'Monitoring Process Link', u'output_key': u'primary_monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:03:49,235 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Job create:heat_worker:internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6:1:kbzvs finished. (job_queue.py - 266)
2018-03-30 01:03:49,235 [1;37mINFO[0m heat_worker - internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 - Trying to delete internal process state for resource internet_gateway:d4e4e75c-8c02-420f-9eda-fa5771c3bad6 (resources.py - 701)
2018-03-30 01:04:01,814 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211:1:4sigm using id: 5e53a862-d81c-484f-af64-22e699716e5d (job_queue.py - 245)
2018-03-30 01:04:01,815 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:04:01,815 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:04:01,837 [1;34mDEBUG[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Starting work on new ready job create:heat_worker:public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211:1:4sigm (etcd_worker.py - 108)
2018-03-30 01:04:01,837 [1;34mDEBUG[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Checking job status for public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 (heat_stacks_worker.py - 44)
2018-03-30 01:04:02,008 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:04:02,063 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Template id public_ip resolved from mapping: Cpublic_ip (resources.py - 835)
2018-03-30 01:04:02,066 [1;34mDEBUG[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  QoS Option

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  prefix_list_name:
    label: Prefix List name.
    type: string
  ip_cidr:
    label: Public IP CIDR
    type: string
  ip_mask:
    label: Public IP CIDR
    type: string
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_ip": "192.168.100.102", "secondary_device_port": 830, "secondary_device_password": "***", "ip_mask": 28, "primary_device_password": "***", "ip_cidr": "203.0.112.0", "primary_device_username": "esi", "prefix_list_name": "vrf_gw_sample-ha-router-downlink_1025_prefix", "primary_device_port": 830, "secondary_device_ip": "192.168.100.101", "secondary_device_username": "esi"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 01:04:02,066 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Creating a stack public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211 with parameters: {u'primary_device_ip': u'192.168.100.102', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'ip_mask': 28, u'primary_device_password': u'***', u'ip_cidr': u'203.0.112.0', u'primary_device_username': u'esi', u'prefix_list_name': u'vrf_gw_sample-ha-router-downlink_1025_prefix', u'primary_device_port': 830, u'secondary_device_ip': u'192.168.100.101', u'secondary_device_username': u'esi'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  QoS Option

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  prefix_list_name:
    label: Prefix List name.
    type: string
  ip_cidr:
    label: Public IP CIDR
    type: string
  ip_mask:
    label: Public IP CIDR
    type: string
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 162)
2018-03-30 01:04:02,482 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:03,541 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:04,715 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:05,765 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:06,813 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:07,915 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:08,961 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Stack "public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:04:08,961 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - CREATED public_ip_6f583980-3f9e-458f-8f68-f42a7adfb211 (heat.py - 280)
2018-03-30 01:04:09,056 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Job create finished with results {'heat_outputs': [], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:04:09,248 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Job create:heat_worker:public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211:1:4sigm finished. (job_queue.py - 266)
2018-03-30 01:04:09,248 [1;37mINFO[0m heat_worker - public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 - Trying to delete internal process state for resource public_ip:6f583980-3f9e-458f-8f68-f42a7adfb211 (resources.py - 701)
2018-03-30 01:04:21,714 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:network:73f88c22-ae22-4fb7-86b3-9acb141b8809:1:521i5 using id: d9ea2e20-71f3-478d-86dd-7014d9eeccf2 (job_queue.py - 245)
2018-03-30 01:04:21,715 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:04:21,715 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:04:21,741 [1;34mDEBUG[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Starting work on new ready job create:heat_worker:network:73f88c22-ae22-4fb7-86b3-9acb141b8809:1:521i5 (etcd_worker.py - 108)
2018-03-30 01:04:21,741 [1;34mDEBUG[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Checking job status for network:73f88c22-ae22-4fb7-86b3-9acb141b8809 (heat_stacks_worker.py - 44)
2018-03-30 01:04:21,926 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:04:21,983 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Template id network resolved from mapping: Cnetwork (resources.py - 835)
2018-03-30 01:04:21,984 [1;34mDEBUG[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Network template

parameters:
  uuid:
    type: string
    label: Virtual Network UUID
    description: UUID of the virtual network that will be created.
    default: ""
  name:
    type: string
    label: Virtual Network Name
    description: Name of the virtual network that will be created.
  forwarding_mode:
    type: string
    label: Forwarding Mode
    description: Forwarding Mode.
    default: 'l2_l3'
  route_targets:
    type: comma_delimited_list
    label: Route Targets list
    default: []
  shared:
    type: boolean
    label: Shared Network
    default: false
  external:
    type: boolean
    label: External Network
    default: true
  allow_transit:
    type: boolean
    label: Allow Transit
    default: false
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true

resources:
  network:
    type: OS::Contrail::VirtualNetwork
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      forwarding_mode: { get_param: forwarding_mode }
      route_targets: { get_param: route_targets }
      shared: { get_param: shared }
      admin_state_up: { get_param: admin_state_up }

outputs:
  id:
    description: A unique id for the virtual network.
    value: { get_resource: network }
  name:
    description: The name of the virtual network.
    value: { get_attr: [network, name] }
  fq_name:
    description: The FQ name of the virtual network.
    value: { get_attr: [network, fq_name] }
  route_targets:
    description: The name of the virtual network.
    value: { get_attr: [network, route_targets] }
 with parameters:
{"admin_state_up": true, "uuid": "73f88c22-ae22-4fb7-86b3-9acb141b8809", "name": "73f88c22-ae22-4fb7-86b3-9acb141b8809"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 01:04:21,985 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Creating a stack network_73f88c22-ae22-4fb7-86b3-9acb141b8809 with parameters: {u'admin_state_up': True, u'uuid': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'name': u'73f88c22-ae22-4fb7-86b3-9acb141b8809'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Network template

parameters:
  uuid:
    type: string
    label: Virtual Network UUID
    description: UUID of the virtual network that will be created.
    default: ""
  name:
    type: string
    label: Virtual Network Name
    description: Name of the virtual network that will be created.
  forwarding_mode:
    type: string
    label: Forwarding Mode
    description: Forwarding Mode.
    default: 'l2_l3'
  route_targets:
    type: comma_delimited_list
    label: Route Targets list
    default: []
  shared:
    type: boolean
    label: Shared Network
    default: false
  external:
    type: boolean
    label: External Network
    default: true
  allow_transit:
    type: boolean
    label: Allow Transit
    default: false
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true

resources:
  network:
    type: OS::Contrail::VirtualNetwork
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      forwarding_mode: { get_param: forwarding_mode }
      route_targets: { get_param: route_targets }
      shared: { get_param: shared }
      admin_state_up: { get_param: admin_state_up }

outputs:
  id:
    description: A unique id for the virtual network.
    value: { get_resource: network }
  name:
    description: The name of the virtual network.
    value: { get_attr: [network, name] }
  fq_name:
    description: The FQ name of the virtual network.
    value: { get_attr: [network, fq_name] }
  route_targets:
    description: The name of the virtual network.
    value: { get_attr: [network, route_targets] } (heat.py - 162)
2018-03-30 01:04:22,369 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Stack "network_73f88c22-ae22-4fb7-86b3-9acb141b8809" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:23,416 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Stack "network_73f88c22-ae22-4fb7-86b3-9acb141b8809" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:24,638 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Stack "network_73f88c22-ae22-4fb7-86b3-9acb141b8809" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:04:24,638 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - CREATED network_73f88c22-ae22-4fb7-86b3-9acb141b8809 (heat.py - 280)
2018-03-30 01:04:24,856 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Job create finished with results {'heat_outputs': [{u'output_value': [], u'description': u'The name of the virtual network.', u'output_key': u'route_targets'}, {u'output_value': u'default-domain:usertenant:73f88c22-ae22-4fb7-86b3-9acb141b8809', u'description': u'The FQ name of the virtual network.', u'output_key': u'fq_name'}, {u'output_value': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'description': u'A unique id for the virtual network.', u'output_key': u'id'}, {u'output_value': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'description': u'The name of the virtual network.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:04:25,013 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Job create:heat_worker:network:73f88c22-ae22-4fb7-86b3-9acb141b8809:1:521i5 finished. (job_queue.py - 266)
2018-03-30 01:04:25,013 [1;37mINFO[0m heat_worker - network:73f88c22-ae22-4fb7-86b3-9acb141b8809 - Trying to delete internal process state for resource network:73f88c22-ae22-4fb7-86b3-9acb141b8809 (resources.py - 701)
2018-03-30 01:04:37,817 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07:1:g47sk using id: 58c621fd-dcc0-47e7-808a-edb798ae4809 (job_queue.py - 245)
2018-03-30 01:04:37,818 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:04:37,818 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:04:37,874 [1;34mDEBUG[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Starting work on new ready job create:heat_worker:subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07:1:g47sk (etcd_worker.py - 108)
2018-03-30 01:04:37,874 [1;34mDEBUG[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Checking job status for subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 (heat_stacks_worker.py - 44)
2018-03-30 01:04:38,051 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:04:38,109 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Template id subnet resolved from mapping: Csubnet (resources.py - 835)
2018-03-30 01:04:38,111 [1;34mDEBUG[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Subnet template

parameters:
  name:
    type: string
    label: Local Subnet Name
    description: Name of the local subnet that will be created.
  network_id:
    type: string
    label: Network ID
    description: ID of the network for which subnet will be created.
  cidr:
    type: string
    label: Local Subnet IP prefix
    description: IP prefix of the local subnet that will be created.
  gateway_ip:
    default: "0.0.0.0"
    type: string
    label: Default Gateway
    description: Default gateway for the local subnet that will be created.
  ipam:
    type: string
    label: IP Address Management
    description: IPAM for the local subnet that will be created.
    default: ''
  enable_dhcp:
    type: boolean
    label: Enable DHCP
    description: Enable DHCP
    default: true
  dhcp_server_address:
    type: string
    label: DHCP Server address
    description: DHCP Server address
    default: "0.0.0.0"
  allocation_pools:
    type: string
    label: Allocation Pools
    description: Allocation Pools
    default: []
  dns_nameservers:
    type: comma_delimited_list
    label: DNS Nameservers List
    description: DNS Nameservers List
    default: []
  ntp_servers:
    type: comma_delimited_list
    label: NTP Nameservers List
    description: NTP Nameservers List
    default: []
  host_routes:
    type: json
    label: Host Routes
    description: Host Routes
    default: []

resources:
  subnet:
    type: OS::Contrail::VnSubnet
    properties:
      name: { get_param: name }
      network_id: { get_param: network_id }
      ip_prefix: { get_param: cidr }
      default_gateway: { get_param: gateway_ip }
      ipam: { get_param: ipam }
      enable_dhcp: { get_param: enable_dhcp }
      dns_server_address: { get_param: dhcp_server_address }
      dns_nameservers: { get_param: dns_nameservers }
      ntp_servers: { get_param: ntp_servers }
      host_routes: { get_param: host_routes }
      allocation_pools: { get_param: allocation_pools }
      gateway_is_vrouter: false

outputs:
  id:
    description: A unique id for the local subnet.
    value: { get_resource: subnet }
  name:
    description: The name of the local subnet.
    value: { get_attr: [subnet, name] }
  network_id:
    description: A unique id for the network.
    value: { get_attr: [subnet, network_id] }
  ip_prefix:
    description: IP prefix of local subnet.
    value: { get_attr: [subnet, ip_prefix] }
  default_gateway:
    description: Default gateway of local subnet.
    value: { get_attr: [subnet, default_gateway] }
  ipam:
    description: IPAM this local subnet uses.
    value: { get_attr: [subnet, ipam] }
 with parameters:
{"name": "8fca93d6-5f0b-413d-98e0-74c3d1bacf07", "enable_dhcp": true, "network_id": "73f88c22-ae22-4fb7-86b3-9acb141b8809", "ipam": "default-domain:default-project:default-network-ipam", "dns_nameservers": [], "allocation_pools": [{"start": "172.16.101.2", "end": "172.16.101.254"}], "dhcp_server_address": "172.16.101.2", "ntp_servers": [], "gateway_ip": "172.16.101.1", "host_routes": [], "cidr": "172.16.101.0/24"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-03-30 01:04:38,111 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Creating a stack subnet_8fca93d6-5f0b-413d-98e0-74c3d1bacf07 with parameters: {u'name': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'enable_dhcp': True, u'network_id': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'ipam': u'default-domain:default-project:default-network-ipam', u'dns_nameservers': [], u'allocation_pools': [{u'start': u'172.16.101.2', u'end': u'172.16.101.254'}], u'dhcp_server_address': u'172.16.101.2', u'ntp_servers': [], u'gateway_ip': u'172.16.101.1', u'host_routes': [], u'cidr': u'172.16.101.0/24'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Subnet template

parameters:
  name:
    type: string
    label: Local Subnet Name
    description: Name of the local subnet that will be created.
  network_id:
    type: string
    label: Network ID
    description: ID of the network for which subnet will be created.
  cidr:
    type: string
    label: Local Subnet IP prefix
    description: IP prefix of the local subnet that will be created.
  gateway_ip:
    default: "0.0.0.0"
    type: string
    label: Default Gateway
    description: Default gateway for the local subnet that will be created.
  ipam:
    type: string
    label: IP Address Management
    description: IPAM for the local subnet that will be created.
    default: ''
  enable_dhcp:
    type: boolean
    label: Enable DHCP
    description: Enable DHCP
    default: true
  dhcp_server_address:
    type: string
    label: DHCP Server address
    description: DHCP Server address
    default: "0.0.0.0"
  allocation_pools:
    type: string
    label: Allocation Pools
    description: Allocation Pools
    default: []
  dns_nameservers:
    type: comma_delimited_list
    label: DNS Nameservers List
    description: DNS Nameservers List
    default: []
  ntp_servers:
    type: comma_delimited_list
    label: NTP Nameservers List
    description: NTP Nameservers List
    default: []
  host_routes:
    type: json
    label: Host Routes
    description: Host Routes
    default: []

resources:
  subnet:
    type: OS::Contrail::VnSubnet
    properties:
      name: { get_param: name }
      network_id: { get_param: network_id }
      ip_prefix: { get_param: cidr }
      default_gateway: { get_param: gateway_ip }
      ipam: { get_param: ipam }
      enable_dhcp: { get_param: enable_dhcp }
      dns_server_address: { get_param: dhcp_server_address }
      dns_nameservers: { get_param: dns_nameservers }
      ntp_servers: { get_param: ntp_servers }
      host_routes: { get_param: host_routes }
      allocation_pools: { get_param: allocation_pools }
      gateway_is_vrouter: false

outputs:
  id:
    description: A unique id for the local subnet.
    value: { get_resource: subnet }
  name:
    description: The name of the local subnet.
    value: { get_attr: [subnet, name] }
  network_id:
    description: A unique id for the network.
    value: { get_attr: [subnet, network_id] }
  ip_prefix:
    description: IP prefix of local subnet.
    value: { get_attr: [subnet, ip_prefix] }
  default_gateway:
    description: Default gateway of local subnet.
    value: { get_attr: [subnet, default_gateway] }
  ipam:
    description: IPAM this local subnet uses.
    value: { get_attr: [subnet, ipam] } (heat.py - 162)
2018-03-30 01:04:38,554 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Stack "subnet_8fca93d6-5f0b-413d-98e0-74c3d1bacf07" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:39,603 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Stack "subnet_8fca93d6-5f0b-413d-98e0-74c3d1bacf07" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:40,777 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Stack "subnet_8fca93d6-5f0b-413d-98e0-74c3d1bacf07" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:04:40,778 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - CREATED subnet_8fca93d6-5f0b-413d-98e0-74c3d1bacf07 (heat.py - 280)
2018-03-30 01:04:40,978 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Job create finished with results {'heat_outputs': [{u'output_value': u'172.16.101.0/24', u'description': u'IP prefix of local subnet.', u'output_key': u'ip_prefix'}, {u'output_value': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'description': u'The name of the local subnet.', u'output_key': u'name'}, {u'output_value': u'172.16.101.1', u'description': u'Default gateway of local subnet.', u'output_key': u'default_gateway'}, {u'output_value': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'description': u'A unique id for the network.', u'output_key': u'network_id'}, {u'output_value': u'5a79909b-2bf3-4e26-8a9c-0bf6bb175457', u'description': u'IPAM this local subnet uses.', u'output_key': u'ipam'}, {u'output_value': u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67', u'description': u'A unique id for the local subnet.', u'output_key': u'id'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:04:41,155 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Job create:heat_worker:subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07:1:g47sk finished. (job_queue.py - 266)
2018-03-30 01:04:41,156 [1;37mINFO[0m heat_worker - subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 - Trying to delete internal process state for resource subnet:8fca93d6-5f0b-413d-98e0-74c3d1bacf07 (resources.py - 701)
2018-03-30 01:04:54,174 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48:1:rt8tq using id: 022bed69-e328-446c-bf3b-b9567da50268 (job_queue.py - 245)
2018-03-30 01:04:54,176 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:04:54,176 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:04:54,244 [1;34mDEBUG[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Starting work on new ready job create:heat_worker:gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48:1:rt8tq (etcd_worker.py - 108)
2018-03-30 01:04:54,245 [1;34mDEBUG[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Checking job status for gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 (heat_stacks_worker.py - 44)
2018-03-30 01:04:54,439 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:04:54,536 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Template id gw_interface_internet resolved from mapping: ACgw_interface_&Pservice_type (resources.py - 835)
2018-03-30 01:04:54,541 [1;34mDEBUG[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  vlan:
    description: Vlan tag for mx logical interface
    label: Vlan Tag
    type: string
  gw_vip:
    description: Virtual IP configured on VRRP
    label: Inet Address CIDR
    type: string
  primary_device_gw_ip:
    description: IP on primary device
    label: Inet Address CIDR
    type: string
  secondary_device_gw_ip:
    description: IP on secondary device
    label: Inet Address CIDR
    type: string
  netmask:
    description: Netmask for gw_ip
    label: Netmask
    type: number
  vrrp_group:
    type: string
    label: VRRP Group
  primary_device_priority:
    type: string
    label: Primary device priority
  secondary_device_priority:
    type: string
    label: Secondary device priority
  vrf_name:
    type: string
    label: VRF
  bgp_group_name:
    type: string
    label: Name of BGP Group on VRF
  primary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  secondary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  primary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  secondary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: primary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: primary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: primary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: secondary_device_gw_ip
              $APPLY_GROUP:
                    get_param: primary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: secondary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: secondary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: secondary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: primary_device_gw_ip
              $APPLY_GROUP:
                    get_param: secondary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  vrrp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: vrrp_pool
      resource_type: gw_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        vrid:
          - { get_param: vrrp_group }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          interface: { get_param: primary_logical_interface_name }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          interface: { get_param: secondary_logical_interface_name }
      syncer_properties:
        etcd:
          status:
            key: status
          hold_options:
            positive_status:
              primary: MASTER
              secondary: BACKUP
            time_seconds: 360
    depends_on: netconf_configure_secondary

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vrrp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vrrp_monitor, link]}
 with parameters:
{"secondary_device_physical_interface": "ae0", "secondary_ibgp_config_group": "InetGW1-RI-IBGP", "primary_device_password": "***", "secondary_device_gw_ip": "172.16.101.153", "gohan_id": "d84ce543-bc58-4844-b861-4a6d79fb2e48", "bgp_group_name": "inet-gw-group", "gw_vip": "172.16.101.151", "primary_device_ip": "192.168.100.102", "version": 1, "secondary_device_username": "esi", "secondary_logical_interface_name": "ae0.1025", "primary_logical_interface_name": "ae0.1025", "vlan": "1025", "primary_device_physical_interface": "ae0", "netmask": 24, "vrrp_group": 20, "primary_device_priority": "105", "primary_device_gw_ip": "172.16.101.152", "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "secondary_device_port": 830, "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "secondary_device_priority": "100", "primary_ibgp_config_group": "InetGW2-RI-IBGP", "primary_device_port": 830, "secondary_device_ip": "192.168.100.101"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_dummy_dependency': u'', u'jinja_force_dependency': u'73f88c22-ae22-4fb7-86b3-9acb141b8809'} (heat.py - 145)
2018-03-30 01:04:54,541 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Creating a stack gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48 with parameters: {u'secondary_device_physical_interface': u'ae0', u'secondary_ibgp_config_group': u'InetGW1-RI-IBGP', u'primary_device_password': u'***', u'secondary_device_gw_ip': u'172.16.101.153', u'gohan_id': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'bgp_group_name': u'inet-gw-group', u'gw_vip': u'172.16.101.151', u'primary_device_ip': u'192.168.100.102', u'version': 1, u'secondary_device_username': u'esi', u'secondary_logical_interface_name': u'ae0.1025', u'primary_logical_interface_name': u'ae0.1025', u'vlan': u'1025', u'primary_device_physical_interface': u'ae0', u'netmask': 24, u'vrrp_group': 20, u'primary_device_priority': u'105', u'primary_device_gw_ip': u'172.16.101.152', u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'secondary_device_priority': u'100', u'primary_ibgp_config_group': u'InetGW2-RI-IBGP', u'primary_device_port': 830, u'secondary_device_ip': u'192.168.100.101'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  vlan:
    description: Vlan tag for mx logical interface
    label: Vlan Tag
    type: string
  gw_vip:
    description: Virtual IP configured on VRRP
    label: Inet Address CIDR
    type: string
  primary_device_gw_ip:
    description: IP on primary device
    label: Inet Address CIDR
    type: string
  secondary_device_gw_ip:
    description: IP on secondary device
    label: Inet Address CIDR
    type: string
  netmask:
    description: Netmask for gw_ip
    label: Netmask
    type: number
  vrrp_group:
    type: string
    label: VRRP Group
  primary_device_priority:
    type: string
    label: Primary device priority
  secondary_device_priority:
    type: string
    label: Secondary device priority
  vrf_name:
    type: string
    label: VRF
  bgp_group_name:
    type: string
    label: Name of BGP Group on VRF
  primary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  secondary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  primary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  secondary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: primary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: primary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: primary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: secondary_device_gw_ip
              $APPLY_GROUP:
                    get_param: primary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: secondary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: secondary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: secondary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: primary_device_gw_ip
              $APPLY_GROUP:
                    get_param: secondary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  vrrp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: vrrp_pool
      resource_type: gw_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        vrid:
          - { get_param: vrrp_group }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          interface: { get_param: primary_logical_interface_name }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          interface: { get_param: secondary_logical_interface_name }
      syncer_properties:
        etcd:
          status:
            key: status
          hold_options:
            positive_status:
              primary: MASTER
              secondary: BACKUP
            time_seconds: 360
    depends_on: netconf_configure_secondary

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vrrp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vrrp_monitor, link]} (heat.py - 162)
2018-03-30 01:04:55,298 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:56,347 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:57,397 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:58,446 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:04:59,492 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:00,541 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:01,607 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:02,679 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:03,744 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:04,794 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:05,843 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:06,889 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:08,097 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:09,143 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:10,197 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Stack "gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:10,197 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - CREATED gw_interface_d84ce543-bc58-4844-b861-4a6d79fb2e48 (heat.py - 280)
2018-03-30 01:05:10,305 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Job create finished with results {'heat_outputs': [{u'output_value': u'23957481-7625-47c9-9dfd-770dcca7b8af', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/23957481-7625-47c9-9dfd-770dcca7b8af', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:10,497 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Job create:heat_worker:gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48:1:rt8tq finished. (job_queue.py - 266)
2018-03-30 01:05:10,497 [1;37mINFO[0m heat_worker - gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 - Trying to delete internal process state for resource gw_interface:d84ce543-bc58-4844-b861-4a6d79fb2e48 (resources.py - 701)
2018-03-30 01:05:10,743 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4:1:ue9pj using id: 104b6773-0449-4a88-b8b8-97d589b5a8fc (job_queue.py - 245)
2018-03-30 01:05:10,744 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:10,744 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:05:10,773 [1;34mDEBUG[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Starting work on new ready job create:heat_worker:port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4:1:ue9pj (etcd_worker.py - 108)
2018-03-30 01:05:10,773 [1;34mDEBUG[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Checking job status for port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (heat_stacks_worker.py - 44)
2018-03-30 01:05:10,806 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:port:7413e81d-f895-4527-ba5d-a86ffb663258:1:ghhjj using id: 43a0fee8-6268-4417-8469-4269c021f565 (job_queue.py - 245)
2018-03-30 01:05:10,807 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:10,807 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-03-30 01:05:10,865 [1;34mDEBUG[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Starting work on new ready job create:heat_worker:port:7413e81d-f895-4527-ba5d-a86ffb663258:1:ghhjj (etcd_worker.py - 108)
2018-03-30 01:05:10,866 [1;34mDEBUG[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Checking job status for port:7413e81d-f895-4527-ba5d-a86ffb663258 (heat_stacks_worker.py - 44)
2018-03-30 01:05:10,979 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:05:11,050 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-03-30 01:05:11,055 [1;34mDEBUG[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

 with parameters:
{"virtual_machine": "d84ce543-bc58-4844-b861-4a6d79fb2e48", "name": "4fca361d-fdaf-4b92-81a8-a4cdd767cad4", "admin_state_up": true, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:b1:3d:bf", "version": 1, "virtual_network": "73f88c22-ae22-4fb7-86b3-9acb141b8809", "security_groups": [], "uuid": "4fca361d-fdaf-4b92-81a8-a4cdd767cad4"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': False, u'jinja_force_dependency_gw_interface': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'jinja_fixed_ips': [{u'subnet_id': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'ip_address': u'172.16.101.153'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67']} (heat.py - 145)
2018-03-30 01:05:11,055 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Creating a stack port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4 with parameters: {u'virtual_machine': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'name': u'4fca361d-fdaf-4b92-81a8-a4cdd767cad4', u'admin_state_up': True, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:b1:3d:bf', u'version': 1, u'virtual_network': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'security_groups': [], u'uuid': u'4fca361d-fdaf-4b92-81a8-a4cdd767cad4'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }
 (heat.py - 162)
2018-03-30 01:05:11,129 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:05:11,352 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-03-30 01:05:11,356 [1;34mDEBUG[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

 with parameters:
{"virtual_machine": "d84ce543-bc58-4844-b861-4a6d79fb2e48", "name": "7413e81d-f895-4527-ba5d-a86ffb663258", "admin_state_up": true, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:19:71:4b", "version": 1, "virtual_network": "73f88c22-ae22-4fb7-86b3-9acb141b8809", "security_groups": [], "uuid": "7413e81d-f895-4527-ba5d-a86ffb663258"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': False, u'jinja_force_dependency_gw_interface': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'jinja_fixed_ips': [{u'subnet_id': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'ip_address': u'172.16.101.151'}, {u'subnet_id': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'ip_address': u'172.16.101.152'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67', u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67']} (heat.py - 145)
2018-03-30 01:05:11,356 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Creating a stack port_7413e81d-f895-4527-ba5d-a86ffb663258 with parameters: {u'virtual_machine': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'name': u'7413e81d-f895-4527-ba5d-a86ffb663258', u'admin_state_up': True, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:19:71:4b', u'version': 1, u'virtual_network': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'security_groups': [], u'uuid': u'7413e81d-f895-4527-ba5d-a86ffb663258'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }
 (heat.py - 162)
2018-03-30 01:05:12,405 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:12,437 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:13,474 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:13,506 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:14,563 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:14,607 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:15,861 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:15,861 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - CREATED port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (heat.py - 280)
2018-03-30 01:05:15,935 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:15,935 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - CREATED port_7413e81d-f895-4527-ba5d-a86ffb663258 (heat.py - 280)
2018-03-30 01:05:16,106 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Job create finished with results {'heat_outputs': [{u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:16,196 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Job create finished with results {'heat_outputs': [{u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:16,498 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Job create:heat_worker:port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4:1:ue9pj finished. (job_queue.py - 266)
2018-03-30 01:05:16,498 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Trying to delete internal process state for resource port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (resources.py - 701)
2018-03-30 01:05:16,589 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Job create:heat_worker:port:7413e81d-f895-4527-ba5d-a86ffb663258:1:ghhjj finished. (job_queue.py - 266)
2018-03-30 01:05:16,590 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Trying to delete internal process state for resource port:7413e81d-f895-4527-ba5d-a86ffb663258 (resources.py - 701)
2018-03-30 01:05:16,699 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f:1:llb22 using id: 18ed9b9a-8fec-464e-8c4e-23107a247155 (job_queue.py - 245)
2018-03-30 01:05:16,700 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:16,700 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:05:16,750 [1;34mDEBUG[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Starting work on new ready job create:heat_worker:ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f:1:llb22 (etcd_worker.py - 108)
2018-03-30 01:05:16,750 [1;34mDEBUG[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Checking job status for ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f (heat_stacks_worker.py - 44)
2018-03-30 01:05:16,798 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49:1:14txm using id: 17abd08f-cffd-4e4a-8dec-4b130dc93f9d (job_queue.py - 245)
2018-03-30 01:05:16,799 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:16,799 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-03-30 01:05:16,859 [1;34mDEBUG[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Starting work on new ready job create:heat_worker:ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49:1:14txm (etcd_worker.py - 108)
2018-03-30 01:05:16,859 [1;34mDEBUG[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Checking job status for ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 (heat_stacks_worker.py - 44)
2018-03-30 01:05:16,984 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:05:17,076 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Template id ese_logical_port resolved from mapping: Cese_logical_port (resources.py - 835)
2018-03-30 01:05:17,080 [1;34mDEBUG[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 4fca361d-fdaf-4b92-81a8-a4cdd767cad4
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 4fca361d-fdaf-4b92-81a8-a4cdd767cad4
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"logical_port_type": "L2", "logical_port_vlan_id": 1025, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_ip": "10.161.0.34", "version": 1, "virtual_machine_interface_ids": ["f68d0924-ef20-4c1b-ac45-0e6b879af5e7"], "logical_port_name": "xe-0/0/4.1025", "gohan_id": "d87b39f3-d117-46b4-ad1d-5b606d651b4f", "physical_port_id": "06bfe521-07f0-4931-9f8c-318c3ad8114e"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{u'jinja_port_ids': [u'4fca361d-fdaf-4b92-81a8-a4cdd767cad4']} (heat.py - 145)
2018-03-30 01:05:17,080 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Creating a stack ese_logical_port_d87b39f3-d117-46b4-ad1d-5b606d651b4f with parameters: {u'logical_port_type': u'L2', u'logical_port_vlan_id': 1025, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_ip': u'10.161.0.34', u'version': 1, u'virtual_machine_interface_ids': [u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7'], u'logical_port_name': u'xe-0/0/4.1025', u'gohan_id': u'd87b39f3-d117-46b4-ad1d-5b606d651b4f', u'physical_port_id': u'06bfe521-07f0-4931-9f8c-318c3ad8114e'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 4fca361d-fdaf-4b92-81a8-a4cdd767cad4
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 4fca361d-fdaf-4b92-81a8-a4cdd767cad4
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-03-30 01:05:17,090 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:05:17,176 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Template id ese_logical_port resolved from mapping: Cese_logical_port (resources.py - 835)
2018-03-30 01:05:17,181 [1;34mDEBUG[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 7413e81d-f895-4527-ba5d-a86ffb663258
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 7413e81d-f895-4527-ba5d-a86ffb663258
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"logical_port_type": "L2", "logical_port_vlan_id": 1025, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_ip": "10.161.0.34", "version": 1, "virtual_machine_interface_ids": ["f68d0924-ef20-4c1b-ac45-0e6b879af5e7"], "logical_port_name": "xe-0/0/3.1025", "gohan_id": "ecf42487-2aef-4e27-931c-8517b1632d49", "physical_port_id": "06bfe521-07f0-4931-9f8c-318c3ad8114e"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{u'jinja_port_ids': [u'7413e81d-f895-4527-ba5d-a86ffb663258']} (heat.py - 145)
2018-03-30 01:05:17,181 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Creating a stack ese_logical_port_ecf42487-2aef-4e27-931c-8517b1632d49 with parameters: {u'logical_port_type': u'L2', u'logical_port_vlan_id': 1025, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_ip': u'10.161.0.34', u'version': 1, u'virtual_machine_interface_ids': [u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7'], u'logical_port_name': u'xe-0/0/3.1025', u'gohan_id': u'ecf42487-2aef-4e27-931c-8517b1632d49', u'physical_port_id': u'06bfe521-07f0-4931-9f8c-318c3ad8114e'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 7413e81d-f895-4527-ba5d-a86ffb663258
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 7413e81d-f895-4527-ba5d-a86ffb663258
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-03-30 01:05:17,682 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Stack "ese_logical_port_d87b39f3-d117-46b4-ad1d-5b606d651b4f" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:17,880 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Stack "ese_logical_port_ecf42487-2aef-4e27-931c-8517b1632d49" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:18,731 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Stack "ese_logical_port_d87b39f3-d117-46b4-ad1d-5b606d651b4f" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:18,968 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Stack "ese_logical_port_ecf42487-2aef-4e27-931c-8517b1632d49" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:19,778 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Stack "ese_logical_port_d87b39f3-d117-46b4-ad1d-5b606d651b4f" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:20,016 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Stack "ese_logical_port_ecf42487-2aef-4e27-931c-8517b1632d49" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:20,896 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Stack "ese_logical_port_d87b39f3-d117-46b4-ad1d-5b606d651b4f" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:20,896 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - CREATED ese_logical_port_d87b39f3-d117-46b4-ad1d-5b606d651b4f (heat.py - 280)
2018-03-30 01:05:21,110 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Job create finished with results {'heat_outputs': [{u'output_value': u'8b3e197f-0e6c-4440-92b7-652d5cdaf733', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'46b0cd68-d0fb-4d72-9def-830164f9e215', u'description': u'A unique id for the logical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/8b3e197f-0e6c-4440-92b7-652d5cdaf733', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38.0', u'description': u'The name of the logical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:21,221 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Stack "ese_logical_port_ecf42487-2aef-4e27-931c-8517b1632d49" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:21,221 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - CREATED ese_logical_port_ecf42487-2aef-4e27-931c-8517b1632d49 (heat.py - 280)
2018-03-30 01:05:21,306 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Job create:heat_worker:ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f:1:llb22 finished. (job_queue.py - 266)
2018-03-30 01:05:21,306 [1;37mINFO[0m heat_worker - ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f - Trying to delete internal process state for resource ese_logical_port:d87b39f3-d117-46b4-ad1d-5b606d651b4f (resources.py - 701)
2018-03-30 01:05:21,514 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Job create finished with results {'heat_outputs': [{u'output_value': u'403bcdd8-8542-4d56-92f8-58b0f524aa7b', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'46b0cd68-d0fb-4d72-9def-830164f9e215', u'description': u'A unique id for the logical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/403bcdd8-8542-4d56-92f8-58b0f524aa7b', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38.0', u'description': u'The name of the logical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:21,607 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4:2:6ud3s using id: 67d9d615-7f85-4cce-a878-a15b1c26a9bd (job_queue.py - 245)
2018-03-30 01:05:21,608 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:21,609 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-03-30 01:05:21,656 [1;34mDEBUG[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Starting work on new ready job modify:heat_worker:port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4:2:6ud3s (etcd_worker.py - 108)
2018-03-30 01:05:21,657 [1;34mDEBUG[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Checking job status for port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (heat_stacks_worker.py - 44)
2018-03-30 01:05:21,689 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Job create:heat_worker:ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49:1:14txm finished. (job_queue.py - 266)
2018-03-30 01:05:21,690 [1;37mINFO[0m heat_worker - ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 - Trying to delete internal process state for resource ese_logical_port:ecf42487-2aef-4e27-931c-8517b1632d49 (resources.py - 701)
2018-03-30 01:05:22,011 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Found stack with status CREATE_COMPLETE for port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (heat_stacks_worker.py - 55)
2018-03-30 01:05:22,011 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - MODIFY STARTED (heat_messenger.py - 123)
2018-03-30 01:05:22,176 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:port:7413e81d-f895-4527-ba5d-a86ffb663258:2:vnnqf using id: c20ef4eb-8166-4c02-bf72-8742003dbd64 (job_queue.py - 245)
2018-03-30 01:05:22,177 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:22,177 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-03-30 01:05:22,217 [1;34mDEBUG[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Starting work on new ready job modify:heat_worker:port:7413e81d-f895-4527-ba5d-a86ffb663258:2:vnnqf (etcd_worker.py - 108)
2018-03-30 01:05:22,217 [1;34mDEBUG[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Checking job status for port:7413e81d-f895-4527-ba5d-a86ffb663258 (heat_stacks_worker.py - 44)
2018-03-30 01:05:22,548 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-03-30 01:05:22,552 [1;34mDEBUG[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }

 with parameters:
{"virtual_machine": "d84ce543-bc58-4844-b861-4a6d79fb2e48", "name": "4fca361d-fdaf-4b92-81a8-a4cdd767cad4", "admin_state_up": true, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:b1:3d:bf", "version": 2, "virtual_network": "73f88c22-ae22-4fb7-86b3-9acb141b8809", "security_groups": [], "uuid": "4fca361d-fdaf-4b92-81a8-a4cdd767cad4"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': True, u'jinja_force_dependency_gw_interface': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'jinja_fixed_ips': [{u'subnet_id': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'ip_address': u'172.16.101.153'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67']} (heat.py - 145)
2018-03-30 01:05:22,552 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Updating a stack port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4 with parameters: {u'virtual_machine': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'name': u'4fca361d-fdaf-4b92-81a8-a4cdd767cad4', u'admin_state_up': True, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:b1:3d:bf', u'version': 2, u'virtual_network': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'security_groups': [], u'uuid': u'4fca361d-fdaf-4b92-81a8-a4cdd767cad4'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }
 (heat.py - 186)
2018-03-30 01:05:22,637 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Found stack with status CREATE_COMPLETE for port:7413e81d-f895-4527-ba5d-a86ffb663258 (heat_stacks_worker.py - 55)
2018-03-30 01:05:22,638 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - MODIFY STARTED (heat_messenger.py - 123)
2018-03-30 01:05:22,945 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:23,180 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-03-30 01:05:23,185 [1;34mDEBUG[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }

 with parameters:
{"virtual_machine": "d84ce543-bc58-4844-b861-4a6d79fb2e48", "name": "7413e81d-f895-4527-ba5d-a86ffb663258", "admin_state_up": true, "tenant_id": "20511c5aef804417a03bf14ed8aea3b8", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:19:71:4b", "version": 2, "virtual_network": "73f88c22-ae22-4fb7-86b3-9acb141b8809", "security_groups": [], "uuid": "7413e81d-f895-4527-ba5d-a86ffb663258"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': True, u'jinja_force_dependency_gw_interface': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'jinja_fixed_ips': [{u'subnet_id': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'ip_address': u'172.16.101.151'}, {u'subnet_id': u'8fca93d6-5f0b-413d-98e0-74c3d1bacf07', u'ip_address': u'172.16.101.152'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67', u'a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67']} (heat.py - 145)
2018-03-30 01:05:23,185 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Updating a stack port_7413e81d-f895-4527-ba5d-a86ffb663258 with parameters: {u'virtual_machine': u'd84ce543-bc58-4844-b861-4a6d79fb2e48', u'name': u'7413e81d-f895-4527-ba5d-a86ffb663258', u'admin_state_up': True, u'tenant_id': u'20511c5aef804417a03bf14ed8aea3b8', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:19:71:4b', u'version': 2, u'virtual_network': u'73f88c22-ae22-4fb7-86b3-9acb141b8809', u'security_groups': [], u'uuid': u'7413e81d-f895-4527-ba5d-a86ffb663258'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 8fca93d6-5f0b-413d-98e0-74c3d1bacf07
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: a93e21d9-d8ad-4ea8-aaf0-7a03a7024f67
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }
 (heat.py - 186)
2018-03-30 01:05:23,470 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:23,994 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:24,544 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:25,045 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:25,590 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:26,591 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:26,850 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:27,644 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:27,945 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:28,692 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:29,002 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:29,739 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:30,067 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:30,788 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:31,121 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:31,836 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:32,198 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:05:32,971 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Stack "port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:32,971 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - MODIFIED port_4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (heat.py - 329)
2018-03-30 01:05:33,175 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Job modify finished with results {'heat_outputs': [{u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': u'7d83904d-f8d6-401a-85ee-2c3f3275685d', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}, {u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/7d83904d-f8d6-401a-85ee-2c3f3275685d', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:33,356 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Stack "port_7413e81d-f895-4527-ba5d-a86ffb663258" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-03-30 01:05:33,356 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - MODIFIED port_7413e81d-f895-4527-ba5d-a86ffb663258 (heat.py - 329)
2018-03-30 01:05:33,360 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Job modify:heat_worker:port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4:2:6ud3s finished. (job_queue.py - 266)
2018-03-30 01:05:33,361 [1;37mINFO[0m heat_worker - port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 - Trying to delete internal process state for resource port:4fca361d-fdaf-4b92-81a8-a4cdd767cad4 (resources.py - 701)
2018-03-30 01:05:33,575 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Job modify finished with results {'heat_outputs': [{u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': u'3eb90fa9-0c66-4bde-bb09-98883e40471f', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}, {u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/3eb90fa9-0c66-4bde-bb09-98883e40471f', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:05:33,749 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Job modify:heat_worker:port:7413e81d-f895-4527-ba5d-a86ffb663258:2:vnnqf finished. (job_queue.py - 266)
2018-03-30 01:05:33,749 [1;37mINFO[0m heat_worker - port:7413e81d-f895-4527-ba5d-a86ffb663258 - Trying to delete internal process state for resource port:7413e81d-f895-4527-ba5d-a86ffb663258 (resources.py - 701)
2018-03-30 01:05:52,179 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:05:52,180 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:05:52,180 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:06:22,187 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:06:22,187 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:06:22,188 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:06:45,247 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:static_route:07967b57-33c3-44b9-b1e7-47d85c840011:1:8fk39 using id: 42b502d2-7a37-44d8-8000-be375dda90b3 (job_queue.py - 245)
2018-03-30 01:06:45,249 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:06:45,249 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-03-30 01:06:45,333 [1;34mDEBUG[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Starting work on new ready job create:heat_worker:static_route:07967b57-33c3-44b9-b1e7-47d85c840011:1:8fk39 (etcd_worker.py - 108)
2018-03-30 01:06:45,334 [1;34mDEBUG[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Checking job status for static_route:07967b57-33c3-44b9-b1e7-47d85c840011 (heat_stacks_worker.py - 44)
2018-03-30 01:06:45,538 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - CREATE STARTED (heat_messenger.py - 92)
2018-03-30 01:06:45,601 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Template id static_route_internet resolved from mapping: ACstatic_route_&Pservice_type (resources.py - 835)
2018-03-30 01:06:45,605 [1;34mDEBUG[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Internet Gateway Static Route

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  vrf_name:
    description: Name of VRF to add this static route
    label: VRF
    type: string
  route:
    description: Static Route definition
    label: Route
    type: string
  next_hop:
    description: Next hop for the static route
    label: Next hop
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_ip": "192.168.100.102", "route": "203.0.112.0/28", "secondary_device_port": 830, "secondary_device_password": "***", "primary_device_password": "***", "next_hop": "172.16.101.1", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "primary_device_port": 830, "secondary_device_ip": "192.168.100.101", "secondary_device_username": "esi"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_dummy_dependency': u'6f583980-3f9e-458f-8f68-f42a7adfb211'} (heat.py - 145)
2018-03-30 01:06:45,605 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Creating a stack static_route_07967b57-33c3-44b9-b1e7-47d85c840011 with parameters: {u'primary_device_ip': u'192.168.100.102', u'route': u'203.0.112.0/28', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'primary_device_password': u'***', u'next_hop': u'172.16.101.1', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'primary_device_port': 830, u'secondary_device_ip': u'192.168.100.101', u'secondary_device_username': u'esi'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Internet Gateway Static Route

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  vrf_name:
    description: Name of VRF to add this static route
    label: VRF
    type: string
  route:
    description: Static Route definition
    label: Route
    type: string
  next_hop:
    description: Next hop for the static route
    label: Next hop
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 162)
2018-03-30 01:06:46,045 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:47,092 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:48,140 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:49,187 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:50,235 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:51,281 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:52,434 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:53,482 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:54,532 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:55,578 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:56,625 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:57,674 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-03-30 01:06:58,720 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Stack "static_route_07967b57-33c3-44b9-b1e7-47d85c840011" in status "CREATE_COMPLETE" (heat.py - 221)
2018-03-30 01:06:58,720 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - CREATED static_route_07967b57-33c3-44b9-b1e7-47d85c840011 (heat.py - 280)
2018-03-30 01:06:58,816 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Job create finished with results {'heat_outputs': [], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-03-30 01:06:58,947 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Job create:heat_worker:static_route:07967b57-33c3-44b9-b1e7-47d85c840011:1:8fk39 finished. (job_queue.py - 266)
2018-03-30 01:06:58,947 [1;37mINFO[0m heat_worker - static_route:07967b57-33c3-44b9-b1e7-47d85c840011 - Trying to delete internal process state for resource static_route:07967b57-33c3-44b9-b1e7-47d85c840011 (resources.py - 701)
2018-03-30 01:07:15,259 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:07:15,260 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:07:15,260 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:07:45,267 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:07:45,268 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:07:45,268 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:08:15,278 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:08:15,279 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:08:15,279 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:08:45,288 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:08:45,288 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:08:45,288 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:09:15,293 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:09:15,293 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:09:15,293 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:09:45,299 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:09:45,299 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:09:45,300 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:10:15,305 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:10:15,305 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:10:15,306 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:10:45,309 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:10:45,309 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:10:45,309 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:11:15,316 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:11:15,316 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:11:15,316 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:11:45,326 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:11:45,326 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:11:45,327 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:12:15,337 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:12:15,338 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:12:15,338 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:12:45,345 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:12:45,345 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:12:45,345 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:13:15,352 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:13:15,352 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:13:15,352 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:13:45,359 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:13:45,359 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:13:45,360 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:14:15,368 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:14:15,369 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:14:15,369 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:14:45,375 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:14:45,375 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:14:45,376 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:15:15,383 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:15:15,384 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:15:15,384 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:15:45,394 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:15:45,395 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:15:45,395 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:16:15,403 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:16:15,404 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:16:15,404 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:16:45,406 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:16:45,406 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:16:45,406 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:17:15,410 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:17:15,411 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:17:15,411 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:17:45,419 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:17:45,419 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:17:45,419 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:18:15,427 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:18:15,428 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:18:15,428 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:18:45,430 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:18:45,431 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:18:45,431 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:19:15,440 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:19:15,441 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:19:15,441 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:19:45,444 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:19:45,444 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:19:45,444 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:20:15,455 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:20:15,455 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:20:15,455 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:20:45,465 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:20:45,466 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:20:45,466 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:21:15,472 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:21:15,472 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:21:15,472 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:21:45,483 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:21:45,484 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:21:45,484 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:22:15,490 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:22:15,490 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:22:15,490 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:22:45,498 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:22:45,499 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:22:45,499 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:23:15,510 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:23:15,510 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:23:15,510 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:23:45,522 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:23:45,522 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:23:45,522 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:24:15,532 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:24:15,532 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:24:15,532 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:24:45,539 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:24:45,539 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:24:45,539 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:25:15,549 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:25:15,549 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:25:15,550 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:25:45,561 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:25:45,561 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:25:45,561 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:26:15,565 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:26:15,565 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:26:15,565 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:26:45,568 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:26:45,568 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:26:45,569 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:27:15,570 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:27:15,570 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:27:15,570 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:27:45,581 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:27:45,581 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:27:45,581 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:28:15,591 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:28:15,591 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:28:15,591 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:28:45,601 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:28:45,601 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:28:45,601 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:29:15,610 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:29:15,610 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:29:15,610 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:29:45,620 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:29:45,621 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:29:45,621 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:30:15,624 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:30:15,624 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:30:15,624 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:30:45,633 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:30:45,633 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:30:45,633 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-03-30 01:31:15,643 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-03-30 01:31:15,644 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-03-30 01:31:15,644 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
