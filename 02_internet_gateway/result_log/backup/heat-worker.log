2018-04-04 04:52:01,645 [1;37mINFO[0m heat_worker - Registered gohan 2-step delete flag: marked_for_deletion (resources.py - 62)
2018-04-04 04:52:01,646 [1;37mINFO[0m heat_worker - Gohan config path: /config (resources.py - 274)
2018-04-04 04:52:01,646 [1;37mINFO[0m heat_worker - Gohan state path: /state (resources.py - 298)
2018-04-04 04:52:01,809 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 1s. (gohan.py - 28)
2018-04-04 04:52:02,814 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 2s. (gohan.py - 28)
2018-04-04 04:52:04,819 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 4s. (gohan.py - 28)
2018-04-04 04:52:08,827 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 8s. (gohan.py - 28)
================================================
2018-04-04 04:52:17,049 [1;34mDEBUG[0m heat_worker - Starting worker. (etcd_worker.py - 231)
2018-04-04 04:52:17,049 [1;37mINFO[0m heat_worker - Worker started. (etcd_worker.py - 234)
2018-04-04 04:52:17,051 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:52:17,051 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:52:26,274 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214:1:sb69v using id: ff4c6ba7-eadd-4a43-98ce-f91db9949594 (job_queue.py - 245)
2018-04-04 04:52:26,277 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:52:26,277 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:52:26,288 [1;34mDEBUG[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Starting work on new ready job create:heat_worker:ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214:1:sb69v (etcd_worker.py - 108)
2018-04-04 04:52:26,288 [1;34mDEBUG[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Checking job status for ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 (heat_stacks_worker.py - 44)
2018-04-04 04:52:26,967 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:52:27,075 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Template id ese_device_existing resolved from mapping: ACese_device_&Pexisting (resources.py - 835)
2018-04-04 04:52:27,082 [1;34mDEBUG[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  ESE Device (existing) template

parameters:
  name:
    type: string
    label: Physical Router Name
    description: Name of the physical router that will be created.
  hostname:
    type: string
    label: Hostname
    description: Name of host (vrouter) to create router on
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Device
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_router:
    type: OS::Contrail::ExistingResource
    properties:
      fq_name:
        - "default-global-system-config"
        - { get_param: hostname }
      resource_type: "physical_router"

  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: ese_devices
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: switch
      properties:
        device_ip: { get_param: device_ip }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: switch
    depends_on: physical_router

outputs:
  id:
    description: A unique id for the physical router.
    value: { get_resource: physical_router }
  name:
    description: The name of the physical router.
    value: { get_attr: [physical_router, name] }
  fq_name:
    description: The FQ name of the physical router.
    value: { get_attr: [physical_router, fq_name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link] }
 with parameters:
{"device_ip": "10.161.0.34", "name": "QFX-NW02", "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "hostname": "QFX-NW02", "version": 1, "gohan_id": "3fb53223-b614-46b6-92e8-25c3bcbed214"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:52:27,083 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Creating a stack ese_device_3fb53223-b614-46b6-92e8-25c3bcbed214 with parameters: {u'device_ip': u'10.161.0.34', u'name': u'QFX-NW02', u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'hostname': u'QFX-NW02', u'version': 1, u'gohan_id': u'3fb53223-b614-46b6-92e8-25c3bcbed214'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  ESE Device (existing) template

parameters:
  name:
    type: string
    label: Physical Router Name
    description: Name of the physical router that will be created.
  hostname:
    type: string
    label: Hostname
    description: Name of host (vrouter) to create router on
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Device
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_router:
    type: OS::Contrail::ExistingResource
    properties:
      fq_name:
        - "default-global-system-config"
        - { get_param: hostname }
      resource_type: "physical_router"

  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: ese_devices
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: switch
      properties:
        device_ip: { get_param: device_ip }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: switch
    depends_on: physical_router

outputs:
  id:
    description: A unique id for the physical router.
    value: { get_resource: physical_router }
  name:
    description: The name of the physical router.
    value: { get_attr: [physical_router, name] }
  fq_name:
    description: The FQ name of the physical router.
    value: { get_attr: [physical_router, fq_name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link] } (heat.py - 162)
2018-04-04 04:52:27,785 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Stack "ese_device_3fb53223-b614-46b6-92e8-25c3bcbed214" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:52:28,936 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Stack "ese_device_3fb53223-b614-46b6-92e8-25c3bcbed214" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:52:30,133 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Stack "ese_device_3fb53223-b614-46b6-92e8-25c3bcbed214" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:52:31,554 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Stack "ese_device_3fb53223-b614-46b6-92e8-25c3bcbed214" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:52:31,555 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - CREATED ese_device_3fb53223-b614-46b6-92e8-25c3bcbed214 (heat.py - 280)
2018-04-04 04:52:32,227 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Job create finished with results {'heat_outputs': [{u'output_value': u'bd8bbbcc-b175-4ea2-bfce-9821677d4da4', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'default-global-system-config', u'NWSDP-JNPR-02'], u'description': u'The FQ name of the physical router.', u'output_key': u'fq_name'}, {u'output_value': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'description': u'A unique id for the physical router.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/bd8bbbcc-b175-4ea2-bfce-9821677d4da4', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'NWSDP-JNPR-02', u'description': u'The name of the physical router.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:52:32,288 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Job create:heat_worker:ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214:1:sb69v finished. (job_queue.py - 266)
2018-04-04 04:52:32,288 [1;37mINFO[0m heat_worker - ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 - Trying to delete internal process state for resource ese_device:3fb53223-b614-46b6-92e8-25c3bcbed214 (resources.py - 701)
2018-04-04 04:52:56,282 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:52:56,282 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:52:56,283 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:53:26,288 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:53:26,288 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:53:26,289 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:53:37,549 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9:1:hapn7 using id: cb5f9e0e-8bb9-4c4c-a5cf-40f06e30976c (job_queue.py - 245)
2018-04-04 04:53:37,551 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:53:37,552 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:53:37,560 [1;34mDEBUG[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Starting work on new ready job create:heat_worker:ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9:1:hapn7 (etcd_worker.py - 108)
2018-04-04 04:53:37,560 [1;34mDEBUG[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Checking job status for ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 (heat_stacks_worker.py - 44)
2018-04-04 04:53:37,885 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:53:37,972 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Template id ese_physical_port_new resolved from mapping: ACese_physical_port_&Pexisting (resources.py - 835)
2018-04-04 04:53:37,977 [1;34mDEBUG[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"physical_port_name": "xe-0/0/3", "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_ip": "10.161.0.34", "physical_device": "7e5c78fa-71c0-427e-947f-586b1fc3c470", "version": 1, "gohan_id": "887fecdd-956b-47fa-a348-8940c53a5bf9"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:53:37,977 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Creating a stack ese_physical_port_887fecdd-956b-47fa-a348-8940c53a5bf9 with parameters: {u'physical_port_name': u'xe-0/0/3', u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_ip': u'10.161.0.34', u'physical_device': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'version': 1, u'gohan_id': u'887fecdd-956b-47fa-a348-8940c53a5bf9'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-04 04:53:38,453 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Stack "ese_physical_port_887fecdd-956b-47fa-a348-8940c53a5bf9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:53:39,666 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Stack "ese_physical_port_887fecdd-956b-47fa-a348-8940c53a5bf9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:53:40,991 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Stack "ese_physical_port_887fecdd-956b-47fa-a348-8940c53a5bf9" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:53:40,992 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - CREATED ese_physical_port_887fecdd-956b-47fa-a348-8940c53a5bf9 (heat.py - 280)
2018-04-04 04:53:41,415 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Job create finished with results {'heat_outputs': [{u'output_value': u'f6c72cbd-294e-4894-87b5-c98c67554265', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'06bfe521-07f0-4931-9f8c-318c3ad8114e', u'description': u'A unique id for the physical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/f6c72cbd-294e-4894-87b5-c98c67554265', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38', u'description': u'The name of the physical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:53:41,454 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Job create:heat_worker:ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9:1:hapn7 finished. (job_queue.py - 266)
2018-04-04 04:53:41,455 [1;37mINFO[0m heat_worker - ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 - Trying to delete internal process state for resource ese_physical_port:887fecdd-956b-47fa-a348-8940c53a5bf9 (resources.py - 701)
2018-04-04 04:54:07,559 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:54:07,560 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:54:07,561 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:54:37,573 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:54:37,574 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:54:37,574 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:54:43,203 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6:1:xkegm using id: bb7a0652-4346-4705-b629-748170b162c6 (job_queue.py - 245)
2018-04-04 04:54:43,205 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:54:43,205 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:54:43,212 [1;34mDEBUG[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Starting work on new ready job create:heat_worker:ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6:1:xkegm (etcd_worker.py - 108)
2018-04-04 04:54:43,212 [1;34mDEBUG[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Checking job status for ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 (heat_stacks_worker.py - 44)
2018-04-04 04:54:43,503 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:54:43,591 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Template id ese_physical_port_new resolved from mapping: ACese_physical_port_&Pexisting (resources.py - 835)
2018-04-04 04:54:43,595 [1;34mDEBUG[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"physical_port_name": "xe-0/0/4", "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_ip": "10.161.0.34", "physical_device": "7e5c78fa-71c0-427e-947f-586b1fc3c470", "version": 1, "gohan_id": "6b29894f-8694-4865-92c1-2e78360e65a6"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:54:43,596 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Creating a stack ese_physical_port_6b29894f-8694-4865-92c1-2e78360e65a6 with parameters: {u'physical_port_name': u'xe-0/0/4', u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_ip': u'10.161.0.34', u'physical_device': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'version': 1, u'gohan_id': u'6b29894f-8694-4865-92c1-2e78360e65a6'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-04 04:54:44,054 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Stack "ese_physical_port_6b29894f-8694-4865-92c1-2e78360e65a6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:54:45,229 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Stack "ese_physical_port_6b29894f-8694-4865-92c1-2e78360e65a6" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:54:46,658 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Stack "ese_physical_port_6b29894f-8694-4865-92c1-2e78360e65a6" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:54:46,658 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - CREATED ese_physical_port_6b29894f-8694-4865-92c1-2e78360e65a6 (heat.py - 280)
2018-04-04 04:54:47,363 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Job create finished with results {'heat_outputs': [{u'output_value': u'02761d5d-f2ae-4806-bff6-df5851f514ed', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'06bfe521-07f0-4931-9f8c-318c3ad8114e', u'description': u'A unique id for the physical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/02761d5d-f2ae-4806-bff6-df5851f514ed', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38', u'description': u'The name of the physical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:54:47,418 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Job create:heat_worker:ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6:1:xkegm finished. (job_queue.py - 266)
2018-04-04 04:54:47,420 [1;37mINFO[0m heat_worker - ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 - Trying to delete internal process state for resource ese_physical_port:6b29894f-8694-4865-92c1-2e78360e65a6 (resources.py - 701)
2018-04-04 04:55:13,213 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:55:13,214 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:55:13,215 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:55:43,229 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:55:43,230 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:55:43,231 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:55:43,524 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78:1:a4a0e using id: 84b40c7a-0857-44d0-833e-134c6befe1d9 (job_queue.py - 245)
2018-04-04 04:55:43,528 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:55:43,528 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:55:43,547 [1;34mDEBUG[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Starting work on new ready job create:heat_worker:edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78:1:a4a0e (etcd_worker.py - 108)
2018-04-04 04:55:43,547 [1;34mDEBUG[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Checking job status for edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 (heat_stacks_worker.py - 44)
2018-04-04 04:55:43,866 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:55:43,954 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Template id edge_router resolved from mapping: Cedge_router (resources.py - 835)
2018-04-04 04:55:43,958 [1;34mDEBUG[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]}
 with parameters:
{"gohan_id": "cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78", "device_ip": "10.79.5.185", "version": 1, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:55:43,959 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Creating a stack edge_router_cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 with parameters: {u'gohan_id': u'cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78', u'device_ip': u'10.79.5.185', u'version': 1, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]} (heat.py - 162)
2018-04-04 04:55:44,502 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Stack "edge_router_cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:55:45,694 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Stack "edge_router_cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:55:45,695 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - CREATED edge_router_cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 (heat.py - 280)
2018-04-04 04:55:46,003 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Job create finished with results {'heat_outputs': [{u'output_value': u'9363d0ec-e347-482c-8d0d-da1d8e11ad73', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/9363d0ec-e347-482c-8d0d-da1d8e11ad73', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:55:46,046 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Job create:heat_worker:edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78:1:a4a0e finished. (job_queue.py - 266)
2018-04-04 04:55:46,046 [1;37mINFO[0m heat_worker - edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 - Trying to delete internal process state for resource edge_router:cbe0fe23-8461-4a71-a7cc-a3a1d8c1fd78 (resources.py - 701)
2018-04-04 04:56:13,533 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:56:13,534 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:56:13,534 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:56:43,547 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:56:43,548 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:56:43,548 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:56:47,883 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659:1:t7my3 using id: e95b4211-223f-4aec-8f5e-4000e8ae82b8 (job_queue.py - 245)
2018-04-04 04:56:47,884 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:56:47,885 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:56:47,898 [1;34mDEBUG[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Starting work on new ready job create:heat_worker:edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659:1:t7my3 (etcd_worker.py - 108)
2018-04-04 04:56:47,904 [1;34mDEBUG[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Checking job status for edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 (heat_stacks_worker.py - 44)
2018-04-04 04:56:48,272 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:56:48,386 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Template id edge_router resolved from mapping: Cedge_router (resources.py - 835)
2018-04-04 04:56:48,388 [1;34mDEBUG[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]}
 with parameters:
{"gohan_id": "ca43aedb-bc30-4355-a931-7bb1d9040659", "device_ip": "10.79.5.184", "version": 1, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:56:48,389 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Creating a stack edge_router_ca43aedb-bc30-4355-a931-7bb1d9040659 with parameters: {u'gohan_id': u'ca43aedb-bc30-4355-a931-7bb1d9040659', u'device_ip': u'10.79.5.184', u'version': 1, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]} (heat.py - 162)
2018-04-04 04:56:48,900 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Stack "edge_router_ca43aedb-bc30-4355-a931-7bb1d9040659" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:56:50,076 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Stack "edge_router_ca43aedb-bc30-4355-a931-7bb1d9040659" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:56:50,077 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - CREATED edge_router_ca43aedb-bc30-4355-a931-7bb1d9040659 (heat.py - 280)
2018-04-04 04:56:50,383 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Job create finished with results {'heat_outputs': [{u'output_value': u'538cfead-67e3-4e5b-87a4-ad8f32b14366', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/538cfead-67e3-4e5b-87a4-ad8f32b14366', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:56:50,433 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Job create:heat_worker:edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659:1:t7my3 finished. (job_queue.py - 266)
2018-04-04 04:56:50,435 [1;37mINFO[0m heat_worker - edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 - Trying to delete internal process state for resource edge_router:ca43aedb-bc30-4355-a931-7bb1d9040659 (resources.py - 701)
2018-04-04 04:57:17,898 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:57:17,899 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:57:17,899 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:57:47,910 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:57:47,911 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:57:47,911 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:57:54,773 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd:1:4i1bo using id: ad1a45e7-272c-4cc8-9b37-4fbf37d726ae (job_queue.py - 245)
2018-04-04 04:57:54,775 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:57:54,776 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:57:54,788 [1;34mDEBUG[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Starting work on new ready job create:heat_worker:er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd:1:4i1bo (etcd_worker.py - 108)
2018-04-04 04:57:54,788 [1;34mDEBUG[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Checking job status for er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd (heat_stacks_worker.py - 44)
2018-04-04 04:57:55,097 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:57:55,186 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-04-04 04:57:55,190 [1;34mDEBUG[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_ip": "10.79.5.185", "if_name": "ae0", "version": 1, "gohan_id": "53712736-354c-4374-be82-6f07bea9d1bd"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:57:55,190 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Creating a stack er_physical_interface_53712736-354c-4374-be82-6f07bea9d1bd with parameters: {u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_ip': u'10.79.5.185', u'if_name': u'ae0', u'version': 1, u'gohan_id': u'53712736-354c-4374-be82-6f07bea9d1bd'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-04-04 04:57:55,685 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Stack "er_physical_interface_53712736-354c-4374-be82-6f07bea9d1bd" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:57:56,863 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Stack "er_physical_interface_53712736-354c-4374-be82-6f07bea9d1bd" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:57:56,864 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - CREATED er_physical_interface_53712736-354c-4374-be82-6f07bea9d1bd (heat.py - 280)
2018-04-04 04:57:57,215 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Job create finished with results {'heat_outputs': [{u'output_value': u'c38b03bf-0c61-44ff-9dec-599c9951df58', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/c38b03bf-0c61-44ff-9dec-599c9951df58', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:57:57,271 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Job create:heat_worker:er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd:1:4i1bo finished. (job_queue.py - 266)
2018-04-04 04:57:57,272 [1;37mINFO[0m heat_worker - er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd - Trying to delete internal process state for resource er_physical_interface:53712736-354c-4374-be82-6f07bea9d1bd (resources.py - 701)
2018-04-04 04:58:24,788 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:58:24,788 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:58:24,789 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:58:54,801 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:58:54,802 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:58:54,802 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:58:59,566 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128:1:jo3rt using id: f338613c-fa39-407a-8259-5d77f275570d (job_queue.py - 245)
2018-04-04 04:58:59,568 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:58:59,568 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 04:58:59,579 [1;34mDEBUG[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Starting work on new ready job create:heat_worker:er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128:1:jo3rt (etcd_worker.py - 108)
2018-04-04 04:58:59,580 [1;34mDEBUG[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Checking job status for er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 (heat_stacks_worker.py - 44)
2018-04-04 04:58:59,874 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 04:58:59,961 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-04-04 04:58:59,963 [1;34mDEBUG[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_ip": "10.79.5.184", "if_name": "ae0", "version": 1, "gohan_id": "d108a472-81ab-43a0-8c49-e0d1a46e6128"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 04:58:59,964 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Creating a stack er_physical_interface_d108a472-81ab-43a0-8c49-e0d1a46e6128 with parameters: {u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_ip': u'10.79.5.184', u'if_name': u'ae0', u'version': 1, u'gohan_id': u'd108a472-81ab-43a0-8c49-e0d1a46e6128'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-04-04 04:59:00,458 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Stack "er_physical_interface_d108a472-81ab-43a0-8c49-e0d1a46e6128" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 04:59:01,617 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Stack "er_physical_interface_d108a472-81ab-43a0-8c49-e0d1a46e6128" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 04:59:01,618 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - CREATED er_physical_interface_d108a472-81ab-43a0-8c49-e0d1a46e6128 (heat.py - 280)
2018-04-04 04:59:01,955 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Job create finished with results {'heat_outputs': [{u'output_value': u'79b7fc42-ebaf-4c34-adeb-20b43803a4fc', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/79b7fc42-ebaf-4c34-adeb-20b43803a4fc', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 04:59:02,035 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Job create:heat_worker:er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128:1:jo3rt finished. (job_queue.py - 266)
2018-04-04 04:59:02,036 [1;37mINFO[0m heat_worker - er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 - Trying to delete internal process state for resource er_physical_interface:d108a472-81ab-43a0-8c49-e0d1a46e6128 (resources.py - 701)
2018-04-04 04:59:29,584 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:59:29,585 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:59:29,585 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 04:59:59,595 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 04:59:59,595 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 04:59:59,595 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:00:29,190 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9:1:5duk4 using id: a8a8108a-7b7b-4808-9e6c-277f1a1060d1 (job_queue.py - 245)
2018-04-04 05:00:29,192 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:00:29,192 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:00:29,205 [1;34mDEBUG[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Starting work on new ready job create:heat_worker:internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9:1:5duk4 (etcd_worker.py - 108)
2018-04-04 05:00:29,206 [1;34mDEBUG[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Checking job status for internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 (heat_stacks_worker.py - 44)
2018-04-04 05:00:29,512 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:00:29,603 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Template id internet_gateway resolved from mapping: Cinternet_gateway (resources.py - 835)
2018-04-04 05:00:29,627 [1;34mDEBUG[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Internet GW Instance

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: Physical port on the Primary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_interface:
    description: Name of the created logical interface on the Primary device
    label: Logical Interface name
    type: string
  secondary_device_physical_interface:
    description: Physical port on the Secondary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_interface:
    description: Name of the created logical interface on the Secondary device
    label: Logical Interface name
    type: string
  vlan:
    description: vlan tag used by logical interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interface
    label: VRF name
    type: string
  vrf_import_policy:
    description: Import Policy for IGS
    label: Import Policy
    type: string
  vrf_export_policy:
    description: Export Policy for IGS
    label: Export Policy
    type: string
  uplink_import_policy:
    description: Uplink Import Policy for IGS
    label: Uplink Import Policy
    type: string
  input_filter_name:
    description: Policer name to use as input policer
    label: Input policer name
    type: string
  output_filter_name:
    description: Policer name to use as output policer
    label: Output policer name
    type: string
  primary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  secondary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  inet_in_filter:
    label: Internet Input Filter
    type: string
  inet_out_filter:
    label: Internet Output Filter
    type: string
  prefix_list_name:
    label: Prefix list name
    type: string
  filter_term_name:
    label: Filter term name
    type: string
  counter_name_in:
    type: string
    label: Input counter name
  counter_name_out:
    type: string
    label: Output counter name
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:

  netconf_configure_primary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: primary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: primary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: secondary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: secondary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs



  primary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: primary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: primary_device_ip }
        port: { get_param: primary_device_port }
        login: { get_param: primary_device_username }
        password: { get_param: primary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary

  secondary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: secondary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: secondary_device_ip }
        port: { get_param: secondary_device_port }
        login: { get_param: secondary_device_username }
        password: { get_param: secondary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary


outputs:

  primary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: primary_igs_metric_monitor}
  primary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [primary_igs_metric_monitor, link]}

  secondary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: secondary_igs_metric_monitor}
  secondary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [secondary_igs_metric_monitor, link]}

 with parameters:
{"vrf_export_policy": "INSTANCE-USER_OUT", "secondary_device_physical_interface": "ae0", "counter_name_out": "vrf_gw_sample-ha-router-downlink_1025_OUT", "primary_device_logical_interface": "ae0.1025", "primary_device_password": "***", "gohan_id": "f6e8c695-c4c1-4a93-9b7e-1663aee6dec9", "vrf_import_policy": "INSTANCE-USER_IN", "prefix_list_name": "vrf_gw_sample-ha-router-downlink_1025_prefix", "output_filter_name": "FILTER_10M-GA-DOWN-INET", "secondary_vrrp_config_group": "InetGW2-VRRP", "primary_device_ip": "10.79.5.185", "version": 1, "inet_in_filter": "INET_IN", "primary_vrrp_config_group": "InetGW1-VRRP", "secondary_device_logical_interface": "ae0.1025", "counter_name_in": "vrf_gw_sample-ha-router-downlink_1025_IN", "inet_out_filter": "INET_OUT", "vlan": "1025", "primary_device_physical_interface": "ae0", "uplink_import_policy": "INSTANCE-MASTER_IN", "input_filter_name": "FILTER_10M-GA-UP-INET", "filter_term_name": "vrf_gw_sample-ha-router-downlink_1025_filter", "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "secondary_device_port": 830, "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "secondary_device_username": "esi", "primary_device_port": 830, "secondary_device_ip": "10.79.5.184"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_vrf_config': u''} (heat.py - 145)
2018-04-04 05:00:29,629 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Creating a stack internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 with parameters: {u'vrf_export_policy': u'INSTANCE-USER_OUT', u'secondary_device_physical_interface': u'ae0', u'counter_name_out': u'vrf_gw_sample-ha-router-downlink_1025_OUT', u'primary_device_logical_interface': u'ae0.1025', u'primary_device_password': u'***', u'gohan_id': u'f6e8c695-c4c1-4a93-9b7e-1663aee6dec9', u'vrf_import_policy': u'INSTANCE-USER_IN', u'prefix_list_name': u'vrf_gw_sample-ha-router-downlink_1025_prefix', u'output_filter_name': u'FILTER_10M-GA-DOWN-INET', u'secondary_vrrp_config_group': u'InetGW2-VRRP', u'primary_device_ip': u'10.79.5.185', u'version': 1, u'inet_in_filter': u'INET_IN', u'primary_vrrp_config_group': u'InetGW1-VRRP', u'secondary_device_logical_interface': u'ae0.1025', u'counter_name_in': u'vrf_gw_sample-ha-router-downlink_1025_IN', u'inet_out_filter': u'INET_OUT', u'vlan': u'1025', u'primary_device_physical_interface': u'ae0', u'uplink_import_policy': u'INSTANCE-MASTER_IN', u'input_filter_name': u'FILTER_10M-GA-UP-INET', u'filter_term_name': u'vrf_gw_sample-ha-router-downlink_1025_filter', u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'secondary_device_username': u'esi', u'primary_device_port': 830, u'secondary_device_ip': u'10.79.5.184'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Internet GW Instance

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: Physical port on the Primary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_interface:
    description: Name of the created logical interface on the Primary device
    label: Logical Interface name
    type: string
  secondary_device_physical_interface:
    description: Physical port on the Secondary device on which the logical port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_interface:
    description: Name of the created logical interface on the Secondary device
    label: Logical Interface name
    type: string
  vlan:
    description: vlan tag used by logical interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interface
    label: VRF name
    type: string
  vrf_import_policy:
    description: Import Policy for IGS
    label: Import Policy
    type: string
  vrf_export_policy:
    description: Export Policy for IGS
    label: Export Policy
    type: string
  uplink_import_policy:
    description: Uplink Import Policy for IGS
    label: Uplink Import Policy
    type: string
  input_filter_name:
    description: Policer name to use as input policer
    label: Input policer name
    type: string
  output_filter_name:
    description: Policer name to use as output policer
    label: Output policer name
    type: string
  primary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  secondary_vrrp_config_group:
    description: Name for apply group to use for interface for VRRP
    label: Apply group name
    type: string
  inet_in_filter:
    label: Internet Input Filter
    type: string
  inet_out_filter:
    label: Internet Output Filter
    type: string
  prefix_list_name:
    label: Prefix list name
    type: string
  filter_term_name:
    label: Filter term name
    type: string
  counter_name_in:
    type: string
    label: Input counter name
  counter_name_out:
    type: string
    label: Output counter name
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:

  netconf_configure_primary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: primary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: primary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      on_update: merge
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $APPLY_GROUP:
                get_param: secondary_vrrp_config_group
              $VLAN:
                get_param: vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description inet_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
      - config:
          str_replace:
            params:
              $LIF:
                get_param: secondary_device_logical_interface
              $IMPORT_POLICY:
                get_param: vrf_import_policy
              $EXPORT_POLICY:
                get_param: vrf_export_policy
            template: |
                instance-type virtual-router;
                interface $LIF;
                routing-options instance-import $IMPORT_POLICY;
                routing-options instance-export $EXPORT_POLICY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VRF_NAME:
                get_param: vrf_name
            template: |
              from instance $VRF_NAME;
              then accept;
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: policy-statement
            name: { get_param: uplink_import_policy }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: vrf_name }
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  destination-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_IN;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_in_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_IN:
                get_param: inet_in_filter
            template: |
              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept
      - config:
          str_replace:
            params:
              $PREFIX_LIST_NAME:
                get_param: prefix_list_name
              $VRF_NAME:
                get_param: vrf_name
            template: |
               from {
                  source-prefix-list {
                       $PREFIX_LIST_NAME;
                  }
               }
               then {
                    count $VRF_NAME_OUT;
                    accept;
               }
        path:
          - config_type: tag
            xml_type: tag
            tag: firewall
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: filter
            name: { get_param: inet_out_filter }
          - config_type: named_tag
            xml_type: named_tag
            tag: term
            name: { get_param: filter_term_name }
        additional_commands:
          str_replace:
            params:
              $TERM_NAME:
                get_param: filter_term_name
              $INET_OUT:
                get_param: inet_out_filter
            template: |
              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs



  primary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: primary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: primary_device_ip }
        port: { get_param: primary_device_port }
        login: { get_param: primary_device_username }
        password: { get_param: primary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary

  secondary_igs_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: igs_counter
      resource_type: internet_gateways
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: secondary_counter
      properties:
        counter_name_in: { get_param: counter_name_in }
        counter_name_out: { get_param: counter_name_out }
        host: { get_param: secondary_device_ip }
        port: { get_param: secondary_device_port }
        login: { get_param: secondary_device_username }
        password: { get_param: secondary_device_password }
        primary_device_ip: { get_param: primary_device_ip }
        secondary_device_ip: { get_param: secondary_device_ip }
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: netconf_configure_secondary


outputs:

  primary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: primary_igs_metric_monitor}
  primary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [primary_igs_metric_monitor, link]}

  secondary_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: secondary_igs_metric_monitor}
  secondary_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [secondary_igs_metric_monitor, link]}
 (heat.py - 162)
2018-04-04 05:00:30,383 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:31,553 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:32,783 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:33,956 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:35,113 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:36,258 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:37,427 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:38,584 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:39,731 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:40,877 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:42,026 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:43,171 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:44,314 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:45,500 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:46,661 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:47,966 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:00:49,230 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Stack "internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:00:49,230 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - CREATED internet_gateway_f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 (heat.py - 280)
2018-04-04 05:00:49,584 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Job create finished with results {'heat_outputs': [{u'output_value': u'ca354a39-f48c-4698-9cdd-9e106e2a5bf4', u'description': u'Monitoring Target ID', u'output_key': u'primary_monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/e4609dae-5c88-494a-bdb5-19187026ccfc', u'description': u'Monitoring Process Link', u'output_key': u'secondary_monitoring_link'}, {u'output_value': u'e4609dae-5c88-494a-bdb5-19187026ccfc', u'description': u'Monitoring Target ID', u'output_key': u'secondary_monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/ca354a39-f48c-4698-9cdd-9e106e2a5bf4', u'description': u'Monitoring Process Link', u'output_key': u'primary_monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:00:49,698 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Job create:heat_worker:internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9:1:5duk4 finished. (job_queue.py - 266)
2018-04-04 05:00:49,699 [1;37mINFO[0m heat_worker - internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 - Trying to delete internal process state for resource internet_gateway:f6e8c695-c4c1-4a93-9b7e-1663aee6dec9 (resources.py - 701)
2018-04-04 05:00:59,209 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:00:59,209 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:00:59,210 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:01:03,840 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2:1:91crv using id: 6f19d19f-7ef9-4a9d-89d9-0477784bc72e (job_queue.py - 245)
2018-04-04 05:01:03,842 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:01:03,842 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:01:03,852 [1;34mDEBUG[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Starting work on new ready job create:heat_worker:public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2:1:91crv (etcd_worker.py - 108)
2018-04-04 05:01:03,853 [1;34mDEBUG[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Checking job status for public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 (heat_stacks_worker.py - 44)
2018-04-04 05:01:04,155 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:01:04,246 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Template id public_ip resolved from mapping: Cpublic_ip (resources.py - 835)
2018-04-04 05:01:04,254 [1;34mDEBUG[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  QoS Option

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  prefix_list_name:
    label: Prefix List name.
    type: string
  ip_cidr:
    label: Public IP CIDR
    type: string
  ip_mask:
    label: Public IP CIDR
    type: string
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_ip": "10.79.5.185", "secondary_device_port": 830, "secondary_device_password": "***", "ip_mask": 28, "primary_device_password": "***", "ip_cidr": "203.0.112.0", "primary_device_username": "esi", "prefix_list_name": "vrf_gw_sample-ha-router-downlink_1025_prefix", "primary_device_port": 830, "secondary_device_ip": "10.79.5.184", "secondary_device_username": "esi"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 05:01:04,254 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Creating a stack public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2 with parameters: {u'primary_device_ip': u'10.79.5.185', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'ip_mask': 28, u'primary_device_password': u'***', u'ip_cidr': u'203.0.112.0', u'primary_device_username': u'esi', u'prefix_list_name': u'vrf_gw_sample-ha-router-downlink_1025_prefix', u'primary_device_port': 830, u'secondary_device_ip': u'10.79.5.184', u'secondary_device_username': u'esi'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  QoS Option

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  prefix_list_name:
    label: Prefix List name.
    type: string
  ip_cidr:
    label: Public IP CIDR
    type: string
  ip_mask:
    label: Public IP CIDR
    type: string
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: policy-options
          - config_type: named_tag
            xml_type: named_tag
            tag: prefix-list
            name: { get_param: prefix_list_name }
          - config_type: name
            xml_type: named_tag
            tag: prefix-list-item
            name:
              str_replace:
                params:
                  $CIDR:
                    { get_param: ip_cidr }
                  $MASK:
                    { get_param: ip_mask }
                template: |
                  $CIDR/$MASK
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 162)
2018-04-04 05:01:04,737 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:05,896 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:07,051 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:08,219 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:09,362 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:10,512 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:11,660 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:12,799 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Stack "public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:01:12,800 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - CREATED public_ip_d5622781-f06a-4fad-b800-b577a05ad8b2 (heat.py - 280)
2018-04-04 05:01:13,185 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Job create finished with results {'heat_outputs': [], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:01:13,249 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Job create:heat_worker:public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2:1:91crv finished. (job_queue.py - 266)
2018-04-04 05:01:13,250 [1;37mINFO[0m heat_worker - public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 - Trying to delete internal process state for resource public_ip:d5622781-f06a-4fad-b800-b577a05ad8b2 (resources.py - 701)
2018-04-04 05:01:27,514 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e:1:tlbso using id: 5ebd8de4-c12e-478f-afa7-2dbce9cc724e (job_queue.py - 245)
2018-04-04 05:01:27,516 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:01:27,516 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:01:27,526 [1;34mDEBUG[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Starting work on new ready job create:heat_worker:network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e:1:tlbso (etcd_worker.py - 108)
2018-04-04 05:01:27,527 [1;34mDEBUG[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Checking job status for network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e (heat_stacks_worker.py - 44)
2018-04-04 05:01:27,833 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:01:27,917 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Template id network resolved from mapping: Cnetwork (resources.py - 835)
2018-04-04 05:01:27,921 [1;34mDEBUG[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Network template

parameters:
  uuid:
    type: string
    label: Virtual Network UUID
    description: UUID of the virtual network that will be created.
    default: ""
  name:
    type: string
    label: Virtual Network Name
    description: Name of the virtual network that will be created.
  forwarding_mode:
    type: string
    label: Forwarding Mode
    description: Forwarding Mode.
    default: 'l2_l3'
  route_targets:
    type: comma_delimited_list
    label: Route Targets list
    default: []
  shared:
    type: boolean
    label: Shared Network
    default: false
  external:
    type: boolean
    label: External Network
    default: true
  allow_transit:
    type: boolean
    label: Allow Transit
    default: false
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true

resources:
  network:
    type: OS::Contrail::VirtualNetwork
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      forwarding_mode: { get_param: forwarding_mode }
      route_targets: { get_param: route_targets }
      shared: { get_param: shared }
      admin_state_up: { get_param: admin_state_up }

outputs:
  id:
    description: A unique id for the virtual network.
    value: { get_resource: network }
  name:
    description: The name of the virtual network.
    value: { get_attr: [network, name] }
  fq_name:
    description: The FQ name of the virtual network.
    value: { get_attr: [network, fq_name] }
  route_targets:
    description: The name of the virtual network.
    value: { get_attr: [network, route_targets] }
 with parameters:
{"admin_state_up": true, "uuid": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e", "name": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 05:01:27,921 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Creating a stack network_6e557507-1c2a-49b1-ba90-5f616a1f1f3e with parameters: {u'admin_state_up': True, u'uuid': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'name': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Network template

parameters:
  uuid:
    type: string
    label: Virtual Network UUID
    description: UUID of the virtual network that will be created.
    default: ""
  name:
    type: string
    label: Virtual Network Name
    description: Name of the virtual network that will be created.
  forwarding_mode:
    type: string
    label: Forwarding Mode
    description: Forwarding Mode.
    default: 'l2_l3'
  route_targets:
    type: comma_delimited_list
    label: Route Targets list
    default: []
  shared:
    type: boolean
    label: Shared Network
    default: false
  external:
    type: boolean
    label: External Network
    default: true
  allow_transit:
    type: boolean
    label: Allow Transit
    default: false
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true

resources:
  network:
    type: OS::Contrail::VirtualNetwork
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      forwarding_mode: { get_param: forwarding_mode }
      route_targets: { get_param: route_targets }
      shared: { get_param: shared }
      admin_state_up: { get_param: admin_state_up }

outputs:
  id:
    description: A unique id for the virtual network.
    value: { get_resource: network }
  name:
    description: The name of the virtual network.
    value: { get_attr: [network, name] }
  fq_name:
    description: The FQ name of the virtual network.
    value: { get_attr: [network, fq_name] }
  route_targets:
    description: The name of the virtual network.
    value: { get_attr: [network, route_targets] } (heat.py - 162)
2018-04-04 05:01:28,420 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Stack "network_6e557507-1c2a-49b1-ba90-5f616a1f1f3e" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:29,715 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Stack "network_6e557507-1c2a-49b1-ba90-5f616a1f1f3e" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:01:29,715 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - CREATED network_6e557507-1c2a-49b1-ba90-5f616a1f1f3e (heat.py - 280)
2018-04-04 05:01:30,200 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Job create finished with results {'heat_outputs': [{u'output_value': [], u'description': u'The name of the virtual network.', u'output_key': u'route_targets'}, {u'output_value': u'default-domain:usertenant:6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'description': u'The FQ name of the virtual network.', u'output_key': u'fq_name'}, {u'output_value': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'description': u'A unique id for the virtual network.', u'output_key': u'id'}, {u'output_value': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'description': u'The name of the virtual network.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:01:30,252 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Job create:heat_worker:network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e:1:tlbso finished. (job_queue.py - 266)
2018-04-04 05:01:30,252 [1;37mINFO[0m heat_worker - network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e - Trying to delete internal process state for resource network:6e557507-1c2a-49b1-ba90-5f616a1f1f3e (resources.py - 701)
2018-04-04 05:01:44,981 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b:1:gqv2s using id: a89e096c-676b-4e20-9be6-6c6bf26115bb (job_queue.py - 245)
2018-04-04 05:01:44,983 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:01:44,983 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:01:44,996 [1;34mDEBUG[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Starting work on new ready job create:heat_worker:subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b:1:gqv2s (etcd_worker.py - 108)
2018-04-04 05:01:44,998 [1;34mDEBUG[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Checking job status for subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b (heat_stacks_worker.py - 44)
2018-04-04 05:01:45,315 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:01:45,403 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Template id subnet resolved from mapping: Csubnet (resources.py - 835)
2018-04-04 05:01:45,408 [1;34mDEBUG[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Subnet template

parameters:
  name:
    type: string
    label: Local Subnet Name
    description: Name of the local subnet that will be created.
  network_id:
    type: string
    label: Network ID
    description: ID of the network for which subnet will be created.
  cidr:
    type: string
    label: Local Subnet IP prefix
    description: IP prefix of the local subnet that will be created.
  gateway_ip:
    default: "0.0.0.0"
    type: string
    label: Default Gateway
    description: Default gateway for the local subnet that will be created.
  ipam:
    type: string
    label: IP Address Management
    description: IPAM for the local subnet that will be created.
    default: ''
  enable_dhcp:
    type: boolean
    label: Enable DHCP
    description: Enable DHCP
    default: true
  dhcp_server_address:
    type: string
    label: DHCP Server address
    description: DHCP Server address
    default: "0.0.0.0"
  allocation_pools:
    type: string
    label: Allocation Pools
    description: Allocation Pools
    default: []
  dns_nameservers:
    type: comma_delimited_list
    label: DNS Nameservers List
    description: DNS Nameservers List
    default: []
  ntp_servers:
    type: comma_delimited_list
    label: NTP Nameservers List
    description: NTP Nameservers List
    default: []
  host_routes:
    type: json
    label: Host Routes
    description: Host Routes
    default: []

resources:
  subnet:
    type: OS::Contrail::VnSubnet
    properties:
      name: { get_param: name }
      network_id: { get_param: network_id }
      ip_prefix: { get_param: cidr }
      default_gateway: { get_param: gateway_ip }
      ipam: { get_param: ipam }
      enable_dhcp: { get_param: enable_dhcp }
      dns_server_address: { get_param: dhcp_server_address }
      dns_nameservers: { get_param: dns_nameservers }
      ntp_servers: { get_param: ntp_servers }
      host_routes: { get_param: host_routes }
      allocation_pools: { get_param: allocation_pools }
      gateway_is_vrouter: false

outputs:
  id:
    description: A unique id for the local subnet.
    value: { get_resource: subnet }
  name:
    description: The name of the local subnet.
    value: { get_attr: [subnet, name] }
  network_id:
    description: A unique id for the network.
    value: { get_attr: [subnet, network_id] }
  ip_prefix:
    description: IP prefix of local subnet.
    value: { get_attr: [subnet, ip_prefix] }
  default_gateway:
    description: Default gateway of local subnet.
    value: { get_attr: [subnet, default_gateway] }
  ipam:
    description: IPAM this local subnet uses.
    value: { get_attr: [subnet, ipam] }
 with parameters:
{"name": "67877f2d-0547-4cea-a6ce-2e3b937aa31b", "enable_dhcp": true, "network_id": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e", "ipam": "default-domain:default-project:default-network-ipam", "dns_nameservers": [], "allocation_pools": [{"start": "172.16.101.2", "end": "172.16.101.254"}], "dhcp_server_address": "172.16.101.2", "ntp_servers": [], "gateway_ip": "172.16.101.1", "host_routes": [], "cidr": "172.16.101.0/24"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-04 05:01:45,409 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Creating a stack subnet_67877f2d-0547-4cea-a6ce-2e3b937aa31b with parameters: {u'name': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'enable_dhcp': True, u'network_id': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'ipam': u'default-domain:default-project:default-network-ipam', u'dns_nameservers': [], u'allocation_pools': [{u'start': u'172.16.101.2', u'end': u'172.16.101.254'}], u'dhcp_server_address': u'172.16.101.2', u'ntp_servers': [], u'gateway_ip': u'172.16.101.1', u'host_routes': [], u'cidr': u'172.16.101.0/24'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Subnet template

parameters:
  name:
    type: string
    label: Local Subnet Name
    description: Name of the local subnet that will be created.
  network_id:
    type: string
    label: Network ID
    description: ID of the network for which subnet will be created.
  cidr:
    type: string
    label: Local Subnet IP prefix
    description: IP prefix of the local subnet that will be created.
  gateway_ip:
    default: "0.0.0.0"
    type: string
    label: Default Gateway
    description: Default gateway for the local subnet that will be created.
  ipam:
    type: string
    label: IP Address Management
    description: IPAM for the local subnet that will be created.
    default: ''
  enable_dhcp:
    type: boolean
    label: Enable DHCP
    description: Enable DHCP
    default: true
  dhcp_server_address:
    type: string
    label: DHCP Server address
    description: DHCP Server address
    default: "0.0.0.0"
  allocation_pools:
    type: string
    label: Allocation Pools
    description: Allocation Pools
    default: []
  dns_nameservers:
    type: comma_delimited_list
    label: DNS Nameservers List
    description: DNS Nameservers List
    default: []
  ntp_servers:
    type: comma_delimited_list
    label: NTP Nameservers List
    description: NTP Nameservers List
    default: []
  host_routes:
    type: json
    label: Host Routes
    description: Host Routes
    default: []

resources:
  subnet:
    type: OS::Contrail::VnSubnet
    properties:
      name: { get_param: name }
      network_id: { get_param: network_id }
      ip_prefix: { get_param: cidr }
      default_gateway: { get_param: gateway_ip }
      ipam: { get_param: ipam }
      enable_dhcp: { get_param: enable_dhcp }
      dns_server_address: { get_param: dhcp_server_address }
      dns_nameservers: { get_param: dns_nameservers }
      ntp_servers: { get_param: ntp_servers }
      host_routes: { get_param: host_routes }
      allocation_pools: { get_param: allocation_pools }
      gateway_is_vrouter: false

outputs:
  id:
    description: A unique id for the local subnet.
    value: { get_resource: subnet }
  name:
    description: The name of the local subnet.
    value: { get_attr: [subnet, name] }
  network_id:
    description: A unique id for the network.
    value: { get_attr: [subnet, network_id] }
  ip_prefix:
    description: IP prefix of local subnet.
    value: { get_attr: [subnet, ip_prefix] }
  default_gateway:
    description: Default gateway of local subnet.
    value: { get_attr: [subnet, default_gateway] }
  ipam:
    description: IPAM this local subnet uses.
    value: { get_attr: [subnet, ipam] } (heat.py - 162)
2018-04-04 05:01:45,887 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Stack "subnet_67877f2d-0547-4cea-a6ce-2e3b937aa31b" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:01:47,299 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Stack "subnet_67877f2d-0547-4cea-a6ce-2e3b937aa31b" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:01:47,299 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - CREATED subnet_67877f2d-0547-4cea-a6ce-2e3b937aa31b (heat.py - 280)
2018-04-04 05:01:47,833 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Job create finished with results {'heat_outputs': [{u'output_value': u'172.16.101.0/24', u'description': u'IP prefix of local subnet.', u'output_key': u'ip_prefix'}, {u'output_value': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'description': u'The name of the local subnet.', u'output_key': u'name'}, {u'output_value': u'172.16.101.1', u'description': u'Default gateway of local subnet.', u'output_key': u'default_gateway'}, {u'output_value': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'description': u'A unique id for the network.', u'output_key': u'network_id'}, {u'output_value': u'5a79909b-2bf3-4e26-8a9c-0bf6bb175457', u'description': u'IPAM this local subnet uses.', u'output_key': u'ipam'}, {u'output_value': u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1', u'description': u'A unique id for the local subnet.', u'output_key': u'id'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:01:47,887 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Job create:heat_worker:subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b:1:gqv2s finished. (job_queue.py - 266)
2018-04-04 05:01:47,887 [1;37mINFO[0m heat_worker - subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b - Trying to delete internal process state for resource subnet:67877f2d-0547-4cea-a6ce-2e3b937aa31b (resources.py - 701)
2018-04-04 05:02:03,496 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405:1:y9zyx using id: d0882aea-629f-4fe4-a974-23be8555e9f0 (job_queue.py - 245)
2018-04-04 05:02:03,499 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:03,499 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:03,518 [1;34mDEBUG[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Starting work on new ready job create:heat_worker:gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405:1:y9zyx (etcd_worker.py - 108)
2018-04-04 05:02:03,518 [1;34mDEBUG[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Checking job status for gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 (heat_stacks_worker.py - 44)
2018-04-04 05:02:03,858 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:02:03,944 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Template id gw_interface_internet resolved from mapping: ACgw_interface_&Pservice_type (resources.py - 835)
2018-04-04 05:02:03,957 [1;34mDEBUG[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  vlan:
    description: Vlan tag for mx logical interface
    label: Vlan Tag
    type: string
  gw_vip:
    description: Virtual IP configured on VRRP
    label: Inet Address CIDR
    type: string
  primary_device_gw_ip:
    description: IP on primary device
    label: Inet Address CIDR
    type: string
  secondary_device_gw_ip:
    description: IP on secondary device
    label: Inet Address CIDR
    type: string
  netmask:
    description: Netmask for gw_ip
    label: Netmask
    type: number
  vrrp_group:
    type: string
    label: VRRP Group
  primary_device_priority:
    type: string
    label: Primary device priority
  secondary_device_priority:
    type: string
    label: Secondary device priority
  vrf_name:
    type: string
    label: VRF
  bgp_group_name:
    type: string
    label: Name of BGP Group on VRF
  primary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  secondary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  primary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  secondary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: primary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: primary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: primary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: secondary_device_gw_ip
              $APPLY_GROUP:
                    get_param: primary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: secondary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: secondary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: secondary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: primary_device_gw_ip
              $APPLY_GROUP:
                    get_param: secondary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  vrrp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: vrrp_pool
      resource_type: gw_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        vrid:
          - { get_param: vrrp_group }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          interface: { get_param: primary_logical_interface_name }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          interface: { get_param: secondary_logical_interface_name }
      syncer_properties:
        etcd:
          status:
            key: status
          hold_options:
            positive_status:
              primary: MASTER
              secondary: BACKUP
            time_seconds: 360
    depends_on: netconf_configure_secondary

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vrrp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vrrp_monitor, link]}
 with parameters:
{"secondary_device_physical_interface": "ae0", "secondary_ibgp_config_group": "InetGW1-RI-IBGP", "primary_device_password": "***", "secondary_device_gw_ip": "172.16.101.153", "gohan_id": "ce8831fd-d30c-41e3-95de-feaee0b95405", "bgp_group_name": "inet-gw-group", "gw_vip": "172.16.101.151", "primary_device_ip": "10.79.5.185", "version": 1, "secondary_device_username": "esi", "secondary_logical_interface_name": "ae0.1025", "primary_logical_interface_name": "ae0.1025", "vlan": "1025", "primary_device_physical_interface": "ae0", "netmask": 24, "vrrp_group": 20, "primary_device_priority": "105", "primary_device_gw_ip": "172.16.101.152", "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "secondary_device_port": 830, "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "secondary_device_priority": "100", "primary_ibgp_config_group": "InetGW2-RI-IBGP", "primary_device_port": 830, "secondary_device_ip": "10.79.5.184"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_dummy_dependency': u'', u'jinja_force_dependency': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e'} (heat.py - 145)
2018-04-04 05:02:03,958 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Creating a stack gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405 with parameters: {u'secondary_device_physical_interface': u'ae0', u'secondary_ibgp_config_group': u'InetGW1-RI-IBGP', u'primary_device_password': u'***', u'secondary_device_gw_ip': u'172.16.101.153', u'gohan_id': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'bgp_group_name': u'inet-gw-group', u'gw_vip': u'172.16.101.151', u'primary_device_ip': u'10.79.5.185', u'version': 1, u'secondary_device_username': u'esi', u'secondary_logical_interface_name': u'ae0.1025', u'primary_logical_interface_name': u'ae0.1025', u'vlan': u'1025', u'primary_device_physical_interface': u'ae0', u'netmask': 24, u'vrrp_group': 20, u'primary_device_priority': u'105', u'primary_device_gw_ip': u'172.16.101.152', u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'secondary_device_priority': u'100', u'primary_ibgp_config_group': u'InetGW2-RI-IBGP', u'primary_device_port': 830, u'secondary_device_ip': u'10.79.5.184'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  vlan:
    description: Vlan tag for mx logical interface
    label: Vlan Tag
    type: string
  gw_vip:
    description: Virtual IP configured on VRRP
    label: Inet Address CIDR
    type: string
  primary_device_gw_ip:
    description: IP on primary device
    label: Inet Address CIDR
    type: string
  secondary_device_gw_ip:
    description: IP on secondary device
    label: Inet Address CIDR
    type: string
  netmask:
    description: Netmask for gw_ip
    label: Netmask
    type: number
  vrrp_group:
    type: string
    label: VRRP Group
  primary_device_priority:
    type: string
    label: Primary device priority
  secondary_device_priority:
    type: string
    label: Secondary device priority
  vrf_name:
    type: string
    label: VRF
  bgp_group_name:
    type: string
    label: Name of BGP Group on VRF
  primary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  secondary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  primary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  secondary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: primary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: primary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: primary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: secondary_device_gw_ip
              $APPLY_GROUP:
                    get_param: primary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: secondary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: secondary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: secondary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: primary_device_gw_ip
              $APPLY_GROUP:
                    get_param: secondary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP
              local-address $DEVICE_GW_IP;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  vrrp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: vrrp_pool
      resource_type: gw_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        vrid:
          - { get_param: vrrp_group }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          interface: { get_param: primary_logical_interface_name }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          interface: { get_param: secondary_logical_interface_name }
      syncer_properties:
        etcd:
          status:
            key: status
          hold_options:
            positive_status:
              primary: MASTER
              secondary: BACKUP
            time_seconds: 360
    depends_on: netconf_configure_secondary

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vrrp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vrrp_monitor, link]} (heat.py - 162)
2018-04-04 05:02:04,487 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:05,653 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:06,799 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:07,944 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:09,106 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:10,251 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:11,401 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:12,547 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:13,711 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:14,849 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:15,990 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:17,141 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:18,282 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:19,480 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:20,639 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:21,801 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:22,992 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Stack "gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:22,992 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - CREATED gw_interface_ce8831fd-d30c-41e3-95de-feaee0b95405 (heat.py - 280)
2018-04-04 05:02:23,322 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Job create finished with results {'heat_outputs': [{u'output_value': u'921a9234-0ae4-44f5-89b0-2f68dcaaae5b', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/921a9234-0ae4-44f5-89b0-2f68dcaaae5b', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:23,381 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Job create:heat_worker:gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405:1:y9zyx finished. (job_queue.py - 266)
2018-04-04 05:02:23,381 [1;37mINFO[0m heat_worker - gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 - Trying to delete internal process state for resource gw_interface:ce8831fd-d30c-41e3-95de-feaee0b95405 (resources.py - 701)
2018-04-04 05:02:23,428 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:port:ce965922-538a-4335-9644-7a98dce9fb47:1:39xjr using id: e17c11cc-fff3-4a22-b804-656dd1253ea8 (job_queue.py - 245)
2018-04-04 05:02:23,430 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:23,430 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:23,441 [1;34mDEBUG[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Starting work on new ready job create:heat_worker:port:ce965922-538a-4335-9644-7a98dce9fb47:1:39xjr (etcd_worker.py - 108)
2018-04-04 05:02:23,442 [1;34mDEBUG[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Checking job status for port:ce965922-538a-4335-9644-7a98dce9fb47 (heat_stacks_worker.py - 44)
2018-04-04 05:02:23,461 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:port:f3867a99-de18-4512-8e94-f9aaa7b05c3a:1:wrrh0 using id: 23433079-3411-414c-9f71-81c1e5c0bde9 (job_queue.py - 245)
2018-04-04 05:02:23,463 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:23,463 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:23,472 [1;34mDEBUG[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Starting work on new ready job create:heat_worker:port:f3867a99-de18-4512-8e94-f9aaa7b05c3a:1:wrrh0 (etcd_worker.py - 108)
2018-04-04 05:02:23,473 [1;34mDEBUG[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Checking job status for port:f3867a99-de18-4512-8e94-f9aaa7b05c3a (heat_stacks_worker.py - 44)
2018-04-04 05:02:23,772 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:02:23,839 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:02:23,871 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-04 05:02:23,884 [1;34mDEBUG[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

 with parameters:
{"virtual_machine": "ce8831fd-d30c-41e3-95de-feaee0b95405", "name": "ce965922-538a-4335-9644-7a98dce9fb47", "admin_state_up": true, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:41:7c:23", "version": 1, "virtual_network": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e", "security_groups": [], "uuid": "ce965922-538a-4335-9644-7a98dce9fb47"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': False, u'jinja_force_dependency_gw_interface': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'jinja_fixed_ips': [{u'subnet_id': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'ip_address': u'172.16.101.153'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1']} (heat.py - 145)
2018-04-04 05:02:23,884 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Creating a stack port_ce965922-538a-4335-9644-7a98dce9fb47 with parameters: {u'virtual_machine': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'name': u'ce965922-538a-4335-9644-7a98dce9fb47', u'admin_state_up': True, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:41:7c:23', u'version': 1, u'virtual_network': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'security_groups': [], u'uuid': u'ce965922-538a-4335-9644-7a98dce9fb47'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }
 (heat.py - 162)
2018-04-04 05:02:23,959 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-04 05:02:23,976 [1;34mDEBUG[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

 with parameters:
{"virtual_machine": "ce8831fd-d30c-41e3-95de-feaee0b95405", "name": "f3867a99-de18-4512-8e94-f9aaa7b05c3a", "admin_state_up": true, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:c5:2b:92", "version": 1, "virtual_network": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e", "security_groups": [], "uuid": "f3867a99-de18-4512-8e94-f9aaa7b05c3a"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': False, u'jinja_force_dependency_gw_interface': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'jinja_fixed_ips': [{u'subnet_id': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'ip_address': u'172.16.101.151'}, {u'subnet_id': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'ip_address': u'172.16.101.152'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1', u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1']} (heat.py - 145)
2018-04-04 05:02:23,977 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Creating a stack port_f3867a99-de18-4512-8e94-f9aaa7b05c3a with parameters: {u'virtual_machine': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'name': u'f3867a99-de18-4512-8e94-f9aaa7b05c3a', u'admin_state_up': True, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:c5:2b:92', u'version': 1, u'virtual_network': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'security_groups': [], u'uuid': u'f3867a99-de18-4512-8e94-f9aaa7b05c3a'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }
 (heat.py - 162)
2018-04-04 05:02:24,795 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:24,804 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:26,130 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:26,263 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:27,352 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:27,655 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:27,656 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - CREATED port_ce965922-538a-4335-9644-7a98dce9fb47 (heat.py - 280)
2018-04-04 05:02:28,108 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Job create finished with results {'heat_outputs': [{u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:28,257 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Job create:heat_worker:port:ce965922-538a-4335-9644-7a98dce9fb47:1:39xjr finished. (job_queue.py - 266)
2018-04-04 05:02:28,260 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Trying to delete internal process state for resource port:ce965922-538a-4335-9644-7a98dce9fb47 (resources.py - 701)
2018-04-04 05:02:28,312 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066:1:f6hf7 using id: 13189d3c-507a-485b-b3ec-21038f22e48e (job_queue.py - 245)
2018-04-04 05:02:28,314 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:28,314 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:28,323 [1;34mDEBUG[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Starting work on new ready job create:heat_worker:ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066:1:f6hf7 (etcd_worker.py - 108)
2018-04-04 05:02:28,324 [1;34mDEBUG[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Checking job status for ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 (heat_stacks_worker.py - 44)
2018-04-04 05:02:28,709 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:28,709 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - CREATED port_f3867a99-de18-4512-8e94-f9aaa7b05c3a (heat.py - 280)
2018-04-04 05:02:28,712 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:02:28,810 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Template id ese_logical_port resolved from mapping: Cese_logical_port (resources.py - 835)
2018-04-04 05:02:28,819 [1;34mDEBUG[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: ce965922-538a-4335-9644-7a98dce9fb47
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: ce965922-538a-4335-9644-7a98dce9fb47
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"logical_port_type": "L2", "logical_port_vlan_id": 1025, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_ip": "10.161.0.34", "version": 1, "virtual_machine_interface_ids": ["f68d0924-ef20-4c1b-ac45-0e6b879af5e7"], "logical_port_name": "xe-0/0/4.1025", "gohan_id": "aabc9b64-ec2c-4894-a6a8-ee0ea429c066", "physical_port_id": "06bfe521-07f0-4931-9f8c-318c3ad8114e"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{u'jinja_port_ids': [u'ce965922-538a-4335-9644-7a98dce9fb47']} (heat.py - 145)
2018-04-04 05:02:28,819 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Creating a stack ese_logical_port_aabc9b64-ec2c-4894-a6a8-ee0ea429c066 with parameters: {u'logical_port_type': u'L2', u'logical_port_vlan_id': 1025, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_ip': u'10.161.0.34', u'version': 1, u'virtual_machine_interface_ids': [u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7'], u'logical_port_name': u'xe-0/0/4.1025', u'gohan_id': u'aabc9b64-ec2c-4894-a6a8-ee0ea429c066', u'physical_port_id': u'06bfe521-07f0-4931-9f8c-318c3ad8114e'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: ce965922-538a-4335-9644-7a98dce9fb47
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: ce965922-538a-4335-9644-7a98dce9fb47
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-04 05:02:29,314 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Job create finished with results {'heat_outputs': [{u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:29,381 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Job create:heat_worker:port:f3867a99-de18-4512-8e94-f9aaa7b05c3a:1:wrrh0 finished. (job_queue.py - 266)
2018-04-04 05:02:29,388 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Trying to delete internal process state for resource port:f3867a99-de18-4512-8e94-f9aaa7b05c3a (resources.py - 701)
2018-04-04 05:02:29,421 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892:1:7a64g using id: 6a526543-9fdc-4d24-9a4b-b9ea6ee646ce (job_queue.py - 245)
2018-04-04 05:02:29,423 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:29,423 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:29,437 [1;34mDEBUG[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Starting work on new ready job create:heat_worker:ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892:1:7a64g (etcd_worker.py - 108)
2018-04-04 05:02:29,439 [1;34mDEBUG[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Checking job status for ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 (heat_stacks_worker.py - 44)
2018-04-04 05:02:29,691 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Stack "ese_logical_port_aabc9b64-ec2c-4894-a6a8-ee0ea429c066" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:29,920 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:02:30,044 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Template id ese_logical_port resolved from mapping: Cese_logical_port (resources.py - 835)
2018-04-04 05:02:30,054 [1;34mDEBUG[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: f3867a99-de18-4512-8e94-f9aaa7b05c3a
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: f3867a99-de18-4512-8e94-f9aaa7b05c3a
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"logical_port_type": "L2", "logical_port_vlan_id": 1025, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_ip": "10.161.0.34", "version": 1, "virtual_machine_interface_ids": ["f68d0924-ef20-4c1b-ac45-0e6b879af5e7"], "logical_port_name": "xe-0/0/3.1025", "gohan_id": "02112bb1-389c-4ff8-9354-94ab43459892", "physical_port_id": "06bfe521-07f0-4931-9f8c-318c3ad8114e"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{u'jinja_port_ids': [u'f3867a99-de18-4512-8e94-f9aaa7b05c3a']} (heat.py - 145)
2018-04-04 05:02:30,056 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Creating a stack ese_logical_port_02112bb1-389c-4ff8-9354-94ab43459892 with parameters: {u'logical_port_type': u'L2', u'logical_port_vlan_id': 1025, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_ip': u'10.161.0.34', u'version': 1, u'virtual_machine_interface_ids': [u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7'], u'logical_port_name': u'xe-0/0/3.1025', u'gohan_id': u'02112bb1-389c-4ff8-9354-94ab43459892', u'physical_port_id': u'06bfe521-07f0-4931-9f8c-318c3ad8114e'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: f3867a99-de18-4512-8e94-f9aaa7b05c3a
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: f3867a99-de18-4512-8e94-f9aaa7b05c3a
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-04 05:02:30,931 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Stack "ese_logical_port_02112bb1-389c-4ff8-9354-94ab43459892" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:30,950 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Stack "ese_logical_port_aabc9b64-ec2c-4894-a6a8-ee0ea429c066" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:32,211 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Stack "ese_logical_port_02112bb1-389c-4ff8-9354-94ab43459892" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:32,366 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Stack "ese_logical_port_aabc9b64-ec2c-4894-a6a8-ee0ea429c066" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:32,367 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - CREATED ese_logical_port_aabc9b64-ec2c-4894-a6a8-ee0ea429c066 (heat.py - 280)
2018-04-04 05:02:32,821 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Job create finished with results {'heat_outputs': [{u'output_value': u'81ea42e1-779e-4c1e-8f19-82d6019ee14c', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'46b0cd68-d0fb-4d72-9def-830164f9e215', u'description': u'A unique id for the logical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/81ea42e1-779e-4c1e-8f19-82d6019ee14c', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38.0', u'description': u'The name of the logical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:32,859 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Job create:heat_worker:ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066:1:f6hf7 finished. (job_queue.py - 266)
2018-04-04 05:02:32,860 [1;37mINFO[0m heat_worker - ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 - Trying to delete internal process state for resource ese_logical_port:aabc9b64-ec2c-4894-a6a8-ee0ea429c066 (resources.py - 701)
2018-04-04 05:02:33,028 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:port:ce965922-538a-4335-9644-7a98dce9fb47:2:loltx using id: be9f7ad5-96b3-496e-b931-976052cab0d6 (job_queue.py - 245)
2018-04-04 05:02:33,031 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:33,031 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:33,035 [1;34mDEBUG[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Starting work on new ready job modify:heat_worker:port:ce965922-538a-4335-9644-7a98dce9fb47:2:loltx (etcd_worker.py - 108)
2018-04-04 05:02:33,036 [1;34mDEBUG[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Checking job status for port:ce965922-538a-4335-9644-7a98dce9fb47 (heat_stacks_worker.py - 44)
2018-04-04 05:02:33,589 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Stack "ese_logical_port_02112bb1-389c-4ff8-9354-94ab43459892" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:33,590 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - CREATED ese_logical_port_02112bb1-389c-4ff8-9354-94ab43459892 (heat.py - 280)
2018-04-04 05:02:33,768 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Found stack with status CREATE_COMPLETE for port:ce965922-538a-4335-9644-7a98dce9fb47 (heat_stacks_worker.py - 55)
2018-04-04 05:02:33,768 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - MODIFY STARTED (heat_messenger.py - 123)
2018-04-04 05:02:34,191 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Job create finished with results {'heat_outputs': [{u'output_value': u'501b16b0-8059-4263-9e40-06aabfa1d72f', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'46b0cd68-d0fb-4d72-9def-830164f9e215', u'description': u'A unique id for the logical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/501b16b0-8059-4263-9e40-06aabfa1d72f', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38.0', u'description': u'The name of the logical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:34,268 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Job create:heat_worker:ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892:1:7a64g finished. (job_queue.py - 266)
2018-04-04 05:02:34,269 [1;37mINFO[0m heat_worker - ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 - Trying to delete internal process state for resource ese_logical_port:02112bb1-389c-4ff8-9354-94ab43459892 (resources.py - 701)
2018-04-04 05:02:34,413 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:port:f3867a99-de18-4512-8e94-f9aaa7b05c3a:2:37sxp using id: 2a205138-4370-4c1f-a99e-7854f53a0c66 (job_queue.py - 245)
2018-04-04 05:02:34,415 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:02:34,416 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-04 05:02:34,424 [1;34mDEBUG[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Starting work on new ready job modify:heat_worker:port:f3867a99-de18-4512-8e94-f9aaa7b05c3a:2:37sxp (etcd_worker.py - 108)
2018-04-04 05:02:34,426 [1;34mDEBUG[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Checking job status for port:f3867a99-de18-4512-8e94-f9aaa7b05c3a (heat_stacks_worker.py - 44)
2018-04-04 05:02:34,793 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-04 05:02:34,804 [1;34mDEBUG[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }

 with parameters:
{"virtual_machine": "ce8831fd-d30c-41e3-95de-feaee0b95405", "name": "ce965922-538a-4335-9644-7a98dce9fb47", "admin_state_up": true, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:41:7c:23", "version": 2, "virtual_network": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e", "security_groups": [], "uuid": "ce965922-538a-4335-9644-7a98dce9fb47"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': True, u'jinja_force_dependency_gw_interface': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'jinja_fixed_ips': [{u'subnet_id': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'ip_address': u'172.16.101.153'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1']} (heat.py - 145)
2018-04-04 05:02:34,805 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Updating a stack port_ce965922-538a-4335-9644-7a98dce9fb47 with parameters: {u'virtual_machine': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'name': u'ce965922-538a-4335-9644-7a98dce9fb47', u'admin_state_up': True, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:41:7c:23', u'version': 2, u'virtual_network': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'security_groups': [], u'uuid': u'ce965922-538a-4335-9644-7a98dce9fb47'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }
 (heat.py - 186)
2018-04-04 05:02:35,249 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Found stack with status CREATE_COMPLETE for port:f3867a99-de18-4512-8e94-f9aaa7b05c3a (heat_stacks_worker.py - 55)
2018-04-04 05:02:35,250 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - MODIFY STARTED (heat_messenger.py - 123)
2018-04-04 05:02:35,272 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:36,065 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-04 05:02:36,077 [1;34mDEBUG[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }

 with parameters:
{"virtual_machine": "ce8831fd-d30c-41e3-95de-feaee0b95405", "name": "f3867a99-de18-4512-8e94-f9aaa7b05c3a", "admin_state_up": true, "tenant_id": "06d6b792b31c40daa546fb0f4e35980d", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:c5:2b:92", "version": 2, "virtual_network": "6e557507-1c2a-49b1-ba90-5f616a1f1f3e", "security_groups": [], "uuid": "f3867a99-de18-4512-8e94-f9aaa7b05c3a"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': True, u'jinja_force_dependency_gw_interface': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'jinja_fixed_ips': [{u'subnet_id': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'ip_address': u'172.16.101.151'}, {u'subnet_id': u'67877f2d-0547-4cea-a6ce-2e3b937aa31b', u'ip_address': u'172.16.101.152'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1', u'4cc11376-ba13-4cc8-b7a6-f886f4a031d1']} (heat.py - 145)
2018-04-04 05:02:36,078 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Updating a stack port_f3867a99-de18-4512-8e94-f9aaa7b05c3a with parameters: {u'virtual_machine': u'ce8831fd-d30c-41e3-95de-feaee0b95405', u'name': u'f3867a99-de18-4512-8e94-f9aaa7b05c3a', u'admin_state_up': True, u'tenant_id': u'06d6b792b31c40daa546fb0f4e35980d', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:c5:2b:92', u'version': 2, u'virtual_network': u'6e557507-1c2a-49b1-ba90-5f616a1f1f3e', u'security_groups': [], u'uuid': u'f3867a99-de18-4512-8e94-f9aaa7b05c3a'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": 67877f2d-0547-4cea-a6ce-2e3b937aa31b
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 4cc11376-ba13-4cc8-b7a6-f886f4a031d1
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }
 (heat.py - 186)
2018-04-04 05:02:36,512 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:36,536 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:37,758 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:37,763 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:39,012 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:39,050 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:40,295 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:40,298 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:41,538 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:41,569 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:42,783 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:42,800 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:43,999 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:02:44,170 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Stack "port_ce965922-538a-4335-9644-7a98dce9fb47" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:44,171 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - MODIFIED port_ce965922-538a-4335-9644-7a98dce9fb47 (heat.py - 329)
2018-04-04 05:02:44,655 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Job modify finished with results {'heat_outputs': [{u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': u'1650b87a-0a56-4ef0-a411-42a4c6efc185', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}, {u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/1650b87a-0a56-4ef0-a411-42a4c6efc185', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:44,694 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Job modify:heat_worker:port:ce965922-538a-4335-9644-7a98dce9fb47:2:loltx finished. (job_queue.py - 266)
2018-04-04 05:02:44,695 [1;37mINFO[0m heat_worker - port:ce965922-538a-4335-9644-7a98dce9fb47 - Trying to delete internal process state for resource port:ce965922-538a-4335-9644-7a98dce9fb47 (resources.py - 701)
2018-04-04 05:02:45,292 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Stack "port_f3867a99-de18-4512-8e94-f9aaa7b05c3a" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-04-04 05:02:45,292 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - MODIFIED port_f3867a99-de18-4512-8e94-f9aaa7b05c3a (heat.py - 329)
2018-04-04 05:02:45,769 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Job modify finished with results {'heat_outputs': [{u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': u'1b86504e-571f-4d8f-a3c5-a960a747e093', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}, {u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/1b86504e-571f-4d8f-a3c5-a960a747e093', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:02:45,814 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Job modify:heat_worker:port:f3867a99-de18-4512-8e94-f9aaa7b05c3a:2:37sxp finished. (job_queue.py - 266)
2018-04-04 05:02:45,815 [1;37mINFO[0m heat_worker - port:f3867a99-de18-4512-8e94-f9aaa7b05c3a - Trying to delete internal process state for resource port:f3867a99-de18-4512-8e94-f9aaa7b05c3a (resources.py - 701)
2018-04-04 05:03:04,420 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:03:04,420 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:03:04,421 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:03:34,434 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:03:34,434 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:03:34,435 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:04:04,447 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:04:04,448 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:04:04,448 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:04:07,779 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8:1:jnu3v using id: 38e04a77-9b20-4add-8c08-8fbf158457f5 (job_queue.py - 245)
2018-04-04 05:04:07,781 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:04:07,782 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-04 05:04:07,791 [1;34mDEBUG[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Starting work on new ready job create:heat_worker:static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8:1:jnu3v (etcd_worker.py - 108)
2018-04-04 05:04:07,792 [1;34mDEBUG[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Checking job status for static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 (heat_stacks_worker.py - 44)
2018-04-04 05:04:08,093 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - CREATE STARTED (heat_messenger.py - 92)
2018-04-04 05:04:08,183 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Template id static_route_internet resolved from mapping: ACstatic_route_&Pservice_type (resources.py - 835)
2018-04-04 05:04:08,191 [1;34mDEBUG[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Internet Gateway Static Route

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  vrf_name:
    description: Name of VRF to add this static route
    label: VRF
    type: string
  route:
    description: Static Route definition
    label: Route
    type: string
  next_hop:
    description: Next hop for the static route
    label: Next hop
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_ip": "10.79.5.185", "route": "203.0.112.0/28", "secondary_device_port": 830, "secondary_device_password": "***", "primary_device_password": "***", "next_hop": "172.16.101.1", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "primary_device_port": 830, "secondary_device_ip": "10.79.5.184", "secondary_device_username": "esi"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_dummy_dependency': u'd5622781-f06a-4fad-b800-b577a05ad8b2'} (heat.py - 145)
2018-04-04 05:04:08,191 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Creating a stack static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8 with parameters: {u'primary_device_ip': u'10.79.5.185', u'route': u'203.0.112.0/28', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'primary_device_password': u'***', u'next_hop': u'172.16.101.1', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'primary_device_port': 830, u'secondary_device_ip': u'10.79.5.184', u'secondary_device_username': u'esi'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Internet Gateway Static Route

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  vrf_name:
    description: Name of VRF to add this static route
    label: VRF
    type: string
  route:
    description: Static Route definition
    label: Route
    type: string
  next_hop:
    description: Next hop for the static route
    label: Next hop
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 162)
2018-04-04 05:04:08,723 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:09,873 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:11,035 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:12,185 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:13,326 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:14,462 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:15,598 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:16,787 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:17,921 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:19,063 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:20,201 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:21,340 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:22,478 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:23,618 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-04 05:04:24,751 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Stack "static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-04 05:04:24,751 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - CREATED static_route_d0aa20b1-9302-4b43-a3c1-9edce0811af8 (heat.py - 280)
2018-04-04 05:04:25,049 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Job create finished with results {'heat_outputs': [], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-04 05:04:25,099 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Job create:heat_worker:static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8:1:jnu3v finished. (job_queue.py - 266)
2018-04-04 05:04:25,100 [1;37mINFO[0m heat_worker - static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 - Trying to delete internal process state for resource static_route:d0aa20b1-9302-4b43-a3c1-9edce0811af8 (resources.py - 701)
2018-04-04 05:04:37,795 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:04:37,795 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:04:37,796 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:05:07,806 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:05:07,806 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:05:07,806 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:05:37,818 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:05:37,819 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:05:37,819 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:06:07,825 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:06:07,825 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:06:07,825 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:06:37,837 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:06:37,838 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:06:37,838 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:07:07,852 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:07:07,852 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:07:07,853 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:07:37,866 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:07:37,867 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:07:37,867 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:08:07,876 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:08:07,877 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:08:07,877 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:08:37,890 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:08:37,890 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:08:37,890 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:09:07,899 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:09:07,900 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:09:07,900 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:09:37,907 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:09:37,908 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:09:37,908 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:10:07,922 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:10:07,922 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:10:07,923 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:10:37,931 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:10:37,931 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:10:37,932 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:11:07,944 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:11:07,944 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:11:07,945 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:11:37,953 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:11:37,953 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:11:37,954 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:12:07,961 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:12:07,962 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:12:07,962 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:12:37,974 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:12:37,974 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:12:37,974 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:13:07,985 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:13:07,985 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:13:07,985 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:13:37,997 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:13:37,997 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:13:37,997 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:14:08,009 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:14:08,009 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:14:08,009 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:14:38,021 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:14:38,022 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:14:38,022 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:15:08,036 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:15:08,036 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:15:08,037 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:15:38,049 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:15:38,050 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:15:38,050 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:16:08,057 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:16:08,057 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:16:08,057 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:16:38,066 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:16:38,067 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:16:38,067 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:17:08,079 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:17:08,080 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:17:08,080 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:17:38,093 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:17:38,093 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:17:38,094 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:18:08,102 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:18:08,103 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:18:08,103 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:18:38,116 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:18:38,117 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:18:38,117 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:19:08,129 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:19:08,129 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:19:08,129 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:19:38,143 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:19:38,143 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:19:38,144 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:20:08,156 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:20:08,156 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:20:08,157 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:20:38,167 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:20:38,168 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:20:38,168 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:21:08,181 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:21:08,181 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:21:08,182 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:21:38,195 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:21:38,195 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:21:38,195 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:22:08,208 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:22:08,209 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:22:08,209 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:22:38,221 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:22:38,222 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:22:38,222 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:23:08,235 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:23:08,235 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:23:08,235 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:23:38,246 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:23:38,246 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:23:38,247 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:24:08,261 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:24:08,261 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:24:08,262 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:24:38,275 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:24:38,276 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:24:38,276 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:25:08,286 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:25:08,287 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:25:08,287 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:25:38,299 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:25:38,299 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:25:38,300 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:26:08,313 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:26:08,313 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:26:08,314 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:26:38,325 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:26:38,325 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:26:38,326 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:27:08,341 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:27:08,342 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:27:08,342 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:27:38,356 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:27:38,356 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:27:38,357 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:28:08,370 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:28:08,371 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:28:08,371 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:28:38,385 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:28:38,385 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:28:38,385 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-04 05:29:08,397 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-04 05:29:08,398 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-04 05:29:08,398 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
