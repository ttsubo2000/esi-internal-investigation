2018-04-15 23:58:26,170 [1;37mINFO[0m heat_worker - Registered gohan 2-step delete flag: marked_for_deletion (resources.py - 62)
2018-04-15 23:58:26,170 [1;37mINFO[0m heat_worker - Gohan config path: /config (resources.py - 274)
2018-04-15 23:58:26,171 [1;37mINFO[0m heat_worker - Gohan state path: /state (resources.py - 298)
2018-04-15 23:58:26,412 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 1s. (gohan.py - 28)
2018-04-15 23:58:27,417 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 2s. (gohan.py - 28)
2018-04-15 23:58:29,422 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 4s. (gohan.py - 28)
2018-04-15 23:58:33,429 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 8s. (gohan.py - 28)
2018-04-15 23:58:41,440 [1;33mWARNING[0m heat_worker - Could not reach gohan. Retrying in 16s. (gohan.py - 28)
================================================
2018-04-15 23:58:57,695 [1;34mDEBUG[0m heat_worker - Starting worker. (etcd_worker.py - 231)
2018-04-15 23:58:57,696 [1;37mINFO[0m heat_worker - Worker started. (etcd_worker.py - 234)
2018-04-15 23:58:57,698 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-15 23:58:57,699 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-15 23:59:27,411 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4:1:6ud1f using id: 03fabd52-7f22-4e07-80e7-e4f22f20f3ff (job_queue.py - 245)
2018-04-15 23:59:27,413 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-15 23:59:27,413 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-15 23:59:27,427 [1;34mDEBUG[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Starting work on new ready job create:heat_worker:ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4:1:6ud1f (etcd_worker.py - 108)
2018-04-15 23:59:27,428 [1;34mDEBUG[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Checking job status for ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 (heat_stacks_worker.py - 44)
2018-04-15 23:59:27,998 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - CREATE STARTED (heat_messenger.py - 92)
2018-04-15 23:59:28,085 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Template id ese_device_existing resolved from mapping: ACese_device_&Pexisting (resources.py - 835)
2018-04-15 23:59:28,092 [1;34mDEBUG[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  ESE Device (existing) template

parameters:
  name:
    type: string
    label: Physical Router Name
    description: Name of the physical router that will be created.
  hostname:
    type: string
    label: Hostname
    description: Name of host (vrouter) to create router on
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Device
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_router:
    type: OS::Contrail::ExistingResource
    properties:
      fq_name:
        - "default-global-system-config"
        - { get_param: hostname }
      resource_type: "physical_router"

  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: ese_devices
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: switch
      properties:
        device_ip: { get_param: device_ip }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: switch
    depends_on: physical_router

outputs:
  id:
    description: A unique id for the physical router.
    value: { get_resource: physical_router }
  name:
    description: The name of the physical router.
    value: { get_attr: [physical_router, name] }
  fq_name:
    description: The FQ name of the physical router.
    value: { get_attr: [physical_router, fq_name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link] }
 with parameters:
{"device_ip": "10.161.0.34", "name": "QFX-NW02", "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "hostname": "QFX-NW02", "version": 1, "gohan_id": "4d8371c0-1b91-4818-a6e7-26425178e5d4"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-15 23:59:28,093 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Creating a stack ese_device_4d8371c0-1b91-4818-a6e7-26425178e5d4 with parameters: {u'device_ip': u'10.161.0.34', u'name': u'QFX-NW02', u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'hostname': u'QFX-NW02', u'version': 1, u'gohan_id': u'4d8371c0-1b91-4818-a6e7-26425178e5d4'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  ESE Device (existing) template

parameters:
  name:
    type: string
    label: Physical Router Name
    description: Name of the physical router that will be created.
  hostname:
    type: string
    label: Hostname
    description: Name of host (vrouter) to create router on
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Device
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_router:
    type: OS::Contrail::ExistingResource
    properties:
      fq_name:
        - "default-global-system-config"
        - { get_param: hostname }
      resource_type: "physical_router"

  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: ese_devices
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: switch
      properties:
        device_ip: { get_param: device_ip }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: switch
    depends_on: physical_router

outputs:
  id:
    description: A unique id for the physical router.
    value: { get_resource: physical_router }
  name:
    description: The name of the physical router.
    value: { get_attr: [physical_router, name] }
  fq_name:
    description: The FQ name of the physical router.
    value: { get_attr: [physical_router, fq_name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link] } (heat.py - 162)
2018-04-15 23:59:28,665 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Stack "ese_device_4d8371c0-1b91-4818-a6e7-26425178e5d4" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-15 23:59:29,832 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Stack "ese_device_4d8371c0-1b91-4818-a6e7-26425178e5d4" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-15 23:59:31,273 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Stack "ese_device_4d8371c0-1b91-4818-a6e7-26425178e5d4" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-15 23:59:31,273 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - CREATED ese_device_4d8371c0-1b91-4818-a6e7-26425178e5d4 (heat.py - 280)
2018-04-15 23:59:31,729 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Job create finished with results {'heat_outputs': [{u'output_value': u'aeaad149-357c-41b9-b408-6304c5d3396c', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'default-global-system-config', u'NWSDP-JNPR-02'], u'description': u'The FQ name of the physical router.', u'output_key': u'fq_name'}, {u'output_value': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'description': u'A unique id for the physical router.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/aeaad149-357c-41b9-b408-6304c5d3396c', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'NWSDP-JNPR-02', u'description': u'The name of the physical router.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-15 23:59:31,769 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Job create:heat_worker:ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4:1:6ud1f finished. (job_queue.py - 266)
2018-04-15 23:59:31,770 [1;37mINFO[0m heat_worker - ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 - Trying to delete internal process state for resource ese_device:4d8371c0-1b91-4818-a6e7-26425178e5d4 (resources.py - 701)
2018-04-15 23:59:57,421 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-15 23:59:57,422 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-15 23:59:57,422 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:00:27,433 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:00:27,433 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:00:27,434 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:00:35,569 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446:1:p1k4h using id: b078b0c9-5969-4cf2-b883-8937010b4d5b (job_queue.py - 245)
2018-04-16 00:00:35,576 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:00:35,576 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:00:35,586 [1;34mDEBUG[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Starting work on new ready job create:heat_worker:ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446:1:p1k4h (etcd_worker.py - 108)
2018-04-16 00:00:35,587 [1;34mDEBUG[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Checking job status for ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 (heat_stacks_worker.py - 44)
2018-04-16 00:00:35,889 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:00:35,981 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Template id ese_physical_port_new resolved from mapping: ACese_physical_port_&Pexisting (resources.py - 835)
2018-04-16 00:00:35,986 [1;34mDEBUG[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"physical_port_name": "xe-0/0/3", "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.161.0.34", "physical_device": "7e5c78fa-71c0-427e-947f-586b1fc3c470", "version": 1, "gohan_id": "0078808a-c28e-46e1-887d-8ec65f90c446"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:00:35,987 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Creating a stack ese_physical_port_0078808a-c28e-46e1-887d-8ec65f90c446 with parameters: {u'physical_port_name': u'xe-0/0/3', u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.161.0.34', u'physical_device': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'version': 1, u'gohan_id': u'0078808a-c28e-46e1-887d-8ec65f90c446'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-16 00:00:36,447 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Stack "ese_physical_port_0078808a-c28e-46e1-887d-8ec65f90c446" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:00:37,615 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Stack "ese_physical_port_0078808a-c28e-46e1-887d-8ec65f90c446" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:00:38,964 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Stack "ese_physical_port_0078808a-c28e-46e1-887d-8ec65f90c446" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:00:38,965 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - CREATED ese_physical_port_0078808a-c28e-46e1-887d-8ec65f90c446 (heat.py - 280)
2018-04-16 00:00:39,391 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Job create finished with results {'heat_outputs': [{u'output_value': u'28c45b87-a1c0-41f0-8f69-85c60d47713f', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'06bfe521-07f0-4931-9f8c-318c3ad8114e', u'description': u'A unique id for the physical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/28c45b87-a1c0-41f0-8f69-85c60d47713f', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38', u'description': u'The name of the physical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:00:39,434 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Job create:heat_worker:ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446:1:p1k4h finished. (job_queue.py - 266)
2018-04-16 00:00:39,438 [1;37mINFO[0m heat_worker - ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 - Trying to delete internal process state for resource ese_physical_port:0078808a-c28e-46e1-887d-8ec65f90c446 (resources.py - 701)
2018-04-16 00:01:05,589 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:01:05,590 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:01:05,590 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:01:35,602 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:01:35,603 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:01:35,603 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:01:41,315 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3:1:dug4j using id: de79451c-7d70-4ce0-81b1-b93ae65de966 (job_queue.py - 245)
2018-04-16 00:01:41,317 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:01:41,317 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:01:41,332 [1;34mDEBUG[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Starting work on new ready job create:heat_worker:ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3:1:dug4j (etcd_worker.py - 108)
2018-04-16 00:01:41,333 [1;34mDEBUG[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Checking job status for ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 (heat_stacks_worker.py - 44)
2018-04-16 00:01:41,708 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:01:41,798 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Template id ese_physical_port_new resolved from mapping: ACese_physical_port_&Pexisting (resources.py - 835)
2018-04-16 00:01:41,802 [1;34mDEBUG[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"physical_port_name": "xe-0/0/4", "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.161.0.34", "physical_device": "7e5c78fa-71c0-427e-947f-586b1fc3c470", "version": 1, "gohan_id": "a6e70af1-386b-4d79-943f-6f44e87f95b3"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:01:41,802 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Creating a stack ese_physical_port_a6e70af1-386b-4d79-943f-6f44e87f95b3 with parameters: {u'physical_port_name': u'xe-0/0/4', u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.161.0.34', u'physical_device': u'7e5c78fa-71c0-427e-947f-586b1fc3c470', u'version': 1, u'gohan_id': u'a6e70af1-386b-4d79-943f-6f44e87f95b3'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  physical_device:
    type: string
    label: Physical Device Id
    description: Id of the physical device on which physical port will be created.
  physical_port_name:
    type: string
    label: Physical Interface Name
    description: Name of the physical port.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  physical_interface:
    type: OS::Contrail::PhysicalInterface
    properties:
      name: { get_param: physical_port_name }
      physical_router: { get_param: physical_device }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: ese_physical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: physical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: port
    depends_on: physical_interface

outputs:
  id:
    description: A unique id for the physical interface
    value: { get_resource: physical_interface }
  name:
    description: The name of the physical interface.
    value: { get_attr: [physical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-16 00:01:42,260 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Stack "ese_physical_port_a6e70af1-386b-4d79-943f-6f44e87f95b3" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:01:43,462 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Stack "ese_physical_port_a6e70af1-386b-4d79-943f-6f44e87f95b3" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:01:44,824 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Stack "ese_physical_port_a6e70af1-386b-4d79-943f-6f44e87f95b3" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:01:44,825 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - CREATED ese_physical_port_a6e70af1-386b-4d79-943f-6f44e87f95b3 (heat.py - 280)
2018-04-16 00:01:45,293 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Job create finished with results {'heat_outputs': [{u'output_value': u'07d5e8ed-4695-49b4-8560-897b586b1b71', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'06bfe521-07f0-4931-9f8c-318c3ad8114e', u'description': u'A unique id for the physical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/07d5e8ed-4695-49b4-8560-897b586b1b71', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38', u'description': u'The name of the physical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:01:45,339 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Job create:heat_worker:ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3:1:dug4j finished. (job_queue.py - 266)
2018-04-16 00:01:45,340 [1;37mINFO[0m heat_worker - ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 - Trying to delete internal process state for resource ese_physical_port:a6e70af1-386b-4d79-943f-6f44e87f95b3 (resources.py - 701)
2018-04-16 00:02:11,325 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:02:11,326 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:02:11,326 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:02:41,341 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:02:41,341 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:02:41,342 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:02:41,717 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975:1:nkfox using id: 858c6d08-ff50-4d6e-aecb-92d2fb89bb96 (job_queue.py - 245)
2018-04-16 00:02:41,719 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:02:41,719 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:02:41,731 [1;34mDEBUG[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Starting work on new ready job create:heat_worker:edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975:1:nkfox (etcd_worker.py - 108)
2018-04-16 00:02:41,732 [1;34mDEBUG[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Checking job status for edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 (heat_stacks_worker.py - 44)
2018-04-16 00:02:42,043 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:02:42,136 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Template id edge_router resolved from mapping: Cedge_router (resources.py - 835)
2018-04-16 00:02:42,139 [1;34mDEBUG[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]}
 with parameters:
{"gohan_id": "7a35974a-a19f-49e2-b907-ad7fd8692975", "device_ip": "10.79.5.185", "version": 1, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:02:42,140 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Creating a stack edge_router_7a35974a-a19f-49e2-b907-ad7fd8692975 with parameters: {u'gohan_id': u'7a35974a-a19f-49e2-b907-ad7fd8692975', u'device_ip': u'10.79.5.185', u'version': 1, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]} (heat.py - 162)
2018-04-16 00:02:42,622 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Stack "edge_router_7a35974a-a19f-49e2-b907-ad7fd8692975" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:02:43,789 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Stack "edge_router_7a35974a-a19f-49e2-b907-ad7fd8692975" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:02:43,789 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - CREATED edge_router_7a35974a-a19f-49e2-b907-ad7fd8692975 (heat.py - 280)
2018-04-16 00:02:44,105 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Job create finished with results {'heat_outputs': [{u'output_value': u'cc896303-29e2-47d6-a409-a84c23b5722b', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/cc896303-29e2-47d6-a409-a84c23b5722b', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:02:44,147 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Job create:heat_worker:edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975:1:nkfox finished. (job_queue.py - 266)
2018-04-16 00:02:44,147 [1;37mINFO[0m heat_worker - edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 - Trying to delete internal process state for resource edge_router:7a35974a-a19f-49e2-b907-ad7fd8692975 (resources.py - 701)
2018-04-16 00:03:11,723 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:03:11,724 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:03:11,724 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:03:41,737 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:03:41,738 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:03:41,738 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:03:46,039 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d:1:zyp5y using id: ba446aca-5232-44c2-b6a1-8e45aad488ee (job_queue.py - 245)
2018-04-16 00:03:46,041 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:03:46,042 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:03:46,052 [1;34mDEBUG[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Starting work on new ready job create:heat_worker:edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d:1:zyp5y (etcd_worker.py - 108)
2018-04-16 00:03:46,053 [1;34mDEBUG[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Checking job status for edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d (heat_stacks_worker.py - 44)
2018-04-16 00:03:46,351 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:03:46,434 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Template id edge_router resolved from mapping: Cedge_router (resources.py - 835)
2018-04-16 00:03:46,436 [1;34mDEBUG[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]}
 with parameters:
{"gohan_id": "b7e6d8ad-5377-4380-bbb4-1a62566cbd6d", "device_ip": "10.79.5.184", "version": 1, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:03:46,436 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Creating a stack edge_router_b7e6d8ad-5377-4380-bbb4-1a62566cbd6d with parameters: {u'gohan_id': u'b7e6d8ad-5377-4380-bbb4-1a62566cbd6d', u'device_ip': u'10.79.5.184', u'version': 1, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the Edge Router
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  device_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_device
      resource_type: edge_routers
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: router
      properties:
        device_ip: { get_param: device_ip }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: router

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: device_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [device_monitor, link]} (heat.py - 162)
2018-04-16 00:03:46,865 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Stack "edge_router_b7e6d8ad-5377-4380-bbb4-1a62566cbd6d" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:03:48,039 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Stack "edge_router_b7e6d8ad-5377-4380-bbb4-1a62566cbd6d" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:03:48,039 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - CREATED edge_router_b7e6d8ad-5377-4380-bbb4-1a62566cbd6d (heat.py - 280)
2018-04-16 00:03:48,355 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Job create finished with results {'heat_outputs': [{u'output_value': u'1e628441-c77a-4ebe-b5fe-6bd69816456d', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/1e628441-c77a-4ebe-b5fe-6bd69816456d', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:03:48,399 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Job create:heat_worker:edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d:1:zyp5y finished. (job_queue.py - 266)
2018-04-16 00:03:48,399 [1;37mINFO[0m heat_worker - edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d - Trying to delete internal process state for resource edge_router:b7e6d8ad-5377-4380-bbb4-1a62566cbd6d (resources.py - 701)
2018-04-16 00:04:16,048 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:04:16,049 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:04:16,049 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:04:46,058 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:04:46,058 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:04:46,059 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:04:52,674 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16:1:13pri using id: 8f27050c-dbac-4132-9cc6-cc324a656ecd (job_queue.py - 245)
2018-04-16 00:04:52,676 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:04:52,676 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:04:52,682 [1;34mDEBUG[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Starting work on new ready job create:heat_worker:er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16:1:13pri (etcd_worker.py - 108)
2018-04-16 00:04:52,682 [1;34mDEBUG[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Checking job status for er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 (heat_stacks_worker.py - 44)
2018-04-16 00:04:52,997 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:04:53,083 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-04-16 00:04:53,086 [1;34mDEBUG[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.79.5.185", "if_name": "ge-0/0/1", "version": 1, "gohan_id": "f3ecf585-5c3b-445a-97a7-d8e124c99e16"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:04:53,086 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Creating a stack er_physical_interface_f3ecf585-5c3b-445a-97a7-d8e124c99e16 with parameters: {u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.79.5.185', u'if_name': u'ge-0/0/1', u'version': 1, u'gohan_id': u'f3ecf585-5c3b-445a-97a7-d8e124c99e16'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-04-16 00:04:53,541 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Stack "er_physical_interface_f3ecf585-5c3b-445a-97a7-d8e124c99e16" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:04:54,702 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Stack "er_physical_interface_f3ecf585-5c3b-445a-97a7-d8e124c99e16" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:04:54,702 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - CREATED er_physical_interface_f3ecf585-5c3b-445a-97a7-d8e124c99e16 (heat.py - 280)
2018-04-16 00:04:55,021 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Job create finished with results {'heat_outputs': [{u'output_value': u'03bc2bdc-e6b0-4ae6-acda-b76a5da84fb6', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/03bc2bdc-e6b0-4ae6-acda-b76a5da84fb6', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:04:55,059 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Job create:heat_worker:er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16:1:13pri finished. (job_queue.py - 266)
2018-04-16 00:04:55,060 [1;37mINFO[0m heat_worker - er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 - Trying to delete internal process state for resource er_physical_interface:f3ecf585-5c3b-445a-97a7-d8e124c99e16 (resources.py - 701)
2018-04-16 00:05:22,687 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:05:22,687 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:05:22,688 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:05:52,702 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:05:52,703 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:05:52,703 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:05:57,048 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7:1:ozhuq using id: bd8a8fbb-2993-4283-8332-0e5d41f79d72 (job_queue.py - 245)
2018-04-16 00:05:57,050 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:05:57,051 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:05:57,060 [1;34mDEBUG[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Starting work on new ready job create:heat_worker:er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7:1:ozhuq (etcd_worker.py - 108)
2018-04-16 00:05:57,061 [1;34mDEBUG[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Checking job status for er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 (heat_stacks_worker.py - 44)
2018-04-16 00:05:57,363 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:05:57,448 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-04-16 00:05:57,450 [1;34mDEBUG[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.79.5.185", "if_name": "ae0", "version": 1, "gohan_id": "3118d6be-b1cb-472a-805f-7e1ec46aa5e7"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:05:57,451 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Creating a stack er_physical_interface_3118d6be-b1cb-472a-805f-7e1ec46aa5e7 with parameters: {u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.79.5.185', u'if_name': u'ae0', u'version': 1, u'gohan_id': u'3118d6be-b1cb-472a-805f-7e1ec46aa5e7'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-04-16 00:05:57,974 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Stack "er_physical_interface_3118d6be-b1cb-472a-805f-7e1ec46aa5e7" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:05:59,140 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Stack "er_physical_interface_3118d6be-b1cb-472a-805f-7e1ec46aa5e7" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:05:59,141 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - CREATED er_physical_interface_3118d6be-b1cb-472a-805f-7e1ec46aa5e7 (heat.py - 280)
2018-04-16 00:05:59,517 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Job create finished with results {'heat_outputs': [{u'output_value': u'e848bb97-1643-4167-9865-9a8b3b30b66f', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/e848bb97-1643-4167-9865-9a8b3b30b66f', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:05:59,563 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Job create:heat_worker:er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7:1:ozhuq finished. (job_queue.py - 266)
2018-04-16 00:05:59,563 [1;37mINFO[0m heat_worker - er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 - Trying to delete internal process state for resource er_physical_interface:3118d6be-b1cb-472a-805f-7e1ec46aa5e7 (resources.py - 701)
2018-04-16 00:06:27,057 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:06:27,058 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:06:27,058 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:06:57,072 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:06:57,073 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:06:57,074 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:06:57,210 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043:1:df5np using id: 633e5029-57a7-4fc7-a329-343e8e6aa578 (job_queue.py - 245)
2018-04-16 00:06:57,212 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:06:57,220 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:06:57,228 [1;34mDEBUG[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Starting work on new ready job create:heat_worker:er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043:1:df5np (etcd_worker.py - 108)
2018-04-16 00:06:57,229 [1;34mDEBUG[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Checking job status for er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 (heat_stacks_worker.py - 44)
2018-04-16 00:06:57,527 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:06:57,613 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-04-16 00:06:57,615 [1;34mDEBUG[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.79.5.184", "if_name": "ae0", "version": 1, "gohan_id": "c8e2d558-02ee-4bf3-ba5b-958821a21043"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:06:57,616 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Creating a stack er_physical_interface_c8e2d558-02ee-4bf3-ba5b-958821a21043 with parameters: {u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.79.5.184', u'if_name': u'ae0', u'version': 1, u'gohan_id': u'c8e2d558-02ee-4bf3-ba5b-958821a21043'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-04-16 00:06:58,074 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Stack "er_physical_interface_c8e2d558-02ee-4bf3-ba5b-958821a21043" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:06:59,227 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Stack "er_physical_interface_c8e2d558-02ee-4bf3-ba5b-958821a21043" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:06:59,227 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - CREATED er_physical_interface_c8e2d558-02ee-4bf3-ba5b-958821a21043 (heat.py - 280)
2018-04-16 00:06:59,536 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Job create finished with results {'heat_outputs': [{u'output_value': u'81b1e3e1-1182-4431-9c0f-9e430ec29a09', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/81b1e3e1-1182-4431-9c0f-9e430ec29a09', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:06:59,656 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Job create:heat_worker:er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043:1:df5np finished. (job_queue.py - 266)
2018-04-16 00:06:59,657 [1;37mINFO[0m heat_worker - er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 - Trying to delete internal process state for resource er_physical_interface:c8e2d558-02ee-4bf3-ba5b-958821a21043 (resources.py - 701)
2018-04-16 00:07:27,223 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:07:27,224 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:07:27,224 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:07:57,237 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:07:57,237 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:07:57,237 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:08:01,455 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688:1:qb54n using id: ea345059-cf15-4337-8d34-ffc85be1211d (job_queue.py - 245)
2018-04-16 00:08:01,457 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:08:01,458 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:08:01,469 [1;34mDEBUG[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Starting work on new ready job create:heat_worker:er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688:1:qb54n (etcd_worker.py - 108)
2018-04-16 00:08:01,471 [1;34mDEBUG[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Checking job status for er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 (heat_stacks_worker.py - 44)
2018-04-16 00:08:01,769 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:08:01,862 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Template id er_physical_interface resolved from mapping: Cer_physical_interface (resources.py - 835)
2018-04-16 00:08:01,864 [1;34mDEBUG[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]}
 with parameters:
{"tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.79.5.184", "if_name": "ge-0/0/1", "version": 1, "gohan_id": "2bc8e40d-ab01-4738-a4aa-e69d8fd30688"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:08:01,864 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Creating a stack er_physical_interface_2bc8e40d-ab01-4738-a4aa-e69d8fd30688 with parameters: {u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.79.5.184', u'if_name': u'ge-0/0/1', u'version': 1, u'gohan_id': u'2bc8e40d-ab01-4738-a4aa-e69d8fd30688'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Physical port template

parameters:
  if_name:
    type: string
    label: Interface Name
    description: Name of the ER Physical Interface
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ER Physical Interface
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_status
      resource_type: er_physical_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: interface
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: if_name }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: interface

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link]} (heat.py - 162)
2018-04-16 00:08:02,320 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Stack "er_physical_interface_2bc8e40d-ab01-4738-a4aa-e69d8fd30688" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:08:03,471 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Stack "er_physical_interface_2bc8e40d-ab01-4738-a4aa-e69d8fd30688" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:08:03,472 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - CREATED er_physical_interface_2bc8e40d-ab01-4738-a4aa-e69d8fd30688 (heat.py - 280)
2018-04-16 00:08:03,800 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Job create finished with results {'heat_outputs': [{u'output_value': u'd80c91c1-a82c-4742-b571-03c17cbeff1c', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/d80c91c1-a82c-4742-b571-03c17cbeff1c', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:08:03,841 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Job create:heat_worker:er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688:1:qb54n finished. (job_queue.py - 266)
2018-04-16 00:08:03,842 [1;37mINFO[0m heat_worker - er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 - Trying to delete internal process state for resource er_physical_interface:2bc8e40d-ab01-4738-a4aa-e69d8fd30688 (resources.py - 701)
2018-04-16 00:08:31,464 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:08:31,465 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:08:31,465 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:09:01,478 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:09:01,478 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:09:01,479 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:09:17,747 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69:1:hhmut using id: b951a7fa-ef58-4b2a-a248-33b92ad81fe1 (job_queue.py - 245)
2018-04-16 00:09:17,750 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:09:17,750 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:09:17,763 [1;34mDEBUG[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Starting work on new ready job create:heat_worker:vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69:1:hhmut (etcd_worker.py - 108)
2018-04-16 00:09:17,764 [1;34mDEBUG[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Checking job status for vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 (heat_stacks_worker.py - 44)
2018-04-16 00:09:18,066 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:09:18,157 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Template id vpn_gateway resolved from mapping: Cvpn_gateway (resources.py - 835)
2018-04-16 00:09:18,169 [1;34mDEBUG[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  VPN Gateway

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_downlink_interface:
    description: Physical port on the Primary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_uplink_interface:
    description: Physical port on the Primary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_downlink_interface:
    description: Physical port on the Secondary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_uplink_interface:
    description: Physical port on the Secondary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  downlink_vlan:
    description: vlan tag used by logical downlink interface
    label: VLAN ID
    type: string
  uplink_vlan:
    description: vlan tag used by logical uplink interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interfaces
    label: VRF name
    type: string
  input_filter_name:
    description: Name for policer used for input
    label: Input filter name
    type: string
  output_filter_name:
    description: Name for policer used for output
    label: Output filter name
    type: string
  primary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string
  secondary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: primary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: primary_device_logical_downlink_interface
              $LIFU:
                get_param: primary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: secondary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: secondary_device_logical_downlink_interface
              $LIFU:
                get_param: secondary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_logical_uplink_interface": "ge-0/0/1.122", "primary_device_logical_downlink_interface": "ae0.1025", "primary_device_password": "***", "output_filter_name": "FILTER_10M-GA-DOWN-VPN", "primary_device_ip": "10.79.5.185", "secondary_device_physical_downlink_interface": "ae0", "secondary_device_username": "esi", "primary_device_physical_uplink_interface": "ge-0/0/1", "secondary_device_logical_uplink_interface": "ge-0/0/1.122", "downlink_vlan": "1025", "secondary_device_logical_downlink_interface": "ae0.1025", "input_filter_name": "FILTER_10M-GA-UP-VPN", "uplink_vlan": "122", "secondary_device_port": 830, "secondary_device_physical_uplink_interface": "ge-0/0/1", "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "primary_device_physical_downlink_interface": "ae0", "secondary_downlink_vrrp_config_group": "VPNGW2-VRRP", "primary_device_port": 830, "primary_downlink_vrrp_config_group": "VPNGW1-VRRP", "secondary_device_ip": "10.79.5.184"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:09:18,170 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Creating a stack vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69 with parameters: {u'primary_device_logical_uplink_interface': u'ge-0/0/1.122', u'primary_device_logical_downlink_interface': u'ae0.1025', u'primary_device_password': u'***', u'output_filter_name': u'FILTER_10M-GA-DOWN-VPN', u'primary_device_ip': u'10.79.5.185', u'secondary_device_physical_downlink_interface': u'ae0', u'secondary_device_username': u'esi', u'primary_device_physical_uplink_interface': u'ge-0/0/1', u'secondary_device_logical_uplink_interface': u'ge-0/0/1.122', u'downlink_vlan': u'1025', u'secondary_device_logical_downlink_interface': u'ae0.1025', u'input_filter_name': u'FILTER_10M-GA-UP-VPN', u'uplink_vlan': u'122', u'secondary_device_port': 830, u'secondary_device_physical_uplink_interface': u'ge-0/0/1', u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'primary_device_physical_downlink_interface': u'ae0', u'secondary_downlink_vrrp_config_group': u'VPNGW2-VRRP', u'primary_device_port': 830, u'primary_downlink_vrrp_config_group': u'VPNGW1-VRRP', u'secondary_device_ip': u'10.79.5.184'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  VPN Gateway

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_downlink_interface:
    description: Physical port on the Primary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_uplink_interface:
    description: Physical port on the Primary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_downlink_interface:
    description: Physical port on the Secondary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_uplink_interface:
    description: Physical port on the Secondary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  downlink_vlan:
    description: vlan tag used by logical downlink interface
    label: VLAN ID
    type: string
  uplink_vlan:
    description: vlan tag used by logical uplink interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interfaces
    label: VRF name
    type: string
  input_filter_name:
    description: Name for policer used for input
    label: Input filter name
    type: string
  output_filter_name:
    description: Name for policer used for output
    label: Output filter name
    type: string
  primary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string
  secondary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: primary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: primary_device_logical_downlink_interface
              $LIFU:
                get_param: primary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: secondary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: secondary_device_logical_downlink_interface
              $LIFU:
                get_param: secondary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 162)
2018-04-16 00:09:18,701 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:19,855 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:21,038 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:22,208 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:23,347 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:24,491 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:25,632 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:26,778 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:27,923 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:29,060 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:30,197 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:31,341 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:32,482 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:33,635 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:34,775 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:35,909 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:09:35,910 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - CREATED vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69 (heat.py - 280)
2018-04-16 00:09:36,211 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Job create finished with results {'heat_outputs': [], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:09:36,252 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Job create:heat_worker:vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69:1:hhmut finished. (job_queue.py - 266)
2018-04-16 00:09:36,253 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Trying to delete internal process state for resource vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 (resources.py - 701)
2018-04-16 00:09:47,761 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:09:47,761 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:09:47,762 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:09:50,844 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222:1:1r2cs using id: 612340d4-9da1-4b1c-a753-cff02d5308ae (job_queue.py - 245)
2018-04-16 00:09:50,846 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:09:50,852 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:09:50,883 [1;34mDEBUG[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Starting work on new ready job create:heat_worker:vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222:1:1r2cs (etcd_worker.py - 108)
2018-04-16 00:09:50,884 [1;34mDEBUG[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Checking job status for vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 (heat_stacks_worker.py - 44)
2018-04-16 00:09:51,303 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:09:51,388 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Template id vpn_interface resolved from mapping: Cvpn_interface (resources.py - 835)
2018-04-16 00:09:51,409 [1;34mDEBUG[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  primary_device_logical_interface:
    description: Name of the created logical uplink interface on the Primary device
    label: Logical Interface name
    type: string
  secondary_device_logical_interface:
    description: Name of the created logical uplink interface on the Secondary device
    label: Logical Interface name
    type: string
  vrf_name:
    description: Name of VRF (routing-instance) in MX config
    label: VRF Name
    type: string
  local_as:
    type: number
    label: Local AS Number
  primary_ebgp_config_group:
    description: Name of MX config group for eBGP config
    label: eBGP config group
    type: string
  secondary_ebgp_config_group:
    description: Name of MX config group for eBGP config
    label: eBGP config group
    type: string
  uplink_vlan:
    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)
    label: Uplink VLAN ID
    type: string
  primary_peer_ip:
    description: IP address of primary router eBGP neighbour
    label: Primary device BGP peer
    type: string
  secondary_peer_ip:
    description: IP address of secondary router eBGP neighbour
    label: Secondary device BGP peer
    type: string
  primary_router_id:
    description: Primary router VRF router id
    label: Primary router id
    type: string
  secondary_router_id:
    description: Secondary router VRF router id
    label: Secondary router id
    type: string
  remote_as:
    description: eBGP remote autonomous system
    label: Remote AS
    type: string
  md5:
    description: eBGP authentication key
    label: eBGP authentication key
    type: string
  bgp_group_name:
    description: Name of eBGP group
    label: eBGP group name
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the VPN Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:



  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:  192.168.8.2/30 
      - config:
          str_replace:
            params:
              $NEIGHBOR_IP:
                    get_param: primary_peer_ip
              $REMOTE_AS:
                    get_param: remote_as
              $APPLY_GROUP:
                    get_param: primary_ebgp_config_group
              $KEY:
                    get_param: md5
            template: |
              apply-groups $APPLY_GROUP;
              local-address  192.168.8.2 ;
              peer-as $REMOTE_AS;
              neighbor $NEIGHBOR_IP authentication-key $KEY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      - config:
          str_replace:
            params:
              $ROUTER_ID:
                    get_param: primary_router_id
              $LOCAL_AS:
                    get_param: local_as
            template: |
              router-id $ROUTER_ID;
              autonomous-system $LOCAL_AS;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:  192.168.8.6/30 
      - config:
          str_replace:
            params:
              $NEIGHBOR_IP:
                    get_param: secondary_peer_ip
              $REMOTE_AS:
                    get_param: remote_as
              $APPLY_GROUP:
                    get_param: secondary_ebgp_config_group
              $KEY:
                    get_param: md5
            template: |
              apply-groups $APPLY_GROUP;
              local-address  192.168.8.6 ;
              peer-as $REMOTE_AS;
              neighbor $NEIGHBOR_IP authentication-key $KEY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      - config:
          str_replace:
            params:
              $ROUTER_ID:
                    get_param: secondary_router_id
              $LOCAL_AS:
                    get_param: local_as
            template: |
              router-id $ROUTER_ID;
              autonomous-system $LOCAL_AS;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  bgp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: bgp_pool
      resource_type: vpn_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        instance: { get_param: vrf_name }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          peer_address: { get_param: primary_peer_ip }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          peer_address: { get_param: secondary_peer_ip }
      syncer_properties:
        etcd:
          status:
            key: status
    depends_on: netconf_configure_secondary


  primary_interface_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_metric
      resource_type: vpn_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: primary_router
      properties:
        device_ip: { get_param: primary_device_ip }
        if_name: { get_param: primary_device_logical_interface }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: bgp_monitor

  secondary_interface_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_metric
      resource_type: vpn_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: secondary_router
      properties:
        device_ip: { get_param: secondary_device_ip }
        if_name: { get_param: secondary_device_logical_interface }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: bgp_monitor


outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: bgp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [bgp_monitor, link]}

  primary_interface_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: primary_interface_metric_monitor}
  primary_interface_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [primary_interface_metric_monitor, link]}

  secondary_interface_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: secondary_interface_metric_monitor}
  secondary_interface_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [secondary_interface_metric_monitor, link]}

 with parameters:
{"secondary_router_id": "192.168.8.6", "secondary_device_physical_interface": "ge-0/0/1", "primary_peer_ip": "192.168.8.1", "primary_device_logical_interface": "ge-0/0/1.122", "primary_device_password": "***", "gohan_id": "07d4f1fc-5142-4fae-b115-627fc009e222", "bgp_group_name": "CloudGW1", "remote_as": "9598", "secondary_device_ip": "10.79.5.184", "primary_device_ip": "10.79.5.185", "secondary_ebgp_config_group": "VPNGW2-RI-EBGP", "version": 1, "secondary_device_username": "esi", "secondary_device_logical_interface": "ge-0/0/1.122", "local_as": "65101", "primary_device_physical_interface": "ge-0/0/1", "uplink_vlan": "122", "md5": "test", "secondary_peer_ip": "192.168.8.5", "primary_router_id": "192.168.8.2", "primary_ebgp_config_group": "VPNGW1-RI-EBGP", "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "secondary_device_port": 830, "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "primary_device_port": 830}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_primary_uplink_ip': u'192.168.8.2/30', u'jinja_secondary_uplink_ip': u'192.168.8.6/30'} (heat.py - 145)
2018-04-16 00:09:51,411 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Creating a stack vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222 with parameters: {u'secondary_router_id': u'192.168.8.6', u'secondary_device_physical_interface': u'ge-0/0/1', u'primary_peer_ip': u'192.168.8.1', u'primary_device_logical_interface': u'ge-0/0/1.122', u'primary_device_password': u'***', u'gohan_id': u'07d4f1fc-5142-4fae-b115-627fc009e222', u'bgp_group_name': u'CloudGW1', u'remote_as': u'9598', u'secondary_device_ip': u'10.79.5.184', u'primary_device_ip': u'10.79.5.185', u'secondary_ebgp_config_group': u'VPNGW2-RI-EBGP', u'version': 1, u'secondary_device_username': u'esi', u'secondary_device_logical_interface': u'ge-0/0/1.122', u'local_as': u'65101', u'primary_device_physical_interface': u'ge-0/0/1', u'uplink_vlan': u'122', u'md5': u'test', u'secondary_peer_ip': u'192.168.8.5', u'primary_router_id': u'192.168.8.2', u'primary_ebgp_config_group': u'VPNGW1-RI-EBGP', u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'primary_device_port': 830}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  primary_device_logical_interface:
    description: Name of the created logical uplink interface on the Primary device
    label: Logical Interface name
    type: string
  secondary_device_logical_interface:
    description: Name of the created logical uplink interface on the Secondary device
    label: Logical Interface name
    type: string
  vrf_name:
    description: Name of VRF (routing-instance) in MX config
    label: VRF Name
    type: string
  local_as:
    type: number
    label: Local AS Number
  primary_ebgp_config_group:
    description: Name of MX config group for eBGP config
    label: eBGP config group
    type: string
  secondary_ebgp_config_group:
    description: Name of MX config group for eBGP config
    label: eBGP config group
    type: string
  uplink_vlan:
    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)
    label: Uplink VLAN ID
    type: string
  primary_peer_ip:
    description: IP address of primary router eBGP neighbour
    label: Primary device BGP peer
    type: string
  secondary_peer_ip:
    description: IP address of secondary router eBGP neighbour
    label: Secondary device BGP peer
    type: string
  primary_router_id:
    description: Primary router VRF router id
    label: Primary router id
    type: string
  secondary_router_id:
    description: Secondary router VRF router id
    label: Secondary router id
    type: string
  remote_as:
    description: eBGP remote autonomous system
    label: Remote AS
    type: string
  md5:
    description: eBGP authentication key
    label: eBGP authentication key
    type: string
  bgp_group_name:
    description: Name of eBGP group
    label: eBGP group name
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the VPN Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:



  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:  192.168.8.2/30 
      - config:
          str_replace:
            params:
              $NEIGHBOR_IP:
                    get_param: primary_peer_ip
              $REMOTE_AS:
                    get_param: remote_as
              $APPLY_GROUP:
                    get_param: primary_ebgp_config_group
              $KEY:
                    get_param: md5
            template: |
              apply-groups $APPLY_GROUP;
              local-address  192.168.8.2 ;
              peer-as $REMOTE_AS;
              neighbor $NEIGHBOR_IP authentication-key $KEY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      - config:
          str_replace:
            params:
              $ROUTER_ID:
                    get_param: primary_router_id
              $LOCAL_AS:
                    get_param: local_as
            template: |
              router-id $ROUTER_ID;
              autonomous-system $LOCAL_AS;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config: ""
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:  192.168.8.6/30 
      - config:
          str_replace:
            params:
              $NEIGHBOR_IP:
                    get_param: secondary_peer_ip
              $REMOTE_AS:
                    get_param: remote_as
              $APPLY_GROUP:
                    get_param: secondary_ebgp_config_group
              $KEY:
                    get_param: md5
            template: |
              apply-groups $APPLY_GROUP;
              local-address  192.168.8.6 ;
              peer-as $REMOTE_AS;
              neighbor $NEIGHBOR_IP authentication-key $KEY;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      - config:
          str_replace:
            params:
              $ROUTER_ID:
                    get_param: secondary_router_id
              $LOCAL_AS:
                    get_param: local_as
            template: |
              router-id $ROUTER_ID;
              autonomous-system $LOCAL_AS;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  bgp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: bgp_pool
      resource_type: vpn_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        instance: { get_param: vrf_name }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          peer_address: { get_param: primary_peer_ip }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          peer_address: { get_param: secondary_peer_ip }
      syncer_properties:
        etcd:
          status:
            key: status
    depends_on: netconf_configure_secondary


  primary_interface_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_metric
      resource_type: vpn_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: primary_router
      properties:
        device_ip: { get_param: primary_device_ip }
        if_name: { get_param: primary_device_logical_interface }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: primary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: bgp_monitor

  secondary_interface_metric_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports_metric
      resource_type: vpn_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: secondary_router
      properties:
        device_ip: { get_param: secondary_device_ip }
        if_name: { get_param: secondary_device_logical_interface }
        community_name: EDGE_ROUTER_COMMUNITY
      syncer_properties:
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: in
          traffic.out:
            metric: traffic.bytes
            tags:
              device_index: secondary
              resource_id: { get_param: gohan_id }
              direction: out
    depends_on: bgp_monitor


outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: bgp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [bgp_monitor, link]}

  primary_interface_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: primary_interface_metric_monitor}
  primary_interface_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [primary_interface_metric_monitor, link]}

  secondary_interface_monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: secondary_interface_metric_monitor}
  secondary_interface_monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [secondary_interface_metric_monitor, link]}
 (heat.py - 162)
2018-04-16 00:09:51,976 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:53,186 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:54,345 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:55,558 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:56,717 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:57,858 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:09:59,001 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:00,170 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:01,316 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:02,465 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:03,606 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:04,752 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:05,893 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:07,035 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:08,175 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:09,330 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:10,512 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Stack "vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:10:10,512 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - CREATED vpn_interface_07d4f1fc-5142-4fae-b115-627fc009e222 (heat.py - 280)
2018-04-16 00:10:10,875 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Job create finished with results {'heat_outputs': [{u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/3bdb3c86-ac6d-4ff2-aa55-4b2989971614', u'description': u'Monitoring Process Link', u'output_key': u'secondary_interface_monitoring_link'}, {u'output_value': u'34b9de21-40c0-46f1-afa5-787220cc5ed2', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/d7885526-613f-4565-a3df-de89ed911e3b', u'description': u'Monitoring Process Link', u'output_key': u'primary_interface_monitoring_link'}, {u'output_value': u'd7885526-613f-4565-a3df-de89ed911e3b', u'description': u'Monitoring Target ID', u'output_key': u'primary_interface_monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/34b9de21-40c0-46f1-afa5-787220cc5ed2', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'3bdb3c86-ac6d-4ff2-aa55-4b2989971614', u'description': u'Monitoring Target ID', u'output_key': u'secondary_interface_monitoring_target_id'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:10:10,914 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Job create:heat_worker:vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222:1:1r2cs finished. (job_queue.py - 266)
2018-04-16 00:10:10,915 [1;37mINFO[0m heat_worker - vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 - Trying to delete internal process state for resource vpn_interface:07d4f1fc-5142-4fae-b115-627fc009e222 (resources.py - 701)
2018-04-16 00:10:10,963 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69:2:5iv3e using id: 75d9ece9-8ab8-4424-9572-fd94780c07d8 (job_queue.py - 245)
2018-04-16 00:10:10,966 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:10:10,966 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:10:10,975 [1;34mDEBUG[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Starting work on new ready job modify:heat_worker:vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69:2:5iv3e (etcd_worker.py - 108)
2018-04-16 00:10:10,975 [1;34mDEBUG[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Checking job status for vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 (heat_stacks_worker.py - 44)
2018-04-16 00:10:11,356 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Found stack with status CREATE_COMPLETE for vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 (heat_stacks_worker.py - 55)
2018-04-16 00:10:11,357 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - MODIFY STARTED (heat_messenger.py - 123)
2018-04-16 00:10:11,898 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Template id vpn_gateway resolved from mapping: Cvpn_gateway (resources.py - 835)
2018-04-16 00:10:11,907 [1;34mDEBUG[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  VPN Gateway

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_downlink_interface:
    description: Physical port on the Primary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_uplink_interface:
    description: Physical port on the Primary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_downlink_interface:
    description: Physical port on the Secondary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_uplink_interface:
    description: Physical port on the Secondary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  downlink_vlan:
    description: vlan tag used by logical downlink interface
    label: VLAN ID
    type: string
  uplink_vlan:
    description: vlan tag used by logical uplink interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interfaces
    label: VRF name
    type: string
  input_filter_name:
    description: Name for policer used for input
    label: Input filter name
    type: string
  output_filter_name:
    description: Name for policer used for output
    label: Output filter name
    type: string
  primary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string
  secondary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: primary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: primary_device_logical_downlink_interface
              $LIFU:
                get_param: primary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: secondary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: secondary_device_logical_downlink_interface
              $LIFU:
                get_param: secondary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_logical_uplink_interface": "ge-0/0/1.122", "primary_device_logical_downlink_interface": "ae0.1025", "primary_device_password": "***", "output_filter_name": "FILTER_10M-GA-DOWN-VPN", "primary_device_ip": "10.79.5.185", "secondary_device_physical_downlink_interface": "ae0", "secondary_device_username": "esi", "primary_device_physical_uplink_interface": "ge-0/0/1", "secondary_device_logical_uplink_interface": "ge-0/0/1.122", "downlink_vlan": "1025", "secondary_device_logical_downlink_interface": "ae0.1025", "input_filter_name": "FILTER_10M-GA-UP-VPN", "uplink_vlan": "122", "secondary_device_port": 830, "secondary_device_physical_uplink_interface": "ge-0/0/1", "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "primary_device_physical_downlink_interface": "ae0", "secondary_downlink_vrrp_config_group": "VPNGW2-VRRP", "primary_device_port": 830, "primary_downlink_vrrp_config_group": "VPNGW1-VRRP", "secondary_device_ip": "10.79.5.184"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:10:11,908 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Updating a stack vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69 with parameters: {u'primary_device_logical_uplink_interface': u'ge-0/0/1.122', u'primary_device_logical_downlink_interface': u'ae0.1025', u'primary_device_password': u'***', u'output_filter_name': u'FILTER_10M-GA-DOWN-VPN', u'primary_device_ip': u'10.79.5.185', u'secondary_device_physical_downlink_interface': u'ae0', u'secondary_device_username': u'esi', u'primary_device_physical_uplink_interface': u'ge-0/0/1', u'secondary_device_logical_uplink_interface': u'ge-0/0/1.122', u'downlink_vlan': u'1025', u'secondary_device_logical_downlink_interface': u'ae0.1025', u'input_filter_name': u'FILTER_10M-GA-UP-VPN', u'uplink_vlan': u'122', u'secondary_device_port': 830, u'secondary_device_physical_uplink_interface': u'ge-0/0/1', u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'primary_device_physical_downlink_interface': u'ae0', u'secondary_downlink_vrrp_config_group': u'VPNGW2-VRRP', u'primary_device_port': 830, u'primary_downlink_vrrp_config_group': u'VPNGW1-VRRP', u'secondary_device_ip': u'10.79.5.184'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  VPN Gateway

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_downlink_interface:
    description: Physical port on the Primary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  primary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Primary device
    label: Logical Interface name
    type: string
  primary_device_physical_uplink_interface:
    description: Physical port on the Primary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_logical_downlink_interface:
    description: Name of the created logical downlink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_downlink_interface:
    description: Physical port on the Secondary device on which the logical downlink port will be configured
    label: Underlying physical interface
    type: string
  secondary_device_logical_uplink_interface:
    description: Name of the created logical uplink interface on the Secondary device
    label: Logical Interface name
    type: string
  secondary_device_physical_uplink_interface:
    description: Physical port on the Secondary device on which the logical uplink port will be configured
    label: Underlying physical interface
    type: string
  downlink_vlan:
    description: vlan tag used by logical downlink interface
    label: VLAN ID
    type: string
  uplink_vlan:
    description: vlan tag used by logical uplink interface
    label: VLAN ID
    type: string
  vrf_name:
    description: Name for VRF used by logical interfaces
    label: VRF name
    type: string
  input_filter_name:
    description: Name for policer used for input
    label: Input filter name
    type: string
  output_filter_name:
    description: Name for policer used for output
    label: Output filter name
    type: string
  primary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string
  secondary_downlink_vrrp_config_group:
    description: Name for apply group to use for downlink interface for VRRP
    label: Apply group name
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: primary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: primary_device_logical_downlink_interface
              $LIFU:
                get_param: primary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      on_update: merge
      configs:
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: downlink_vlan
              $INPUT_FILTER:
                get_param: input_filter_name
              $OUTPUT_FILTER:
                get_param: output_filter_name
              $APPLY_GROUP:
                get_param: secondary_downlink_vrrp_config_group
            template: |
              apply-groups $APPLY_GROUP
              vlan-id $VLAN;
              description vpn_gw;
              family inet {
                  filter {
                      input $INPUT_FILTER;
                      output $OUTPUT_FILTER;
                  }
              }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_downlink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan }
      - config:
          str_replace:
            params:
              $LIFD:
                get_param: secondary_device_logical_downlink_interface
              $LIFU:
                get_param: secondary_device_logical_uplink_interface
            template: |
                instance-type virtual-router;
                interface $LIFD;
                interface $LIFU;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
      - config:
          str_replace:
            params:
              $VLAN:
                get_param: uplink_vlan
            template: |
              vlan-id $VLAN;
              description CloudGW_vpn;
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_uplink_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: uplink_vlan }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 186)
2018-04-16 00:10:12,294 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:13,435 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:14,570 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:15,707 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:16,846 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:17,989 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:19,127 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:20,277 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:10:21,451 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Stack "vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-04-16 00:10:21,452 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - MODIFIED vpn_gateway_b1da850c-3344-4de2-aa18-d96a30b54f69 (heat.py - 329)
2018-04-16 00:10:21,756 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Job modify finished with results {'heat_outputs': [], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:10:21,816 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Job modify:heat_worker:vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69:2:5iv3e finished. (job_queue.py - 266)
2018-04-16 00:10:21,818 [1;37mINFO[0m heat_worker - vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 - Trying to delete internal process state for resource vpn_gateway:b1da850c-3344-4de2-aa18-d96a30b54f69 (resources.py - 701)
2018-04-16 00:10:40,977 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:10:40,978 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:10:40,978 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:11:10,990 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:11:10,991 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:11:10,992 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:11:41,005 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:11:41,005 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:11:41,006 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:11:53,669 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2:1:vodtl using id: 6c09ab08-977e-460e-9a4b-6f7d57c4d58e (job_queue.py - 245)
2018-04-16 00:11:53,678 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:11:53,679 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:11:53,686 [1;34mDEBUG[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Starting work on new ready job create:heat_worker:network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2:1:vodtl (etcd_worker.py - 108)
2018-04-16 00:11:53,686 [1;34mDEBUG[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Checking job status for network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 (heat_stacks_worker.py - 44)
2018-04-16 00:11:53,974 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:11:54,092 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Template id network resolved from mapping: Cnetwork (resources.py - 835)
2018-04-16 00:11:54,096 [1;34mDEBUG[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Network template

parameters:
  uuid:
    type: string
    label: Virtual Network UUID
    description: UUID of the virtual network that will be created.
    default: ""
  name:
    type: string
    label: Virtual Network Name
    description: Name of the virtual network that will be created.
  forwarding_mode:
    type: string
    label: Forwarding Mode
    description: Forwarding Mode.
    default: 'l2_l3'
  route_targets:
    type: comma_delimited_list
    label: Route Targets list
    default: []
  shared:
    type: boolean
    label: Shared Network
    default: false
  external:
    type: boolean
    label: External Network
    default: true
  allow_transit:
    type: boolean
    label: Allow Transit
    default: false
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true

resources:
  network:
    type: OS::Contrail::VirtualNetwork
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      forwarding_mode: { get_param: forwarding_mode }
      route_targets: { get_param: route_targets }
      shared: { get_param: shared }
      admin_state_up: { get_param: admin_state_up }

outputs:
  id:
    description: A unique id for the virtual network.
    value: { get_resource: network }
  name:
    description: The name of the virtual network.
    value: { get_attr: [network, name] }
  fq_name:
    description: The FQ name of the virtual network.
    value: { get_attr: [network, fq_name] }
  route_targets:
    description: The name of the virtual network.
    value: { get_attr: [network, route_targets] }
 with parameters:
{"admin_state_up": true, "uuid": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2", "name": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:11:54,097 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Creating a stack network_afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 with parameters: {u'admin_state_up': True, u'uuid': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'name': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Network template

parameters:
  uuid:
    type: string
    label: Virtual Network UUID
    description: UUID of the virtual network that will be created.
    default: ""
  name:
    type: string
    label: Virtual Network Name
    description: Name of the virtual network that will be created.
  forwarding_mode:
    type: string
    label: Forwarding Mode
    description: Forwarding Mode.
    default: 'l2_l3'
  route_targets:
    type: comma_delimited_list
    label: Route Targets list
    default: []
  shared:
    type: boolean
    label: Shared Network
    default: false
  external:
    type: boolean
    label: External Network
    default: true
  allow_transit:
    type: boolean
    label: Allow Transit
    default: false
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true

resources:
  network:
    type: OS::Contrail::VirtualNetwork
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      forwarding_mode: { get_param: forwarding_mode }
      route_targets: { get_param: route_targets }
      shared: { get_param: shared }
      admin_state_up: { get_param: admin_state_up }

outputs:
  id:
    description: A unique id for the virtual network.
    value: { get_resource: network }
  name:
    description: The name of the virtual network.
    value: { get_attr: [network, name] }
  fq_name:
    description: The FQ name of the virtual network.
    value: { get_attr: [network, fq_name] }
  route_targets:
    description: The name of the virtual network.
    value: { get_attr: [network, route_targets] } (heat.py - 162)
2018-04-16 00:11:54,569 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Stack "network_afa0d9d6-84dc-4755-9c6e-db2f23f9dde2" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:11:55,913 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Stack "network_afa0d9d6-84dc-4755-9c6e-db2f23f9dde2" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:11:55,913 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - CREATED network_afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 (heat.py - 280)
2018-04-16 00:11:56,336 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Job create finished with results {'heat_outputs': [{u'output_value': [], u'description': u'The name of the virtual network.', u'output_key': u'route_targets'}, {u'output_value': u'default-domain:usertenant:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'description': u'The FQ name of the virtual network.', u'output_key': u'fq_name'}, {u'output_value': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'description': u'A unique id for the virtual network.', u'output_key': u'id'}, {u'output_value': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'description': u'The name of the virtual network.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:11:56,379 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Job create:heat_worker:network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2:1:vodtl finished. (job_queue.py - 266)
2018-04-16 00:11:56,380 [1;37mINFO[0m heat_worker - network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 - Trying to delete internal process state for resource network:afa0d9d6-84dc-4755-9c6e-db2f23f9dde2 (resources.py - 701)
2018-04-16 00:12:10,965 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda:1:89l4t using id: a35b261d-3f28-47fc-ba18-b2ad2fa9f511 (job_queue.py - 245)
2018-04-16 00:12:10,967 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:10,967 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:10,973 [1;34mDEBUG[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Starting work on new ready job create:heat_worker:subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda:1:89l4t (etcd_worker.py - 108)
2018-04-16 00:12:10,973 [1;34mDEBUG[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Checking job status for subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda (heat_stacks_worker.py - 44)
2018-04-16 00:12:11,275 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:12:11,359 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Template id subnet resolved from mapping: Csubnet (resources.py - 835)
2018-04-16 00:12:11,367 [1;34mDEBUG[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Subnet template

parameters:
  name:
    type: string
    label: Local Subnet Name
    description: Name of the local subnet that will be created.
  network_id:
    type: string
    label: Network ID
    description: ID of the network for which subnet will be created.
  cidr:
    type: string
    label: Local Subnet IP prefix
    description: IP prefix of the local subnet that will be created.
  gateway_ip:
    default: "0.0.0.0"
    type: string
    label: Default Gateway
    description: Default gateway for the local subnet that will be created.
  ipam:
    type: string
    label: IP Address Management
    description: IPAM for the local subnet that will be created.
    default: ''
  enable_dhcp:
    type: boolean
    label: Enable DHCP
    description: Enable DHCP
    default: true
  dhcp_server_address:
    type: string
    label: DHCP Server address
    description: DHCP Server address
    default: "0.0.0.0"
  allocation_pools:
    type: string
    label: Allocation Pools
    description: Allocation Pools
    default: []
  dns_nameservers:
    type: comma_delimited_list
    label: DNS Nameservers List
    description: DNS Nameservers List
    default: []
  ntp_servers:
    type: comma_delimited_list
    label: NTP Nameservers List
    description: NTP Nameservers List
    default: []
  host_routes:
    type: json
    label: Host Routes
    description: Host Routes
    default: []

resources:
  subnet:
    type: OS::Contrail::VnSubnet
    properties:
      name: { get_param: name }
      network_id: { get_param: network_id }
      ip_prefix: { get_param: cidr }
      default_gateway: { get_param: gateway_ip }
      ipam: { get_param: ipam }
      enable_dhcp: { get_param: enable_dhcp }
      dns_server_address: { get_param: dhcp_server_address }
      dns_nameservers: { get_param: dns_nameservers }
      ntp_servers: { get_param: ntp_servers }
      host_routes: { get_param: host_routes }
      allocation_pools: { get_param: allocation_pools }
      gateway_is_vrouter: false

outputs:
  id:
    description: A unique id for the local subnet.
    value: { get_resource: subnet }
  name:
    description: The name of the local subnet.
    value: { get_attr: [subnet, name] }
  network_id:
    description: A unique id for the network.
    value: { get_attr: [subnet, network_id] }
  ip_prefix:
    description: IP prefix of local subnet.
    value: { get_attr: [subnet, ip_prefix] }
  default_gateway:
    description: Default gateway of local subnet.
    value: { get_attr: [subnet, default_gateway] }
  ipam:
    description: IPAM this local subnet uses.
    value: { get_attr: [subnet, ipam] }
 with parameters:
{"name": "e825f4e4-ba44-4d9e-9578-a31ad45bedda", "enable_dhcp": true, "network_id": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2", "ipam": "default-domain:default-project:default-network-ipam", "dns_nameservers": [], "allocation_pools": [{"start": "172.16.101.2", "end": "172.16.101.254"}], "dhcp_server_address": "172.16.101.2", "ntp_servers": [], "gateway_ip": "172.16.101.1", "host_routes": [], "cidr": "172.16.101.0/24"}, 
 and heat timeout = 3, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:12:11,368 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Creating a stack subnet_e825f4e4-ba44-4d9e-9578-a31ad45bedda with parameters: {u'name': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'enable_dhcp': True, u'network_id': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'ipam': u'default-domain:default-project:default-network-ipam', u'dns_nameservers': [], u'allocation_pools': [{u'start': u'172.16.101.2', u'end': u'172.16.101.254'}], u'dhcp_server_address': u'172.16.101.2', u'ntp_servers': [], u'gateway_ip': u'172.16.101.1', u'host_routes': [], u'cidr': u'172.16.101.0/24'}, timeout_mins: 3, and template: 
heat_template_version: 2013-05-23

description: >
  Subnet template

parameters:
  name:
    type: string
    label: Local Subnet Name
    description: Name of the local subnet that will be created.
  network_id:
    type: string
    label: Network ID
    description: ID of the network for which subnet will be created.
  cidr:
    type: string
    label: Local Subnet IP prefix
    description: IP prefix of the local subnet that will be created.
  gateway_ip:
    default: "0.0.0.0"
    type: string
    label: Default Gateway
    description: Default gateway for the local subnet that will be created.
  ipam:
    type: string
    label: IP Address Management
    description: IPAM for the local subnet that will be created.
    default: ''
  enable_dhcp:
    type: boolean
    label: Enable DHCP
    description: Enable DHCP
    default: true
  dhcp_server_address:
    type: string
    label: DHCP Server address
    description: DHCP Server address
    default: "0.0.0.0"
  allocation_pools:
    type: string
    label: Allocation Pools
    description: Allocation Pools
    default: []
  dns_nameservers:
    type: comma_delimited_list
    label: DNS Nameservers List
    description: DNS Nameservers List
    default: []
  ntp_servers:
    type: comma_delimited_list
    label: NTP Nameservers List
    description: NTP Nameservers List
    default: []
  host_routes:
    type: json
    label: Host Routes
    description: Host Routes
    default: []

resources:
  subnet:
    type: OS::Contrail::VnSubnet
    properties:
      name: { get_param: name }
      network_id: { get_param: network_id }
      ip_prefix: { get_param: cidr }
      default_gateway: { get_param: gateway_ip }
      ipam: { get_param: ipam }
      enable_dhcp: { get_param: enable_dhcp }
      dns_server_address: { get_param: dhcp_server_address }
      dns_nameservers: { get_param: dns_nameservers }
      ntp_servers: { get_param: ntp_servers }
      host_routes: { get_param: host_routes }
      allocation_pools: { get_param: allocation_pools }
      gateway_is_vrouter: false

outputs:
  id:
    description: A unique id for the local subnet.
    value: { get_resource: subnet }
  name:
    description: The name of the local subnet.
    value: { get_attr: [subnet, name] }
  network_id:
    description: A unique id for the network.
    value: { get_attr: [subnet, network_id] }
  ip_prefix:
    description: IP prefix of local subnet.
    value: { get_attr: [subnet, ip_prefix] }
  default_gateway:
    description: Default gateway of local subnet.
    value: { get_attr: [subnet, default_gateway] }
  ipam:
    description: IPAM this local subnet uses.
    value: { get_attr: [subnet, ipam] } (heat.py - 162)
2018-04-16 00:12:11,842 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Stack "subnet_e825f4e4-ba44-4d9e-9578-a31ad45bedda" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:13,315 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Stack "subnet_e825f4e4-ba44-4d9e-9578-a31ad45bedda" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:12:13,316 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - CREATED subnet_e825f4e4-ba44-4d9e-9578-a31ad45bedda (heat.py - 280)
2018-04-16 00:12:13,810 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Job create finished with results {'heat_outputs': [{u'output_value': u'172.16.101.0/24', u'description': u'IP prefix of local subnet.', u'output_key': u'ip_prefix'}, {u'output_value': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'description': u'The name of the local subnet.', u'output_key': u'name'}, {u'output_value': u'172.16.101.1', u'description': u'Default gateway of local subnet.', u'output_key': u'default_gateway'}, {u'output_value': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'description': u'A unique id for the network.', u'output_key': u'network_id'}, {u'output_value': u'5a79909b-2bf3-4e26-8a9c-0bf6bb175457', u'description': u'IPAM this local subnet uses.', u'output_key': u'ipam'}, {u'output_value': u'323017d2-b9fc-4407-b998-e4776b16aee8', u'description': u'A unique id for the local subnet.', u'output_key': u'id'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:12:13,871 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Job create:heat_worker:subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda:1:89l4t finished. (job_queue.py - 266)
2018-04-16 00:12:13,872 [1;37mINFO[0m heat_worker - subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda - Trying to delete internal process state for resource subnet:e825f4e4-ba44-4d9e-9578-a31ad45bedda (resources.py - 701)
2018-04-16 00:12:29,413 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1:1:2qwyd using id: 2c43186e-05f0-4c13-ba08-e5129a872eba (job_queue.py - 245)
2018-04-16 00:12:29,416 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:29,416 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:29,462 [1;34mDEBUG[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Starting work on new ready job create:heat_worker:gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1:1:2qwyd (etcd_worker.py - 108)
2018-04-16 00:12:29,463 [1;34mDEBUG[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Checking job status for gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 (heat_stacks_worker.py - 44)
2018-04-16 00:12:29,796 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:12:29,891 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Template id gw_interface_vpn resolved from mapping: ACgw_interface_&Pservice_type (resources.py - 835)
2018-04-16 00:12:29,905 [1;34mDEBUG[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  downlink_vlan_id:
    description: Vlan tag for mx logical downlink interface
    label: Vlan Tag
    type: string
  gw_vip:
    description: Virtual IP configured on VRRP
    label: Inet Address CIDR
    type: string
  primary_device_gw_ip:
    description: IP on primary device
    label: Inet Address CIDR
    type: string
  secondary_device_gw_ip:
    description: IP on secondary device
    label: Inet Address CIDR
    type: string
  netmask:
    description: Netmask for gw_ip
    label: Netmask
    type: number
  vrrp_group:
    type: string
    label: VRRP Group
  primary_device_priority:
    type: string
    label: Primary device priority
  secondary_device_priority:
    type: string
    label: Secondary device priority
  vrf_name:
    type: string
    label: VRF
  bgp_group_name:
    type: string
    label: Name of BGP Group on VRF
  local_as:
    type: string
    label: Local AS Number
  primary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  secondary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  primary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  secondary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: primary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan_id }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: primary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: primary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: secondary_device_gw_ip
              $LOCAL_AS:
                    get_param: local_as
              $APPLY_GROUP:
                    get_param: primary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP;
              local-address $DEVICE_GW_IP;
              peer-as $LOCAL_AS;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: secondary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan_id }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: secondary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: secondary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: primary_device_gw_ip
              $LOCAL_AS:
                    get_param: local_as
              $APPLY_GROUP:
                    get_param: secondary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP;
              local-address $DEVICE_GW_IP;
              peer-as $LOCAL_AS;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  vrrp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: vrrp_pool
      resource_type: gw_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        vrid:
          - { get_param: vrrp_group }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          interface: { get_param: primary_logical_interface_name }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          interface: { get_param: secondary_logical_interface_name }
      syncer_properties:
        etcd:
          status:
            key: status
          hold_options:
            positive_status:
              primary: MASTER
              secondary: BACKUP
            time_seconds: 360
    depends_on: netconf_configure_secondary

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vrrp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vrrp_monitor, link]}
 with parameters:
{"secondary_device_physical_interface": "ae0", "secondary_ibgp_config_group": "VPNGW2-RI-IBGP", "primary_device_password": "***", "secondary_device_gw_ip": "172.16.101.153", "gohan_id": "3dbcfce5-bca5-4182-991a-c23de685fcf1", "bgp_group_name": "inet-gw-group", "gw_vip": "172.16.101.151", "primary_device_ip": "10.79.5.185", "version": 1, "secondary_device_username": "esi", "downlink_vlan_id": "1025", "secondary_logical_interface_name": "ae0.1025", "primary_logical_interface_name": "ae0.1025", "local_as": "65101", "primary_device_physical_interface": "ae0", "netmask": 24, "vrrp_group": 20, "primary_device_priority": "105", "primary_device_gw_ip": "172.16.101.152", "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "secondary_device_port": 830, "secondary_device_password": "***", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "secondary_device_priority": "100", "primary_ibgp_config_group": "VPNGW1-RI-IBGP", "primary_device_port": 830, "secondary_device_ip": "10.79.5.184"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{u'jinja_force_dependency2': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'jinja_force_dependency': u'07d4f1fc-5142-4fae-b115-627fc009e222'} (heat.py - 145)
2018-04-16 00:12:29,907 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Creating a stack gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1 with parameters: {u'secondary_device_physical_interface': u'ae0', u'secondary_ibgp_config_group': u'VPNGW2-RI-IBGP', u'primary_device_password': u'***', u'secondary_device_gw_ip': u'172.16.101.153', u'gohan_id': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'bgp_group_name': u'inet-gw-group', u'gw_vip': u'172.16.101.151', u'primary_device_ip': u'10.79.5.185', u'version': 1, u'secondary_device_username': u'esi', u'downlink_vlan_id': u'1025', u'secondary_logical_interface_name': u'ae0.1025', u'primary_logical_interface_name': u'ae0.1025', u'local_as': u'65101', u'primary_device_physical_interface': u'ae0', u'netmask': 24, u'vrrp_group': 20, u'primary_device_priority': u'105', u'primary_device_gw_ip': u'172.16.101.152', u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'secondary_device_priority': u'100', u'primary_ibgp_config_group': u'VPNGW1-RI-IBGP', u'primary_device_port': 830, u'secondary_device_ip': u'10.79.5.184'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  Inet Address

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  primary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  secondary_device_physical_interface:
    description: MX physical port on which logical interface will be created
    label: Underlying physical interface
    type: string
  downlink_vlan_id:
    description: Vlan tag for mx logical downlink interface
    label: Vlan Tag
    type: string
  gw_vip:
    description: Virtual IP configured on VRRP
    label: Inet Address CIDR
    type: string
  primary_device_gw_ip:
    description: IP on primary device
    label: Inet Address CIDR
    type: string
  secondary_device_gw_ip:
    description: IP on secondary device
    label: Inet Address CIDR
    type: string
  netmask:
    description: Netmask for gw_ip
    label: Netmask
    type: number
  vrrp_group:
    type: string
    label: VRRP Group
  primary_device_priority:
    type: string
    label: Primary device priority
  secondary_device_priority:
    type: string
    label: Secondary device priority
  vrf_name:
    type: string
    label: VRF
  bgp_group_name:
    type: string
    label: Name of BGP Group on VRF
  local_as:
    type: string
    label: Local AS Number
  primary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  secondary_ibgp_config_group:
    description: Name for apply group to use for downlink interface
    label: Apply group name
    type: string
  primary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  secondary_logical_interface_name:
    description: MX logical port
    label: Underlying logical interface
    type: string
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the GW Interface
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version
resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: primary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: primary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan_id }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: primary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: primary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: secondary_device_gw_ip
              $LOCAL_AS:
                    get_param: local_as
              $APPLY_GROUP:
                    get_param: primary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP;
              local-address $DEVICE_GW_IP;
              peer-as $LOCAL_AS;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $VRRP_GROUP:
                    get_param: vrrp_group
              $PRIORITY:
                    get_param: secondary_device_priority
              $VIP:
                    get_param: gw_vip
            template: |
                vrrp-group $VRRP_GROUP {
                    virtual-address $VIP;
                    priority $PRIORITY;
                }
        path:
          - config_type: tag
            xml_type: tag
            tag: interfaces
          - config_type: name
            xml_type: named_tag
            tag: interface
            name: { get_param: secondary_device_physical_interface }
          - config_type: named_tag
            xml_type: named_tag
            tag: unit
            name: { get_param: downlink_vlan_id }
          - config_type: tag
            xml_type: tag
            tag: family
          - config_type: tag
            xml_type: tag
            tag: inet
          - config_type: named_tag
            xml_type: named_tag
            tag: address
            name:
              str_replace:
                params:
                  $DEVICE_IP:
                    get_param: secondary_device_gw_ip
                  $NETMASK:
                    get_param: netmask
                template: |
                  $DEVICE_IP/$NETMASK
      - config:
          str_replace:
            params:
              $DEVICE_GW_IP:
                    get_param: secondary_device_gw_ip
              $NEIGHBOR_GW_IP:
                    get_param: primary_device_gw_ip
              $LOCAL_AS:
                    get_param: local_as
              $APPLY_GROUP:
                    get_param: secondary_ibgp_config_group
            template: |
              apply-groups $APPLY_GROUP;
              local-address $DEVICE_GW_IP;
              peer-as $LOCAL_AS;
              neighbor $NEIGHBOR_GW_IP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: protocols
          - config_type: tag
            xml_type: tag
            tag: bgp
          - config_type: named_tag
            xml_type: named_tag
            tag: group
            name: { get_param: bgp_group_name }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs


  vrrp_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: vrrp_pool
      resource_type: gw_interfaces
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: status
      properties:
        vrid:
          - { get_param: vrrp_group }
        primary:
          host: { get_param: primary_device_ip }
          port: { get_param: primary_device_port }
          login: { get_param: primary_device_username }
          password: { get_param: primary_device_password }
          interface: { get_param: primary_logical_interface_name }
        secondary:
          host: { get_param: secondary_device_ip }
          port: { get_param: secondary_device_port }
          login: { get_param: secondary_device_username }
          password: { get_param: secondary_device_password }
          interface: { get_param: secondary_logical_interface_name }
      syncer_properties:
        etcd:
          status:
            key: status
          hold_options:
            positive_status:
              primary: MASTER
              secondary: BACKUP
            time_seconds: 360
    depends_on: netconf_configure_secondary

outputs:
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vrrp_monitor}
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vrrp_monitor, link]} (heat.py - 162)
2018-04-16 00:12:30,502 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:31,665 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:32,811 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:33,957 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:35,100 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:36,254 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:37,408 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:38,559 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:39,701 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:40,838 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:41,981 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:43,122 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:44,286 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:45,425 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:46,569 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:47,716 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:48,898 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Stack "gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:12:48,898 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - CREATED gw_interface_3dbcfce5-bca5-4182-991a-c23de685fcf1 (heat.py - 280)
2018-04-16 00:12:49,222 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Job create finished with results {'heat_outputs': [{u'output_value': u'8ac03032-a027-4965-b636-32a7b1281bfc', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/8ac03032-a027-4965-b636-32a7b1281bfc', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:12:49,269 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Job create:heat_worker:gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1:1:2qwyd finished. (job_queue.py - 266)
2018-04-16 00:12:49,273 [1;37mINFO[0m heat_worker - gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 - Trying to delete internal process state for resource gw_interface:3dbcfce5-bca5-4182-991a-c23de685fcf1 (resources.py - 701)
2018-04-16 00:12:49,317 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b:1:79pnn using id: a5fb7dc3-dd5f-45ed-9e02-1f750cfbbe71 (job_queue.py - 245)
2018-04-16 00:12:49,319 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:49,319 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:49,328 [1;34mDEBUG[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Starting work on new ready job create:heat_worker:port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b:1:79pnn (etcd_worker.py - 108)
2018-04-16 00:12:49,332 [1;34mDEBUG[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Checking job status for port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (heat_stacks_worker.py - 44)
2018-04-16 00:12:49,353 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:port:53eeb091-3297-4b9b-a200-b6568567e387:1:o685k using id: 0e185fc8-05cf-4f93-b94a-16ee860c1259 (job_queue.py - 245)
2018-04-16 00:12:49,355 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:49,360 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:49,369 [1;34mDEBUG[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Starting work on new ready job create:heat_worker:port:53eeb091-3297-4b9b-a200-b6568567e387:1:o685k (etcd_worker.py - 108)
2018-04-16 00:12:49,373 [1;34mDEBUG[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Checking job status for port:53eeb091-3297-4b9b-a200-b6568567e387 (heat_stacks_worker.py - 44)
2018-04-16 00:12:49,955 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:12:50,103 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-16 00:12:50,125 [1;34mDEBUG[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

 with parameters:
{"virtual_machine": "3dbcfce5-bca5-4182-991a-c23de685fcf1", "name": "53eeb091-3297-4b9b-a200-b6568567e387", "admin_state_up": true, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:7b:6f:90", "version": 1, "virtual_network": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2", "security_groups": [], "uuid": "53eeb091-3297-4b9b-a200-b6568567e387"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': False, u'jinja_force_dependency_gw_interface': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'jinja_fixed_ips': [{u'subnet_id': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'ip_address': u'172.16.101.153'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'323017d2-b9fc-4407-b998-e4776b16aee8']} (heat.py - 145)
2018-04-16 00:12:50,128 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Creating a stack port_53eeb091-3297-4b9b-a200-b6568567e387 with parameters: {u'virtual_machine': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'name': u'53eeb091-3297-4b9b-a200-b6568567e387', u'admin_state_up': True, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:7b:6f:90', u'version': 1, u'virtual_network': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'security_groups': [], u'uuid': u'53eeb091-3297-4b9b-a200-b6568567e387'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }
 (heat.py - 162)
2018-04-16 00:12:50,140 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:12:50,313 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-16 00:12:50,326 [1;34mDEBUG[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

 with parameters:
{"virtual_machine": "3dbcfce5-bca5-4182-991a-c23de685fcf1", "name": "5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b", "admin_state_up": true, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:7b:eb:e8", "version": 1, "virtual_network": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2", "security_groups": [], "uuid": "5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': False, u'jinja_force_dependency_gw_interface': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'jinja_fixed_ips': [{u'subnet_id': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'ip_address': u'172.16.101.151'}, {u'subnet_id': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'ip_address': u'172.16.101.152'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'323017d2-b9fc-4407-b998-e4776b16aee8', u'323017d2-b9fc-4407-b998-e4776b16aee8']} (heat.py - 145)
2018-04-16 00:12:50,327 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Creating a stack port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b with parameters: {u'virtual_machine': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'name': u'5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b', u'admin_state_up': True, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:7b:eb:e8', u'version': 1, u'virtual_network': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'security_groups': [], u'uuid': u'5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]




outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }
 (heat.py - 162)
2018-04-16 00:12:50,988 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:51,093 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:52,243 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:52,381 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:53,642 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:12:53,642 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - CREATED port_53eeb091-3297-4b9b-a200-b6568567e387 (heat.py - 280)
2018-04-16 00:12:53,831 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:12:53,832 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - CREATED port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (heat.py - 280)
2018-04-16 00:12:54,252 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Job create finished with results {'heat_outputs': [{u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:12:54,295 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Job create:heat_worker:port:53eeb091-3297-4b9b-a200-b6568567e387:1:o685k finished. (job_queue.py - 266)
2018-04-16 00:12:54,295 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Trying to delete internal process state for resource port:53eeb091-3297-4b9b-a200-b6568567e387 (resources.py - 701)
2018-04-16 00:12:54,335 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d:1:pn8fq using id: 2d2499db-8d2c-4dd6-b03d-9e39b4e48755 (job_queue.py - 245)
2018-04-16 00:12:54,340 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:54,340 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:54,354 [1;34mDEBUG[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Starting work on new ready job create:heat_worker:ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d:1:pn8fq (etcd_worker.py - 108)
2018-04-16 00:12:54,356 [1;34mDEBUG[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Checking job status for ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d (heat_stacks_worker.py - 44)
2018-04-16 00:12:54,448 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Job create finished with results {'heat_outputs': [{u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:12:54,505 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Job create:heat_worker:port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b:1:79pnn finished. (job_queue.py - 266)
2018-04-16 00:12:54,505 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Trying to delete internal process state for resource port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (resources.py - 701)
2018-04-16 00:12:54,556 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8:1:s3oth using id: 4242efa8-e53b-4ed3-977b-da908dce3a2a (job_queue.py - 245)
2018-04-16 00:12:54,558 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:54,558 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:54,570 [1;34mDEBUG[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Starting work on new ready job create:heat_worker:ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8:1:s3oth (etcd_worker.py - 108)
2018-04-16 00:12:54,571 [1;34mDEBUG[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Checking job status for ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 (heat_stacks_worker.py - 44)
2018-04-16 00:12:54,778 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:12:54,898 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Template id ese_logical_port resolved from mapping: Cese_logical_port (resources.py - 835)
2018-04-16 00:12:54,914 [1;34mDEBUG[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 53eeb091-3297-4b9b-a200-b6568567e387
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 53eeb091-3297-4b9b-a200-b6568567e387
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"logical_port_type": "L2", "logical_port_vlan_id": 1025, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.161.0.34", "version": 1, "virtual_machine_interface_ids": ["f68d0924-ef20-4c1b-ac45-0e6b879af5e7"], "logical_port_name": "xe-0/0/4.1025", "gohan_id": "257d0a9f-d5ae-4a93-9af4-81ad611e1b0d", "physical_port_id": "06bfe521-07f0-4931-9f8c-318c3ad8114e"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{u'jinja_port_ids': [u'53eeb091-3297-4b9b-a200-b6568567e387']} (heat.py - 145)
2018-04-16 00:12:54,915 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Creating a stack ese_logical_port_257d0a9f-d5ae-4a93-9af4-81ad611e1b0d with parameters: {u'logical_port_type': u'L2', u'logical_port_vlan_id': 1025, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.161.0.34', u'version': 1, u'virtual_machine_interface_ids': [u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7'], u'logical_port_name': u'xe-0/0/4.1025', u'gohan_id': u'257d0a9f-d5ae-4a93-9af4-81ad611e1b0d', u'physical_port_id': u'06bfe521-07f0-4931-9f8c-318c3ad8114e'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 53eeb091-3297-4b9b-a200-b6568567e387
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 53eeb091-3297-4b9b-a200-b6568567e387
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-16 00:12:55,054 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:12:55,169 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Template id ese_logical_port resolved from mapping: Cese_logical_port (resources.py - 835)
2018-04-16 00:12:55,176 [1;34mDEBUG[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] }
 with parameters:
{"logical_port_type": "L2", "logical_port_vlan_id": 1025, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_ip": "10.161.0.34", "version": 1, "virtual_machine_interface_ids": ["f68d0924-ef20-4c1b-ac45-0e6b879af5e7"], "logical_port_name": "xe-0/0/3.1025", "gohan_id": "e30fdd19-2f48-422e-9c68-7c59a0e2fae8", "physical_port_id": "06bfe521-07f0-4931-9f8c-318c3ad8114e"}, 
 and heat timeout = 6, rollback = False, 
using this jinja parameters: 
{u'jinja_port_ids': [u'5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b']} (heat.py - 145)
2018-04-16 00:12:55,176 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Creating a stack ese_logical_port_e30fdd19-2f48-422e-9c68-7c59a0e2fae8 with parameters: {u'logical_port_type': u'L2', u'logical_port_vlan_id': 1025, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_ip': u'10.161.0.34', u'version': 1, u'virtual_machine_interface_ids': [u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7'], u'logical_port_name': u'xe-0/0/3.1025', u'gohan_id': u'e30fdd19-2f48-422e-9c68-7c59a0e2fae8', u'physical_port_id': u'06bfe521-07f0-4931-9f8c-318c3ad8114e'}, timeout_mins: 6, and template: 
heat_template_version: 2013-05-23

description: >
  Logical port template

parameters:
  physical_port_id:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  logical_port_name:
    type: string
    label: Logical Port Name
    description: Name of the logical port.
  logical_port_type:
    type: string
    label: Logical Port Type
    description: Type of the logical port.
  logical_port_vlan_id:
    type: number
    label: VLAN id for Logical Port
    description: VLAN id to use for logical port creation.
    default: 0
  virtual_machine_interface_ids:
    type: comma_delimited_list
    label: Virtual Machine Interface ID
    description: Virtual Machine Interface ID.
  gohan_id:
    type: string
    label: Gohan resource ID
    description: UUID of the ESE Physical Port
  device_ip:
    type: string
    label: Device IP Address
    description: Device IP Address.
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  logical_interface:
    type: OS::Contrail::LogicalInterface
    properties:
      name: { get_param: logical_port_name }
      physical_interface: { get_param: physical_port_id }
      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }
      type: { get_param: logical_port_type }
      vlan: { get_param: logical_port_vlan_id }

  interface_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: snmp_ports
      resource_type: ese_logical_ports
      resource_id: { get_param: gohan_id }
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      field_name: logical_port
      properties:
        device_ip: { get_param: device_ip }
        if_name: { get_param: logical_port_name }
        community_name: ESE_NODE_COMMUNITY
      syncer_properties:
        etcd:
          status:
            key: logical_port
        tsdb:
          traffic.in:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b
                 direction: in
              
          traffic.out:
            metric: traffic.bytes
            tags:
              
              -  resource_id: { get_param: gohan_id }
                 port_id: 5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b
                 direction: out
              
    depends_on: logical_interface

outputs:
  id:
    description: A unique id for the logical interface
    value: { get_resource: logical_interface }
  name:
    description: The name of the logical interface.
    value: { get_attr: [logical_interface, name] }
  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: interface_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [interface_monitor, link] } (heat.py - 162)
2018-04-16 00:12:55,643 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Stack "ese_logical_port_257d0a9f-d5ae-4a93-9af4-81ad611e1b0d" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:55,845 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Stack "ese_logical_port_e30fdd19-2f48-422e-9c68-7c59a0e2fae8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:56,848 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Stack "ese_logical_port_257d0a9f-d5ae-4a93-9af4-81ad611e1b0d" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:57,030 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Stack "ese_logical_port_e30fdd19-2f48-422e-9c68-7c59a0e2fae8" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:12:58,152 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Stack "ese_logical_port_257d0a9f-d5ae-4a93-9af4-81ad611e1b0d" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:12:58,152 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - CREATED ese_logical_port_257d0a9f-d5ae-4a93-9af4-81ad611e1b0d (heat.py - 280)
2018-04-16 00:12:58,422 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Stack "ese_logical_port_e30fdd19-2f48-422e-9c68-7c59a0e2fae8" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:12:58,423 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - CREATED ese_logical_port_e30fdd19-2f48-422e-9c68-7c59a0e2fae8 (heat.py - 280)
2018-04-16 00:12:58,683 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Job create finished with results {'heat_outputs': [{u'output_value': u'5e4c28ad-c5f2-43fc-97e8-1b5e99642b87', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'46b0cd68-d0fb-4d72-9def-830164f9e215', u'description': u'A unique id for the logical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/5e4c28ad-c5f2-43fc-97e8-1b5e99642b87', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38.0', u'description': u'The name of the logical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:12:58,742 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Job create:heat_worker:ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d:1:pn8fq finished. (job_queue.py - 266)
2018-04-16 00:12:58,743 [1;37mINFO[0m heat_worker - ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d - Trying to delete internal process state for resource ese_logical_port:257d0a9f-d5ae-4a93-9af4-81ad611e1b0d (resources.py - 701)
2018-04-16 00:12:58,938 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:port:53eeb091-3297-4b9b-a200-b6568567e387:2:o4wqr using id: 24c94bb9-8a1e-45ac-9935-6920b89efeaa (job_queue.py - 245)
2018-04-16 00:12:58,941 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:58,942 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:58,950 [1;34mDEBUG[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Starting work on new ready job modify:heat_worker:port:53eeb091-3297-4b9b-a200-b6568567e387:2:o4wqr (etcd_worker.py - 108)
2018-04-16 00:12:58,950 [1;34mDEBUG[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Checking job status for port:53eeb091-3297-4b9b-a200-b6568567e387 (heat_stacks_worker.py - 44)
2018-04-16 00:12:59,023 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Job create finished with results {'heat_outputs': [{u'output_value': u'fc210c75-e57f-4657-8114-a528d3b3aac5', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': u'46b0cd68-d0fb-4d72-9def-830164f9e215', u'description': u'A unique id for the logical interface', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/fc210c75-e57f-4657-8114-a528d3b3aac5', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}, {u'output_value': u'xe-0/0/38.0', u'description': u'The name of the logical interface.', u'output_key': u'name'}], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:12:59,083 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Job create:heat_worker:ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8:1:s3oth finished. (job_queue.py - 266)
2018-04-16 00:12:59,084 [1;37mINFO[0m heat_worker - ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 - Trying to delete internal process state for resource ese_logical_port:e30fdd19-2f48-422e-9c68-7c59a0e2fae8 (resources.py - 701)
2018-04-16 00:12:59,224 [1;37mINFO[0m heat_worker - Reserved job: modify:heat_worker:port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b:2:5hieq using id: 6433be9f-5161-42d9-9192-7e052b121fda (job_queue.py - 245)
2018-04-16 00:12:59,226 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:12:59,227 [1;34mDEBUG[0m heat_worker - 6 job slots available (etcd_worker.py - 213)
2018-04-16 00:12:59,236 [1;34mDEBUG[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Starting work on new ready job modify:heat_worker:port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b:2:5hieq (etcd_worker.py - 108)
2018-04-16 00:12:59,236 [1;34mDEBUG[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Checking job status for port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (heat_stacks_worker.py - 44)
2018-04-16 00:12:59,636 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Found stack with status CREATE_COMPLETE for port:53eeb091-3297-4b9b-a200-b6568567e387 (heat_stacks_worker.py - 55)
2018-04-16 00:12:59,637 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - MODIFY STARTED (heat_messenger.py - 123)
2018-04-16 00:12:59,804 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Found stack with status CREATE_COMPLETE for port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (heat_stacks_worker.py - 55)
2018-04-16 00:12:59,804 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - MODIFY STARTED (heat_messenger.py - 123)
2018-04-16 00:13:00,667 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-16 00:13:00,678 [1;34mDEBUG[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }

 with parameters:
{"virtual_machine": "3dbcfce5-bca5-4182-991a-c23de685fcf1", "name": "53eeb091-3297-4b9b-a200-b6568567e387", "admin_state_up": true, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:7b:6f:90", "version": 2, "virtual_network": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2", "security_groups": [], "uuid": "53eeb091-3297-4b9b-a200-b6568567e387"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': True, u'jinja_force_dependency_gw_interface': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'jinja_fixed_ips': [{u'subnet_id': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'ip_address': u'172.16.101.153'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'323017d2-b9fc-4407-b998-e4776b16aee8']} (heat.py - 145)
2018-04-16 00:13:00,679 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Updating a stack port_53eeb091-3297-4b9b-a200-b6568567e387 with parameters: {u'virtual_machine': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'name': u'53eeb091-3297-4b9b-a200-b6568567e387', u'admin_state_up': True, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:7b:6f:90', u'version': 2, u'virtual_network': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'security_groups': [], u'uuid': u'53eeb091-3297-4b9b-a200-b6568567e387'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.153
      ip_address: 172.16.101.153
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }
 (heat.py - 186)
2018-04-16 00:13:00,935 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Template id port resolved from mapping: {u'else_mapping': {u'constant': u'port'}, u'if_mapping': {u'regexp': [{u'field': u'device_owner'}, {u'constant': u'network:dhcp|network:empty'}]}, u'then_mapping': {u'constant': None}} (resources.py - 835)
2018-04-16 00:13:00,956 [1;34mDEBUG[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }

 with parameters:
{"virtual_machine": "3dbcfce5-bca5-4182-991a-c23de685fcf1", "name": "5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b", "admin_state_up": true, "tenant_id": "b3e3095c0a5b4383805efe9cf2a6b5ef", "device_owner": "network:gw_interface", "virtual_machine_interface_allowed_address_pairs": [], "virtual_machine_interface_mac_address": "fa:16:3e:7b:eb:e8", "version": 2, "virtual_network": "afa0d9d6-84dc-4755-9c6e-db2f23f9dde2", "security_groups": [], "uuid": "5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b"}, 
 and heat timeout = 13, rollback = False, 
using this jinja parameters: 
{u'jinja_attached': True, u'jinja_force_dependency_gw_interface': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'jinja_fixed_ips': [{u'subnet_id': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'ip_address': u'172.16.101.151'}, {u'subnet_id': u'e825f4e4-ba44-4d9e-9578-a31ad45bedda', u'ip_address': u'172.16.101.152'}], u'jinja_force_dependency_cfg': None, u'jinja_device_owner': u'network:gw_interface', u'jinja_subnets': [u'323017d2-b9fc-4407-b998-e4776b16aee8', u'323017d2-b9fc-4407-b998-e4776b16aee8']} (heat.py - 145)
2018-04-16 00:13:00,957 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Updating a stack port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b with parameters: {u'virtual_machine': u'3dbcfce5-bca5-4182-991a-c23de685fcf1', u'name': u'5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b', u'admin_state_up': True, u'tenant_id': u'b3e3095c0a5b4383805efe9cf2a6b5ef', u'device_owner': u'network:gw_interface', u'virtual_machine_interface_allowed_address_pairs': [], u'virtual_machine_interface_mac_address': u'fa:16:3e:7b:eb:e8', u'version': 2, u'virtual_network': u'afa0d9d6-84dc-4755-9c6e-db2f23f9dde2', u'security_groups': [], u'uuid': u'5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b'}, timeout_mins: 13, and template: 
heat_template_version: 2013-05-23

description: >
  Virtual Machine Interface Template

parameters:
  uuid:
    type: string
    label: Backend Virtual Machine Interface UUID
    description: A unique id for the Virtual Machine Interface.
  name:
    type: string
    label: Physical Interface ID
    description: A unique id for the Physical Interface.
  security_groups:
    type: json
    default: []
    label: Security Groups List
    description: The IDs of security groups applied to the port.
  virtual_machine_interface_allowed_address_pairs:
    type: json
    label: Virtual machine interface allowed address pairs.
  virtual_machine_interface_mac_address:
    type: string
    default: "fe:ff:ff:ff:ff:ff"
    label: Virtual machine interface mac address.
  virtual_network:
    type: string
    label: Virtual Network.
  virtual_machine:
    type: string
    label: Virtual Machine.
    default: ""
  device_owner:
    type: string
    label: Device Owner
    default: ""
  admin_state_up:
    type: boolean
    label: Admin state up
    default: true
  tenant_id:
    type: string
    label: Tenant ID
  version:
    type: number
    label: Config version

resources:
  virtual_machine_interface:
    type: OS::Contrail::VirtualMachineInterface
    properties:
      uuid: { get_param: uuid }
      name: { get_param: name }
      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }
      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]
      virtual_networks: [ { get_param: virtual_network } ]
      virtual_machine: { get_param: virtual_machine }
      device_owner: { get_param: device_owner }
      admin_state_up: { get_param: admin_state_up }
      security_groups: { get_param: security_groups }



  instance_ip_0:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.151
      ip_address: 172.16.101.151
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]


  instance_ip_1:
    type: OS::Contrail::InstanceIp
    properties:
      name:
        str_replace:
          template: '%name%_%zone%_%ip%'
          params:
            "%name%": { get_param: name }
            "%zone%": e825f4e4-ba44-4d9e-9578-a31ad45bedda
            "%ip%": 172.16.101.152
      ip_address: 172.16.101.152
      subnet_id: 323017d2-b9fc-4407-b998-e4776b16aee8
      network_id: { get_param: virtual_network }
      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]



  vmi_monitor:
    type: ESI::Monitoring::MonitoringTarget
    properties:
      type: virtual_machine_interface
      resource_type: ports
      resource_id: { get_param: uuid }
      field_name: vmi
      tenant_id: { get_param: tenant_id }
      version: { get_param: version }
      properties:
        fq_name: { get_attr: [virtual_machine_interface, fq_name] }
      syncer_properties:
        etcd:
          status:
            key: vmi
        tsdb:
          traffic.in:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: in
          traffic.out:
            metric: traffic.contrail_bytes
            tags:
              resource_id: { get_param: uuid }
              direction: out
    depends_on: virtual_machine_interface


outputs:
  id:
    description: A unique id for the virtual machine interface.
    value: { get_resource: virtual_machine_interface }
  mac_address:
    description: Virtual machine interface mac address.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }
  allowed_address_pairs:
    description: Virtual machine allowed address pairs.
    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }
  virtual_network:
    description: Virtual network.
    value: { get_attr: [virtual_machine_interface, virtual_networks] }
  fq_name:
    description: Fully Qualified Name of the VMI
    value: { get_attr: [virtual_machine_interface, fq_name] }

  monitoring_target_id:
    description: Monitoring Target ID
    value: { get_resource: vmi_monitor }
  monitoring_link:
    description: Monitoring Process Link
    value: { get_attr: [vmi_monitor, link] }
 (heat.py - 186)
2018-04-16 00:13:01,194 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:01,445 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:02,338 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:02,581 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:03,501 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:03,729 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:04,658 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:04,870 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:05,827 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:06,015 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:06,982 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:07,161 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:08,129 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:08,303 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:09,278 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:09,473 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:13:10,677 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Stack "port_53eeb091-3297-4b9b-a200-b6568567e387" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-04-16 00:13:10,678 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - MODIFIED port_53eeb091-3297-4b9b-a200-b6568567e387 (heat.py - 329)
2018-04-16 00:13:10,900 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Stack "port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b" in status "UPDATE_COMPLETE" (heat.py - 221)
2018-04-16 00:13:10,900 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - MODIFIED port_5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (heat.py - 329)
2018-04-16 00:13:11,258 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Job modify finished with results {'heat_outputs': [{u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': u'aa5568e3-f399-474f-9ddb-02c0e583b91b', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}, {u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/aa5568e3-f399-474f-9ddb-02c0e583b91b', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:13:11,311 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Job modify:heat_worker:port:53eeb091-3297-4b9b-a200-b6568567e387:2:o4wqr finished. (job_queue.py - 266)
2018-04-16 00:13:11,312 [1;37mINFO[0m heat_worker - port:53eeb091-3297-4b9b-a200-b6568567e387 - Trying to delete internal process state for resource port:53eeb091-3297-4b9b-a200-b6568567e387 (resources.py - 701)
2018-04-16 00:13:11,503 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Job modify finished with results {'heat_outputs': [{u'output_value': u'default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'Fully Qualified Name of the VMI', u'output_key': u'fq_name'}, {u'output_value': {u'allowed_address_pair': []}, u'description': u'Virtual machine allowed address pairs.', u'output_key': u'allowed_address_pairs'}, {u'output_value': u'09f0db4a-16f7-4d25-840f-79436680056e', u'description': u'Monitoring Target ID', u'output_key': u'monitoring_target_id'}, {u'output_value': [u'fa:16:3e:f7:60:7f'], u'description': u'Virtual machine interface mac address.', u'output_key': u'mac_address'}, {u'output_value': [[u'default-domain', u'admin', u'b62eefe0-0872-478d-adfe-1a606320f0e7']], u'description': u'Virtual network.', u'output_key': u'virtual_network'}, {u'output_value': u'f68d0924-ef20-4c1b-ac45-0e6b879af5e7', u'description': u'A unique id for the virtual machine interface.', u'output_key': u'id'}, {u'output_value': u'http://collector-agents-se.monitoringrefactordocker_default:7070/targets/09f0db4a-16f7-4d25-840f-79436680056e', u'description': u'Monitoring Process Link', u'output_key': u'monitoring_link'}], 'orchestration_state': u'UPDATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:13:11,557 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Job modify:heat_worker:port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b:2:5hieq finished. (job_queue.py - 266)
2018-04-16 00:13:11,558 [1;37mINFO[0m heat_worker - port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b - Trying to delete internal process state for resource port:5eebab65-bf2f-4ac2-969a-15d6ccbfdd4b (resources.py - 701)
2018-04-16 00:13:29,230 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:13:29,230 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:13:29,231 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:13:59,243 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:13:59,244 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:13:59,244 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:14:29,254 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:14:29,254 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:14:29,255 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:14:35,375 [1;37mINFO[0m heat_worker - Reserved job: create:heat_worker:static_route:31980341-9bef-4f05-8df7-674dea343884:1:qyuh9 using id: b34c377d-a444-4145-918b-a9959876c7bf (job_queue.py - 245)
2018-04-16 00:14:35,377 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:14:35,377 [1;34mDEBUG[0m heat_worker - 7 job slots available (etcd_worker.py - 213)
2018-04-16 00:14:35,385 [1;34mDEBUG[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Starting work on new ready job create:heat_worker:static_route:31980341-9bef-4f05-8df7-674dea343884:1:qyuh9 (etcd_worker.py - 108)
2018-04-16 00:14:35,385 [1;34mDEBUG[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Checking job status for static_route:31980341-9bef-4f05-8df7-674dea343884 (heat_stacks_worker.py - 44)
2018-04-16 00:14:35,665 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - CREATE STARTED (heat_messenger.py - 92)
2018-04-16 00:14:35,747 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Template id static_route_vpn resolved from mapping: ACstatic_route_&Pservice_type (resources.py - 835)
2018-04-16 00:14:35,755 [1;34mDEBUG[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Heat template prepared: 
heat_template_version: 2013-05-23

description: >
  VPN Gateway Static Route

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  vrf_name:
    description: Name of VRF to add this static route
    label: VRF
    type: string
  route:
    description: Static Route definition
    label: Route
    type: string
  next_hop:
    description: Next hop for the static route
    label: Next hop
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs

 with parameters:
{"primary_device_ip": "10.79.5.185", "route": "192.168.0.0/24", "primary_device_password": "***", "secondary_device_port": 830, "secondary_device_password": "***", "next_hop": "172.16.101.1", "vrf_name": "vrf_gw_sample-ha-router-downlink_1025", "primary_device_username": "esi", "primary_device_port": 830, "secondary_device_ip": "10.79.5.184", "secondary_device_username": "esi"}, 
 and heat timeout = 60, rollback = False, 
using this jinja parameters: 
{} (heat.py - 145)
2018-04-16 00:14:35,756 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Creating a stack static_route_31980341-9bef-4f05-8df7-674dea343884 with parameters: {u'primary_device_ip': u'10.79.5.185', u'route': u'192.168.0.0/24', u'primary_device_password': u'***', u'secondary_device_port': 830, u'secondary_device_password': u'***', u'next_hop': u'172.16.101.1', u'vrf_name': u'vrf_gw_sample-ha-router-downlink_1025', u'primary_device_username': u'esi', u'primary_device_port': 830, u'secondary_device_ip': u'10.79.5.184', u'secondary_device_username': u'esi'}, timeout_mins: 60, and template: 
heat_template_version: 2013-05-23

description: >
  VPN Gateway Static Route

parameters:
  primary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Primary Device.
    label: Ip address of the device.
    type: string
  primary_device_port:
    description: Port that will be used to establish ssh connection to the Primary Device.
    label: Port of the ssh connection.
    type: number
  primary_device_username:
    description: Name of the user which will be used to log onto the Primary Device.
    label: User name to log on to device.
    type: string
  primary_device_password:
    description: Password of the user which will be used to log onto the Primary Device.
    label: Users password.
    type: string
    hidden: true
  secondary_device_ip:
    description: Ip address that will be used to establish ssh connection to the Secondary Device.
    label: Ip address of the device.
    type: string
  secondary_device_port:
    description: Port that will be used to establish ssh connection to the Secondary Device.
    label: Port of the ssh connection.
    type: number
  secondary_device_username:
    description: Name of the user which will be used to log onto the Secondary Device.
    label: User name to log on to device.
    type: string
  secondary_device_password:
    description: Password of the user which will be used to log onto the Secondary Device.
    label: Users password.
    type: string
    hidden: true
  vrf_name:
    description: Name of VRF to add this static route
    label: VRF
    type: string
  route:
    description: Static Route definition
    label: Route
    type: string
  next_hop:
    description: Next hop for the static route
    label: Next hop
    type: string

resources:

  netconf_configure_primary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: primary_device_ip
      password:
        get_param: primary_device_password
      port:
        get_param: primary_device_port
      username:
        get_param: primary_device_username
    
    type: OS::Contrail::NetconfNamedConfigs

  netconf_configure_secondary:
    properties:
      lock_timeout: 3000
      configs:
      - config:
          str_replace:
            params:
              $NEXT_HOP:
                get_param: next_hop
            template: |
              next-hop $NEXT_HOP;
        path:
          - config_type: tag
            xml_type: tag
            tag: routing-instances
          - config_type: name
            xml_type: named_tag
            tag: instance
            name: { get_param: vrf_name }
          - config_type: tag
            xml_type: tag
            tag: routing-options
          - config_type: tag
            xml_type: tag
            tag: static
          - config_type: named_tag
            xml_type: named_tag
            tag: route
            name: { get_param: route }
      device_ip:
        get_param: secondary_device_ip
      password:
        get_param: secondary_device_password
      port:
        get_param: secondary_device_port
      username:
        get_param: secondary_device_username
    depends_on: netconf_configure_primary
    type: OS::Contrail::NetconfNamedConfigs
 (heat.py - 162)
2018-04-16 00:14:36,215 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:37,361 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:38,501 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:39,672 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:40,814 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:41,950 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:43,095 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:44,248 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:45,388 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:46,526 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:47,667 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:48,810 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:49,944 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:51,084 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:52,226 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_IN_PROGRESS" (heat.py - 221)
2018-04-16 00:14:53,367 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Stack "static_route_31980341-9bef-4f05-8df7-674dea343884" in status "CREATE_COMPLETE" (heat.py - 221)
2018-04-16 00:14:53,368 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - CREATED static_route_31980341-9bef-4f05-8df7-674dea343884 (heat.py - 280)
2018-04-16 00:14:53,677 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Job create finished with results {'heat_outputs': [], 'orchestration_state': u'CREATE_COMPLETE', 'error': None} (heat_stacks_worker.py - 103)
2018-04-16 00:14:53,759 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Job create:heat_worker:static_route:31980341-9bef-4f05-8df7-674dea343884:1:qyuh9 finished. (job_queue.py - 266)
2018-04-16 00:14:53,762 [1;37mINFO[0m heat_worker - static_route:31980341-9bef-4f05-8df7-674dea343884 - Trying to delete internal process state for resource static_route:31980341-9bef-4f05-8df7-674dea343884 (resources.py - 701)
2018-04-16 00:15:05,391 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:15:05,392 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:15:05,393 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:15:35,407 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:15:35,407 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:15:35,408 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:16:05,418 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:16:05,419 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:16:05,419 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:16:35,431 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:16:35,432 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:16:35,433 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:17:05,444 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:17:05,445 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:17:05,446 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:17:35,458 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:17:35,459 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:17:35,460 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:18:05,475 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:18:05,476 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:18:05,476 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:18:35,489 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:18:35,490 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:18:35,490 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:19:05,503 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:19:05,504 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:19:05,505 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:19:35,518 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:19:35,518 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:19:35,519 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:20:05,532 [1;34mDEBUG[0m heat_worker - GetJob timeout. (etcd_worker.py - 227)
2018-04-16 00:20:05,533 [1;34mDEBUG[0m heat_worker - Waiting for a job. (etcd_worker.py - 218)
2018-04-16 00:20:05,533 [1;34mDEBUG[0m heat_worker - 8 job slots available (etcd_worker.py - 213)
2018-04-16 00:20:32,131 [1;31mERROR[0m heat_worker - Request to server http://etcd-server.monitoringrefactordocker_default:2379 failed: ProtocolError('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read)) (esi_etcd.py - 163)
2018-04-16 00:20:32,141 [1;37mINFO[0m heat_worker - Reconnection allowed, looking for another server. (esi_etcd.py - 165)
2018-04-16 00:20:32,150 [1;37mINFO[0m heat_worker - Selected new etcd server http://etcd-server:2379 (client.py - 718)
2018-04-16 00:20:32,189 [1;33mWARNING[0m heat_worker - Retrying (Retry(total=2, connect=None, read=None, redirect=0)) after connection broken by 'ProtocolError('Connection aborted.', error(111, 'ECONNREFUSED'))': /v2/keys/jobs/ready?waitIndex=1272&recursive=true&wait=true (connectionpool.py - 591)
2018-04-16 00:20:32,205 [1;33mWARNING[0m heat_worker - Retrying (Retry(total=1, connect=None, read=None, redirect=0)) after connection broken by 'ProtocolError('Connection aborted.', error(111, 'ECONNREFUSED'))': /v2/keys/jobs/ready?waitIndex=1272&recursive=true&wait=true (connectionpool.py - 591)
2018-04-16 00:20:32,259 [1;33mWARNING[0m heat_worker - Retrying (Retry(total=0, connect=None, read=None, redirect=0)) after connection broken by 'ProtocolError('Connection aborted.', error(111, 'ECONNREFUSED'))': /v2/keys/jobs/ready?waitIndex=1272&recursive=true&wait=true (connectionpool.py - 591)
2018-04-16 00:20:32,303 [1;31mERROR[0m heat_worker - Request to server http://etcd-server:2379 failed: MaxRetryError(u"HTTPConnectionPool(host=u'etcd-server', port=2379): Max retries exceeded with url: /v2/keys/jobs/ready?waitIndex=1272&recursive=true&wait=true (Caused by ProtocolError('Connection aborted.', error(111, 'ECONNREFUSED')))",) (esi_etcd.py - 163)
2018-04-16 00:20:32,318 [1;37mINFO[0m heat_worker - Reconnection allowed, looking for another server. (esi_etcd.py - 165)
2018-04-16 00:20:32,321 [1;31mERROR[0m heat_worker - Machines cache is empty, no machines to try. (client.py - 714)
2018-04-16 00:20:32,322 [1;33mWARNING[0m heat_worker - Recreating machine cache from local copy. (esi_etcd.py - 72)
2018-04-16 00:20:32,322 [1;37mINFO[0m heat_worker - Selected new etcd server http://etcd-server.monitoringrefactordocker_default:2379 (client.py - 718)
2018-04-16 00:20:32,324 [1;33mWARNING[0m heat_worker - Etcd connection problem: HTTPConnectionPool(host=u'etcd-server', port=2379): Max retries exceeded with url: /v2/keys/jobs/ready?waitIndex=1272&recursive=true&wait=true (Caused by ProtocolError('Connection aborted.', error(111, 'ECONNREFUSED'))).  (esi_etcd.py - 182)
2018-04-16 00:20:32,337 [1;37mINFO[0m heat_worker - Retrying in: 2.  (esi_etcd.py - 196)
