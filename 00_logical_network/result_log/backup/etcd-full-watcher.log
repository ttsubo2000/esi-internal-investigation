2019/02/01 00:26:21 Waiting for an update...
2019/02/01 00:26:25 Got updated data : Action=[set], key=[/jobs/all], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[4], CreatedIndex=[4]
2019/02/01 00:26:25 Got updated data : Action=[set], key=[/jobs/waiting], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[5], CreatedIndex=[5]
2019/02/01 00:26:25 Got updated data : Action=[set], key=[/jobs/ready], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[6], CreatedIndex=[6]
2019/02/01 00:26:25 Got updated data : Action=[set], key=[/jobs/working], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[7], CreatedIndex=[7]
2019/02/01 00:26:25 Got updated data : Action=[set], key=[/jobs/finished], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[8], CreatedIndex=[8]
2019/02/01 00:26:37 Got updated data : Action=[create], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:26:47.025418041 +0000 UTC], TTL=[10], ModifiedIndex=[9], CreatedIndex=[9]
2019/02/01 00:26:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:26:47.027499416 +0000 UTC], TTL=[10], ModifiedIndex=[10], CreatedIndex=[9]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/network], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"network\",\"parameter_mappings\":{\"admin_state_up\":\"Padmin_state_up\",\"heat_timeout\":\"C3\",\"name\":\"Pid\",\"uuid\":\"Pid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Network template\\n\\nparameters:\\n  uuid:\\n    type: string\\n    label: Virtual Network UUID\\n    description: UUID of the virtual network that will be created.\\n    default: \\\"\\\"\\n  name:\\n    type: string\\n    label: Virtual Network Name\\n    description: Name of the virtual network that will be created.\\n  forwarding_mode:\\n    type: string\\n    label: Forwarding Mode\\n    description: Forwarding Mode.\\n    default: 'l2_l3'\\n  route_targets:\\n    type: comma_delimited_list\\n    label: Route Targets list\\n    default: []\\n  shared:\\n    type: boolean\\n    label: Shared Network\\n    default: false\\n  external:\\n    type: boolean\\n    label: External Network\\n    default: true\\n  allow_transit:\\n    type: boolean\\n    label: Allow Transit\\n    default: false\\n  admin_state_up:\\n    type: boolean\\n    label: Admin state up\\n    default: true\\n\\nresources:\\n  network:\\n    type: OS::Contrail::VirtualNetwork\\n    properties:\\n      uuid: { get_param: uuid }\\n      name: { get_param: name }\\n      forwarding_mode: { get_param: forwarding_mode }\\n      route_targets: { get_param: route_targets }\\n      shared: { get_param: shared }\\n      admin_state_up: { get_param: admin_state_up }\\n\\noutputs:\\n  id:\\n    description: A unique id for the virtual network.\\n    value: { get_resource: network }\\n  name:\\n    description: The name of the virtual network.\\n    value: { get_attr: [network, name] }\\n  fq_name:\\n    description: The FQ name of the virtual network.\\n    value: { get_attr: [network, fq_name] }\\n  route_targets:\\n    description: The name of the virtual network.\\n    value: { get_attr: [network, route_targets] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[11], CreatedIndex=[11]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/subnet], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"subnet\",\"parameter_mappings\":{\"allocation_pools\":\"Pallocation_pools\",\"cidr\":\"Pcidr\",\"dhcp_server_address\":\"Pdhcp_server_address\",\"dns_nameservers\":\"Pdns_nameservers\",\"enable_dhcp\":\"Penable_dhcp\",\"gateway_ip\":\"Pgateway_ip\",\"heat_timeout\":\"C3\",\"host_routes\":\"Phost_routes\",\"ipam\":\"Cdefault-domain:default-project:default-network-ipam\",\"name\":\"Pid\",\"network_id\":\"Mnetwork:network_id:id\",\"ntp_servers\":\"Pntp_servers\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Subnet template\\n\\nparameters:\\n  name:\\n    type: string\\n    label: Local Subnet Name\\n    description: Name of the local subnet that will be created.\\n  network_id:\\n    type: string\\n    label: Network ID\\n    description: ID of the network for which subnet will be created.\\n  cidr:\\n    type: string\\n    label: Local Subnet IP prefix\\n    description: IP prefix of the local subnet that will be created.\\n  gateway_ip:\\n    default: \\\"0.0.0.0\\\"\\n    type: string\\n    label: Default Gateway\\n    description: Default gateway for the local subnet that will be created.\\n  ipam:\\n    type: string\\n    label: IP Address Management\\n    description: IPAM for the local subnet that will be created.\\n    default: ''\\n  enable_dhcp:\\n    type: boolean\\n    label: Enable DHCP\\n    description: Enable DHCP\\n    default: true\\n  dhcp_server_address:\\n    type: string\\n    label: DHCP Server address\\n    description: DHCP Server address\\n    default: \\\"0.0.0.0\\\"\\n  allocation_pools:\\n    type: string\\n    label: Allocation Pools\\n    description: Allocation Pools\\n    default: []\\n  dns_nameservers:\\n    type: comma_delimited_list\\n    label: DNS Nameservers List\\n    description: DNS Nameservers List\\n    default: []\\n  ntp_servers:\\n    type: comma_delimited_list\\n    label: NTP Nameservers List\\n    description: NTP Nameservers List\\n    default: []\\n  host_routes:\\n    type: json\\n    label: Host Routes\\n    description: Host Routes\\n    default: []\\n\\nresources:\\n  subnet:\\n    type: OS::Contrail::VnSubnet\\n    properties:\\n      name: { get_param: name }\\n      network_id: { get_param: network_id }\\n      ip_prefix: { get_param: cidr }\\n      default_gateway: { get_param: gateway_ip }\\n      ipam: { get_param: ipam }\\n      enable_dhcp: { get_param: enable_dhcp }\\n      dns_server_address: { get_param: dhcp_server_address }\\n      dns_nameservers: { get_param: dns_nameservers }\\n      ntp_servers: { get_param: ntp_servers }\\n      host_routes: { get_param: host_routes }\\n      allocation_pools: { get_param: allocation_pools }\\n      gateway_is_vrouter: false\\n\\noutputs:\\n  id:\\n    description: A unique id for the local subnet.\\n    value: { get_resource: subnet }\\n  name:\\n    description: The name of the local subnet.\\n    value: { get_attr: [subnet, name] }\\n  network_id:\\n    description: A unique id for the network.\\n    value: { get_attr: [subnet, network_id] }\\n  ip_prefix:\\n    description: IP prefix of local subnet.\\n    value: { get_attr: [subnet, ip_prefix] }\\n  default_gateway:\\n    description: Default gateway of local subnet.\\n    value: { get_attr: [subnet, default_gateway] }\\n  ipam:\\n    description: IPAM this local subnet uses.\\n    value: { get_attr: [subnet, ipam] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[12], CreatedIndex=[12]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/port], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"port\",\"parameter_mappings\":{\"admin_state_up\":\"Padmin_state_up\",\"device_owner\":\"Pdevice_owner\",\"heat_timeout\":\"C13\",\"jinja_attached\":\"Pattached\",\"jinja_device_owner\":\"Pdevice_owner\",\"jinja_fixed_ips\":\"Pfixed_ips\",\"jinja_force_dependency_cfg\":{\"else_mapping\":{\"constant\":null},\"if_mapping\":{\"equal\":[{\"field\":\"device_owner\"},{\"constant\":\"network:common_function_gateway\"}]},\"then_mapping\":{\"field\":\"id\",\"ignore_missing\":true,\"path\":[{\"id\":\"device_id\",\"type\":\"common_function_gateway\"}]}},\"jinja_force_dependency_gw_interface\":{\"else_mapping\":{\"constant\":null},\"if_mapping\":{\"equal\":[{\"field\":\"device_owner\"},{\"constant\":\"network:gw_interface\"}]},\"then_mapping\":{\"field\":\"id\",\"path\":[{\"id\":\"device_id\",\"type\":\"gw_interface\"}]}},\"jinja_subnets\":{\"for_field\":\"fixed_ips\",\"for_mapping\":{\"output_key\":\"id\",\"path\":[{\"id\":\"subnet_id\",\"type\":\"subnet\"}]}},\"name\":\"Pid\",\"security_groups\":\"Psecurity_groups\",\"tenant_id\":\"Ptenant_id\",\"uuid\":\"Pid\",\"version\":\"Vauto_filled\",\"virtual_machine\":\"Pdevice_id\",\"virtual_machine_interface_allowed_address_pairs\":\"Pallowed_address_pairs\",\"virtual_machine_interface_mac_address\":\"Pmac_address\",\"virtual_network\":\"Mnetwork:network_id:id\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Virtual Machine Interface Template\\n\\nparameters:\\n  uuid:\\n    type: string\\n    label: Backend Virtual Machine Interface UUID\\n    description: A unique id for the Virtual Machine Interface.\\n  name:\\n    type: string\\n    label: Physical Interface ID\\n    description: A unique id for the Physical Interface.\\n  security_groups:\\n    type: json\\n    default: []\\n    label: Security Groups List\\n    description: The IDs of security groups applied to the port.\\n  virtual_machine_interface_allowed_address_pairs:\\n    type: json\\n    label: Virtual machine interface allowed address pairs.\\n  virtual_machine_interface_mac_address:\\n    type: string\\n    default: \\\"fe:ff:ff:ff:ff:ff\\\"\\n    label: Virtual machine interface mac address.\\n  virtual_network:\\n    type: string\\n    label: Virtual Network.\\n  virtual_machine:\\n    type: string\\n    label: Virtual Machine.\\n    default: \\\"\\\"\\n  device_owner:\\n    type: string\\n    label: Device Owner\\n    default: \\\"\\\"\\n  admin_state_up:\\n    type: boolean\\n    label: Admin state up\\n    default: true\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  virtual_machine_interface:\\n    type: OS::Contrail::VirtualMachineInterface\\n    properties:\\n      uuid: { get_param: uuid }\\n      name: { get_param: name }\\n      virtual_machine_interface_allowed_address_pairs: { get_param: virtual_machine_interface_allowed_address_pairs }\\n      virtual_machine_interface_mac_addresses: [ { get_param: virtual_machine_interface_mac_address } ]\\n      virtual_networks: [ { get_param: virtual_network } ]\\n      virtual_machine: { get_param: virtual_machine }\\n      device_owner: { get_param: device_owner }\\n      admin_state_up: { get_param: admin_state_up }\\n      security_groups: { get_param: security_groups }\\n\\n{% for fixed_ip in jinja_fixed_ips %}\\n{% set instance_ip_id = 'instance_ip_' + (loop.index0|string) %}\\n  {{ instance_ip_id }}:\\n    type: OS::Contrail::InstanceIp\\n    properties:\\n      name:\\n        str_replace:\\n          template: '%name%_%zone%_%ip%'\\n          params:\\n            \\\"%name%\\\": { get_param: name }\\n            \\\"%zone%\\\": {{ fixed_ip.subnet_id }}\\n            \\\"%ip%\\\": {{ fixed_ip.ip_address }}\\n      ip_address: {{ fixed_ip.ip_address }}\\n      subnet_id: {{ jinja_subnets[loop.index0] }}\\n      network_id: { get_param: virtual_network }\\n      virtual_machine_interfaces: [ { get_resource: virtual_machine_interface } ]\\n{% endfor %}\\n\\n{% if jinja_device_owner and jinja_attached %}\\n  vmi_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: virtual_machine_interface\\n      resource_type: ports\\n      resource_id: { get_param: uuid }\\n      field_name: vmi\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      properties:\\n        fq_name: { get_attr: [virtual_machine_interface, fq_name] }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: vmi\\n          hold_options:\\n            positive_status:\\n              - UP\\n              - DOWN\\n            time_seconds: 210\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bps\\n            tags:\\n              resource_id: { get_param: uuid }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bps\\n            tags:\\n              resource_id: { get_param: uuid }\\n              direction: out\\n    depends_on: virtual_machine_interface\\n{% endif %}\\n\\noutputs:\\n  id:\\n    description: A unique id for the virtual machine interface.\\n    value: { get_resource: virtual_machine_interface }\\n  mac_address:\\n    description: Virtual machine interface mac address.\\n    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_mac_addresses] }\\n  allowed_address_pairs:\\n    description: Virtual machine allowed address pairs.\\n    value: { get_attr: [virtual_machine_interface, virtual_machine_interface_allowed_address_pairs] }\\n  virtual_network:\\n    description: Virtual network.\\n    value: { get_attr: [virtual_machine_interface, virtual_networks] }\\n  fq_name:\\n    description: Fully Qualified Name of the VMI\\n    value: { get_attr: [virtual_machine_interface, fq_name] }\\n{% if jinja_device_owner and jinja_attached %}\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vmi_monitor }\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vmi_monitor, link] }\\n{% endif %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[13], CreatedIndex=[13]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/ese_physical_port_existing], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"ese_physical_port_existing\",\"parameter_mappings\":{\"device_ip\":\"Fese_device+ese_device_id:management_ip_address\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C6\",\"physical_device_hostname\":\"Fese_device+ese_device_id:hostname\",\"physical_port_name\":\"Pname\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Physical port template\\n\\nparameters:\\n  physical_device_hostname:\\n    type: string\\n    label: Physical Device Hostname\\n    description: Hostname of the physical device on which physical port will be created.\\n  physical_port_name:\\n    type: string\\n    label: Physical Interface Name\\n    description: Name of the physical port.\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the ESE Physical Port\\n  device_ip:\\n    type: string\\n    label: Device IP Address\\n    description: Device IP Address.\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  physical_interface:\\n    type: OS::Contrail::ExistingResource\\n    properties:\\n      fq_name:\\n        - \\\"default-global-system-config\\\"\\n        - { get_param: physical_device_hostname }\\n        - { get_param: physical_port_name }\\n      resource_type: \\\"physical_interface\\\"\\n\\n  interface_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_status\\n      resource_type: ese_physical_ports\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: port\\n      properties:\\n        device_ip: { get_param: device_ip }\\n        if_name: { get_param: physical_port_name }\\n        community_name: ESE_NODE_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: port\\n    depends_on: physical_interface\\n\\noutputs:\\n  id:\\n    description: A unique id for the physical interface\\n    value: { get_resource: physical_interface }\\n  name:\\n    description: The name of the physical interface.\\n    value: { get_attr: [physical_interface, name] }\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: interface_monitor }\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [interface_monitor, link] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[14], CreatedIndex=[14]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/ese_physical_port_new], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"ese_physical_port_new\",\"parameter_mappings\":{\"device_ip\":\"Fese_device+ese_device_id:management_ip_address\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C6\",\"physical_device\":\"Mese_device:ese_device_id:id\",\"physical_port_name\":\"Pname\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Physical port template\\n\\nparameters:\\n  physical_device:\\n    type: string\\n    label: Physical Device Id\\n    description: Id of the physical device on which physical port will be created.\\n  physical_port_name:\\n    type: string\\n    label: Physical Interface Name\\n    description: Name of the physical port.\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the ESE Physical Port\\n  device_ip:\\n    type: string\\n    label: Device IP Address\\n    description: Device IP Address.\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  physical_interface:\\n    type: OS::Contrail::PhysicalInterface\\n    properties:\\n      name: { get_param: physical_port_name }\\n      physical_router: { get_param: physical_device }\\n\\n  interface_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_status\\n      resource_type: ese_physical_ports\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: port\\n      properties:\\n        device_ip: { get_param: device_ip }\\n        if_name: { get_param: physical_port_name }\\n        community_name: ESE_NODE_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: port\\n    depends_on: physical_interface\\n\\noutputs:\\n  id:\\n    description: A unique id for the physical interface\\n    value: { get_resource: physical_interface }\\n  name:\\n    description: The name of the physical interface.\\n    value: { get_attr: [physical_interface, name] }\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: interface_monitor }\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [interface_monitor, link] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[15], CreatedIndex=[15]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/ese_logical_port], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"ese_logical_port\",\"parameter_mappings\":{\"device_ip\":\"Fese_physical_port+ese_physical_port_id:ese_device+ese_device_id:management_ip_address\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C6\",\"jinja_port_ids\":\"Pport_ids\",\"logical_port_name\":\"Pname\",\"logical_port_type\":\"Ptype\",\"logical_port_vlan_id\":\"Pvlan_id\",\"physical_port_id\":\"Mese_physical_port:ese_physical_port_id:id\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\",\"virtual_machine_interface_ids\":{\"for_field\":\"port_ids\",\"for_mapping\":{\"output_key\":\"id\",\"path\":[{\"id\":\"\",\"type\":\"port\"}]}}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Logical port template\\n\\nparameters:\\n  physical_port_id:\\n    type: string\\n    label: Physical Interface ID\\n    description: A unique id for the Physical Interface.\\n  logical_port_name:\\n    type: string\\n    label: Logical Port Name\\n    description: Name of the logical port.\\n  logical_port_type:\\n    type: string\\n    label: Logical Port Type\\n    description: Type of the logical port.\\n  logical_port_vlan_id:\\n    type: number\\n    label: VLAN id for Logical Port\\n    description: VLAN id to use for logical port creation.\\n    default: 0\\n  virtual_machine_interface_ids:\\n    type: comma_delimited_list\\n    label: Virtual Machine Interface ID\\n    description: Virtual Machine Interface ID.\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the ESE Physical Port\\n  device_ip:\\n    type: string\\n    label: Device IP Address\\n    description: Device IP Address.\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  logical_interface:\\n    type: OS::Contrail::LogicalInterface\\n    properties:\\n      name: { get_param: logical_port_name }\\n      physical_interface: { get_param: physical_port_id }\\n      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }\\n      type: { get_param: logical_port_type }\\n      vlan: { get_param: logical_port_vlan_id }\\n\\n  interface_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports\\n      resource_type: ese_logical_ports\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: logical_port\\n      properties:\\n        device_ip: { get_param: device_ip }\\n        if_name: { get_param: logical_port_name }\\n        community_name: ESE_NODE_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: logical_port\\n          hold_options:\\n            positive_status:\\n              - UP\\n              - DOWN\\n            time_seconds: 30\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              {% for port_id in jinja_port_ids %}\\n              -  resource_id: { get_param: gohan_id }\\n                 port_id: {{ port_id }}\\n                 direction: in\\n              {% endfor %}\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              {% for port_id in jinja_port_ids %}\\n              -  resource_id: { get_param: gohan_id }\\n                 port_id: {{ port_id }}\\n                 direction: out\\n              {% endfor %}\\n    depends_on: logical_interface\\n\\noutputs:\\n  id:\\n    description: A unique id for the logical interface\\n    value: { get_resource: logical_interface }\\n  name:\\n    description: The name of the logical interface.\\n    value: { get_attr: [logical_interface, name] }\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: interface_monitor }\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [interface_monitor, link] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[16], CreatedIndex=[16]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/local_subnet], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"local_subnet\",\"parameter_mappings\":{\"cidr\":\"Pcidr\",\"name\":\"Pid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Local Subnet template\\n\\nparameters:\\n  name:\\n    type: string\\n    label: Local Subnet Name\\n    description: Name of the local subnet that will be created.\\n  cidr:\\n    type: string\\n    label: Local Subnet IP prefix\\n    description: IP prefix of the local subnet that will be created.\\n  virtual_machine_interface_ids:\\n    type: comma_delimited_list\\n    label: Virtual Machine Interface IDs\\n    description: Virtual Machine Interface IDs.\\n    default: []\\n\\nresources:\\n  subnet:\\n    type: OS::Contrail::Subnet\\n    properties:\\n      name: { get_param: name }\\n      ip_prefix: { get_param: cidr }\\n      virtual_machine_interfaces: { get_param: virtual_machine_interface_ids }\\n\\noutputs:\\n  id:\\n    description: A unique id for the local subnet.\\n    value: { get_resource: subnet }\\n  name:\\n    description: The name of the local subnet.\\n    value: { get_attr: [subnet, name] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[17], CreatedIndex=[17]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/ese_device_existing], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"ese_device_existing\",\"parameter_mappings\":{\"device_ip\":\"Pmanagement_ip_address\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C6\",\"hostname\":\"Phostname\",\"name\":\"Pname\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  ESE Device (existing) template\\n\\nparameters:\\n  name:\\n    type: string\\n    label: Physical Router Name\\n    description: Name of the physical router that will be created.\\n  hostname:\\n    type: string\\n    label: Hostname\\n    description: Name of host (vrouter) to create router on\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the ESE Device\\n  device_ip:\\n    type: string\\n    label: Device IP Address\\n    description: Device IP Address.\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  physical_router:\\n    type: OS::Contrail::ExistingResource\\n    properties:\\n      fq_name:\\n        - \\\"default-global-system-config\\\"\\n        - { get_param: hostname }\\n      resource_type: \\\"physical_router\\\"\\n\\n  device_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_device\\n      resource_type: ese_devices\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: switch\\n      properties:\\n        device_ip: { get_param: device_ip }\\n        community_name: ESE_NODE_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: switch\\n    depends_on: physical_router\\n\\noutputs:\\n  id:\\n    description: A unique id for the physical router.\\n    value: { get_resource: physical_router }\\n  name:\\n    description: The name of the physical router.\\n    value: { get_attr: [physical_router, name] }\\n  fq_name:\\n    description: The FQ name of the physical router.\\n    value: { get_attr: [physical_router, fq_name] }\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: device_monitor }\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [device_monitor, link] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[18], CreatedIndex=[18]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/ese_device_new], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"ese_device_new\",\"parameter_mappings\":{\"dataplane_ip\":\"Ppublic_ip_address\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C6\",\"management_ip\":\"Pmanagement_ip_address\",\"name\":\"Phostname\",\"password\":\"Ppassword\",\"product_name\":\"Pname\",\"tenant_id\":\"Ptenant_id\",\"tor_agent_names\":\"Ptor_agent_names\",\"tsn_names\":\"Ptsn_names\",\"username\":\"Pusername\",\"vendor_name\":\"CJuniper\",\"version\":\"Vauto_filled\",\"vnc_managed\":\"CFalse\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Physical router template\\n\\nparameters:\\n  name:\\n    type: string\\n    label: Physical Router Name\\n    description: Name of the physical router that will be created.\\n  tor_agent_names:\\n    type: comma_delimited_list\\n    label: TOR Agent Names\\n    description: List of virtual router names of TOR agents.\\n    constraints:\\n      - length: { min: 1 }\\n        description: List must not be empty.\\n    schema:\\n      '*': { type: string }\\n  tsn_names:\\n    type: comma_delimited_list\\n    label: TOR Service Node Names\\n    description: List of virtual router names of TOR service nodes.\\n    constraints:\\n      - length: { min: 1 }\\n        description: List must not be empty.\\n    schema:\\n      '*': { type: string }\\n  management_ip:\\n    type: string\\n    label: Management IP Address\\n    description: Management IP Address.\\n  dataplane_ip:\\n    type: string\\n    label: Dataplane IP Address\\n    description: Dataplane Address.\\n  vendor_name:\\n    type: string\\n    default: \\\"\\\"\\n    label: Vendor Name\\n    description: Vendor name of the physical router.\\n  product_name:\\n    type: string\\n    default: \\\"\\\"\\n    label: Product Name\\n    description: Product name of the physical router.\\n  vnc_managed:\\n    type: boolean\\n    default: False\\n    label: VNC managed\\n    description: VNC managed.\\n  username:\\n    type: string\\n    label: Username\\n    description: Username used to login to the physical router.\\n  password:\\n    type: string\\n    label: Password\\n    description: Password used to login to the physical router.\\n    hidden: true\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the ESE Device\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  physical_router:\\n    type: OS::Contrail::PhysicalRouter\\n    properties:\\n      name: { get_param: name }\\n      virtual_routers:\\n        'Fn::Split':\\n          - ','\\n          - 'Fn::Join':\\n            - ','\\n            - - 'Fn::Join': [',', get_param: tor_agent_names ]\\n              - 'Fn::Join': [',', get_param: tsn_names ]\\n      management_ip: { get_param: management_ip }\\n      dataplane_ip: { get_param: dataplane_ip }\\n      vendor_name: { get_param: vendor_name }\\n      product_name: { get_param: product_name }\\n      vnc_managed: { get_param: vnc_managed }\\n      user_credentials:\\n        username: { get_param: username }\\n        password: { get_param: password }\\n\\n  device_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_device\\n      resource_type: ese_devices\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: switch\\n      properties:\\n        device_ip: { get_param: management_ip }\\n        community_name: ESE_NODE_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: switch\\n    depends_on: physical_router\\n\\noutputs:\\n  id:\\n    description: A unique id for the physical router.\\n    value: { get_resource: physical_router }\\n  name:\\n    description: The name of the physical router.\\n    value: { get_attr: [physical_router, name] }\\n  fq_name:\\n    description: The FQ name of the physical router.\\n    value: { get_attr: [physical_router, fq_name] }\\n  vendor_name:\\n    description: The vendor name of the physical router.\\n    value: { get_attr: [physical_router, vendor_name] }\\n  product_name:\\n    description: The product name of the physical router.\\n    value: { get_attr: [physical_router, product_name] }\\n  management_ip:\\n    description: The managment IP of the physical router.\\n    value: { get_attr: [physical_router, management_ip] }\\n  dataplane_ip:\\n    description: The dataplane IP of the physical router.\\n    value: { get_attr: [physical_router, dataplane_ip] }\\n  vnc_managed:\\n    description: Physical rotuer vnc managed.\\n    value: { get_attr: [physical_router, vnc_managed] }\\n  virtual_routers:\\n    description: List of virtual routers.\\n    value: { get_attr: [physical_router, virtual_routers] }\\n  physical_interfaces:\\n    description: List of physical interfaces attached.\\n    value: { get_attr: [physical_router, physical_interfaces] }\\n  logical_interfaces:\\n    description: List of logical interfaces attached.\\n    value: { get_attr: [physical_router, logical_interfaces] }\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: device_monitor }\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [device_monitor, link] }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[19], CreatedIndex=[19]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/edge_router], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"edge_router\",\"parameter_mappings\":{\"device_ip\":\"Pip\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C3\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Physical port template\\n\\nparameters:\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the Edge Router\\n  device_ip:\\n    type: string\\n    label: Device IP Address\\n    description: Device IP Address\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  device_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_device\\n      resource_type: edge_routers\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: router\\n      properties:\\n        device_ip: { get_param: device_ip }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: router\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: device_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [device_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[20], CreatedIndex=[20]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/er_physical_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"er_physical_interface\",\"parameter_mappings\":{\"device_ip\":\"Fedge_router+device_id:ip\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C3\",\"if_name\":\"Pname\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Physical port template\\n\\nparameters:\\n  if_name:\\n    type: string\\n    label: Interface Name\\n    description: Name of the ER Physical Interface\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the ER Physical Interface\\n  device_ip:\\n    type: string\\n    label: Device IP Address\\n    description: Device IP Address\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n  interface_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_status\\n      resource_type: er_physical_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: interface\\n      properties:\\n        device_ip: { get_param: device_ip }\\n        if_name: { get_param: if_name }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: interface\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: interface_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [interface_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[21], CreatedIndex=[21]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/internet_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"internet_gateway\",\"parameter_mappings\":{\"counter_name_in\":\"APvrf_name\\u0026C_IN\",\"counter_name_out\":\"APvrf_name\\u0026C_OUT\",\"filter_term_name\":\"APvrf_name\\u0026C_filter\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C60\",\"inet_in_filter\":\"Finternet_service+internet_service_id:inet_in_filter\",\"inet_out_filter\":\"Finternet_service+internet_service_id:inet_out_filter\",\"input_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:incoming_policer_name\",\"jinja_vrf_config\":\"Finternet_service+internet_service_id:vrf_config\",\"output_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:outgoing_policer_name\",\"prefix_list_name\":\"APvrf_name\\u0026C_prefix\",\"primary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_interface\":\"Pprimary_logical_interface_name\",\"primary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_vrrp_config_group\":\"Finternet_service+internet_service_id:primary_vrrp_config_group\",\"secondary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_interface\":\"Psecondary_logical_interface_name\",\"secondary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_vrrp_config_group\":\"Finternet_service+internet_service_id:secondary_vrrp_config_group\",\"tenant_id\":\"Ptenant_id\",\"uplink_import_policy\":\"Finternet_service+internet_service_id:uplink_import_policy\",\"version\":\"Vauto_filled\",\"vlan\":\"Pvlan_id\",\"vrf_export_policy\":\"Finternet_service+internet_service_id:vrf_export_policy\",\"vrf_import_policy\":\"Finternet_service+internet_service_id:vrf_import_policy\",\"vrf_name\":\"Pvrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Internet GW Instance\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: Physical port on the Primary device on which the logical port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_interface:\\n    description: Name of the created logical interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_interface:\\n    description: Physical port on the Secondary device on which the logical port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_interface:\\n    description: Name of the created logical interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  vlan:\\n    description: vlan tag used by logical interface\\n    label: VLAN ID\\n    type: string\\n  vrf_name:\\n    description: Name for VRF used by logical interface\\n    label: VRF name\\n    type: string\\n  vrf_import_policy:\\n    description: Import Policy for IGS\\n    label: Import Policy\\n    type: string\\n  vrf_export_policy:\\n    description: Export Policy for IGS\\n    label: Export Policy\\n    type: string\\n  uplink_import_policy:\\n    description: Uplink Import Policy for IGS\\n    label: Uplink Import Policy\\n    type: string\\n  input_filter_name:\\n    description: Policer name to use as input policer\\n    label: Input policer name\\n    type: string\\n  output_filter_name:\\n    description: Policer name to use as output policer\\n    label: Output policer name\\n    type: string\\n  primary_vrrp_config_group:\\n    description: Name for apply group to use for interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_vrrp_config_group:\\n    description: Name for apply group to use for interface for VRRP\\n    label: Apply group name\\n    type: string\\n  inet_in_filter:\\n    label: Internet Input Filter\\n    type: string\\n  inet_out_filter:\\n    label: Internet Output Filter\\n    type: string\\n  prefix_list_name:\\n    label: Prefix list name\\n    type: string\\n  filter_term_name:\\n    label: Filter term name\\n    type: string\\n  counter_name_in:\\n    type: string\\n    label: Input counter name\\n  counter_name_out:\\n    type: string\\n    label: Output counter name\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      on_update: merge\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_vrrp_config_group\\n              $VLAN:\\n                get_param: vlan\\n              $INPUT_FILTER:\\n                get_param: input_filter_name\\n              $OUTPUT_FILTER:\\n                get_param: output_filter_name\\n            template: |\\n              apply-groups $APPLY_GROUP\\n              vlan-id $VLAN;\\n              description inet_gw;\\n              family inet {\\n                  filter {\\n                      input $INPUT_FILTER;\\n                      output $OUTPUT_FILTER;\\n                  }\\n              }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: vlan }\\n      - config:\\n          str_replace:\\n            params:\\n              $LIF:\\n                get_param: {{ device }}_device_logical_interface\\n              $IMPORT_POLICY:\\n                get_param: vrf_import_policy\\n              $EXPORT_POLICY:\\n                get_param: vrf_export_policy\\n            template: |\\n                instance-type virtual-router;\\n                interface $LIF;\\n                routing-options instance-import $IMPORT_POLICY;\\n                routing-options instance-export $EXPORT_POLICY;{% if jinja_vrf_config %}\\n                {{ jinja_vrf_config }}{% endif %}\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $VRF_NAME:\\n                get_param: vrf_name\\n            template: |\\n              from instance $VRF_NAME;\\n              then accept;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: policy-options\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: policy-statement\\n            name: { get_param: uplink_import_policy }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: term\\n            name: { get_param: vrf_name }\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: policy-options\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: prefix-list\\n            name: { get_param: prefix_list_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX_LIST_NAME:\\n                get_param: prefix_list_name\\n              $VRF_NAME:\\n                get_param: vrf_name\\n            template: |\\n               from {\\n                  destination-prefix-list {\\n                       $PREFIX_LIST_NAME;\\n                  }\\n               }\\n               then {\\n                    count $VRF_NAME_IN;\\n                    accept;\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name: { get_param: inet_in_filter }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: term\\n            name: { get_param: filter_term_name }\\n        additional_commands:\\n          str_replace:\\n            params:\\n              $TERM_NAME:\\n                get_param: filter_term_name\\n              $INET_IN:\\n                get_param: inet_in_filter\\n            template: |\\n              insert firewall family inet filter $INET_IN term $TERM_NAME before term all-accept\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX_LIST_NAME:\\n                get_param: prefix_list_name\\n              $VRF_NAME:\\n                get_param: vrf_name\\n            template: |\\n               from {\\n                  source-prefix-list {\\n                       $PREFIX_LIST_NAME;\\n                  }\\n               }\\n               then {\\n                    count $VRF_NAME_OUT;\\n                    accept;\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name: { get_param: inet_out_filter }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: term\\n            name: { get_param: filter_term_name }\\n        additional_commands:\\n          str_replace:\\n            params:\\n              $TERM_NAME:\\n                get_param: filter_term_name\\n              $INET_OUT:\\n                get_param: inet_out_filter\\n            template: |\\n              insert firewall family inet filter $INET_OUT term $TERM_NAME before term all-accept\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_igs_metric_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: igs_counter\\n      resource_type: internet_gateways\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: {{ device }}_counter\\n      properties:\\n        counter_name_in: { get_param: counter_name_in }\\n        counter_name_out: { get_param: counter_name_out }\\n        host: { get_param: {{ device }}_device_ip }\\n        port: { get_param: {{ device }}_device_port }\\n        login: { get_param: {{ device }}_device_username }\\n        password: { get_param: {{ device }}_device_password }\\n        primary_device_ip: { get_param: primary_device_ip }\\n        secondary_device_ip: { get_param: secondary_device_ip }\\n      syncer_properties:\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\n    depends_on: netconf_configure_secondary\\n{% endfor %}\\n\\noutputs:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: {{ device }}_igs_metric_monitor}\\n  {{ device }}_monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [{{ device }}_igs_metric_monitor, link]}\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[22], CreatedIndex=[22]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/static_route_internet], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"static_route_internet\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"jinja_dummy_dependency\":{\"field\":\"id\",\"ignore_missing\":true,\"path\":[{\"id\":\"public_ip_id\",\"type\":\"public_ip\"}]},\"next_hop\":\"Pnexthop\",\"primary_device_ip\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"route\":\"Pdestination\",\"secondary_device_ip\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"vrf_name\":\"Finternet_gateway+internet_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Internet Gateway Static Route\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  vrf_name:\\n    description: Name of VRF to add this static route\\n    label: VRF\\n    type: string\\n  route:\\n    description: Static Route definition\\n    label: Route\\n    type: string\\n  next_hop:\\n    description: Next hop for the static route\\n    label: Next hop\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $NEXT_HOP:\\n                get_param: next_hop\\n            template: |\\n              next-hop $NEXT_HOP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: { get_param: route }\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[23], CreatedIndex=[23]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gw_interface_internet], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gw_interface_internet\",\"parameter_mappings\":{\"bgp_group_name\":\"Cinet-gw-group\",\"gohan_id\":\"Pid\",\"gw_vip\":\"Pgw_vipv4\",\"heat_timeout\":\"C60\",\"jinja_dummy_dependency\":{\"field\":\"id\",\"ignore_missing\":true,\"path\":[{\"id\":\"public_ip_id\",\"type\":\"public_ip\"}]},\"jinja_force_dependency\":{\"field\":\"id\",\"path\":[{\"id\":\"network_id\",\"type\":\"network\"}]},\"netmask\":\"Pnetmask\",\"primary_device_gw_ip\":\"Pprimary_ipv4\",\"primary_device_ip\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_priority\":\"C105\",\"primary_device_username\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ibgp_config_group\":\"Finternet_gateway+internet_gw_id:internet_service+internet_service_id:primary_ibgp_config_group\",\"primary_logical_interface_name\":\"Finternet_gateway+internet_gw_id:primary_logical_interface_name\",\"secondary_device_gw_ip\":\"Psecondary_ipv4\",\"secondary_device_ip\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_priority\":\"C100\",\"secondary_device_username\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ibgp_config_group\":\"Finternet_gateway+internet_gw_id:internet_service+internet_service_id:secondary_ibgp_config_group\",\"secondary_logical_interface_name\":\"Finternet_gateway+internet_gw_id:secondary_logical_interface_name\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\",\"vlan\":\"Finternet_gateway+internet_gw_id:vlan_id\",\"vrf_name\":\"Finternet_gateway+internet_gw_id:vrf_name\",\"vrrp_group\":\"Pvrid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  vlan:\\n    description: Vlan tag for mx logical interface\\n    label: Vlan Tag\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    type: string\\n    label: VRF\\n  bgp_group_name:\\n    type: string\\n    label: Name of BGP Group on VRF\\n  primary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  secondary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                    get_param: vrrp_group\\n              $PRIORITY:\\n                    get_param: {{ device }}_device_priority\\n              $VIP:\\n                    get_param: gw_vip\\n            template: |\\n                vrrp-group $VRRP_GROUP {\\n                    virtual-address $VIP;\\n                    priority $PRIORITY;\\n                }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: vlan }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name:\\n              str_replace:\\n                params:\\n                  $DEVICE_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n                  $NETMASK:\\n                    get_param: netmask\\n                template: |\\n                  $DEVICE_IP/$NETMASK\\n      - config:\\n          str_replace:\\n            params:\\n              $DEVICE_GW_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n              $NEIGHBOR_GW_IP:\\n                    get_param: {% if device == \\\"secondary\\\" %}primary{% else %}secondary{% endif %}_device_gw_ip\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ibgp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP\\n              local-address $DEVICE_GW_IP;\\n              neighbor $NEIGHBOR_GW_IP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: gw_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[24], CreatedIndex=[24]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/qos_option_internet], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"qos_option_internet\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"incoming_policer_config\":\"Pincoming_policer_config\",\"incoming_policer_name\":\"Pincoming_policer_name\",\"jinja_be_forwarding_class\":\"Finternet_service+internet_service_id:be_forwarding_class\",\"jinja_ga_forwarding_class\":\"Finternet_service+internet_service_id:ga_forwarding_class\",\"jinja_type\":\"Pqos_type\",\"neighbour_prefix\":\"Finternet_service+internet_service_id:neighbour_prefix\",\"outgoing_policer_config\":\"Poutgoing_policer_config\",\"outgoing_policer_name\":\"Poutgoing_policer_name\",\"primary_device_ip\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_router+ha_router_id:edge_router+primary_router_id:login\",\"secondary_device_ip\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:login\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  incoming_policer_name:\\n    description: Name of created incoming policer\\n    label: Incoming policer name\\n    type: string\\n  incoming_policer_config:\\n    description: Configuration of incoming policer\\n    label: Incoming policer config\\n    type: string\\n  outgoing_policer_name:\\n    description: Name of created outgoing policer\\n    label: Outgoing policer name\\n    type: string\\n  outgoing_policer_config:\\n    description: Configuration of outgoing policer\\n    label: Outgoing policer config\\n    type: string\\n  neighbour_prefix:\\n    description: Name of prefix list used to specify traffic source/destination\\n    label: Neighbour prefix\\n    type: string\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          { get_param: incoming_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: three-color-policer\\n            name: { get_param: incoming_policer_name }\\n      - config:\\n          { get_param: outgoing_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: policer\\n            name: { get_param: outgoing_policer_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $CLASS:\\n                {% if jinja_type == \\\"besteffort\\\" %} {{ jinja_be_forwarding_class }} {% else %} {{ jinja_ga_forwarding_class }} {% endif %}\\n              $POLICER_NAME:\\n                get_param: incoming_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol vrrp;\\n                   }\\n                   then policer 10K-RE;\\n                   then accept;\\n               }\\n               term qos {\\n                   then {\\n                       three-color-policer {\\n                           {% if jinja_type == \\\"besteffort\\\" %}two-rate{% else %}single-rate{% endif %} $POLICER_NAME;\\n                       }\\n                       forwarding-class $CLASS;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: incoming_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $POLICER_NAME:\\n                get_param: outgoing_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       destination-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       protocol vrrp;\\n                   }\\n                   then accept;\\n               }\\n               term policer {\\n                   then {\\n                       policer $POLICER_NAME;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: outgoing_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[25], CreatedIndex=[25]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/public_ip], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"public_ip\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"ip_cidr\":\"Pcidr\",\"ip_mask\":\"Psubmask_length\",\"prefix_list_name\":\"AFinternet_gateway+internet_gw_id:vrf_name\\u0026C_prefix\",\"primary_device_ip\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"secondary_device_ip\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Finternet_gateway+internet_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  prefix_list_name:\\n    label: Prefix List name.\\n    type: string\\n  ip_cidr:\\n    label: Public IP CIDR\\n    type: string\\n  ip_mask:\\n    label: Public IP CIDR\\n    type: string\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: policy-options\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: prefix-list\\n            name: { get_param: prefix_list_name }\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: prefix-list-item\\n            name:\\n              str_replace:\\n                params:\\n                  $CIDR:\\n                    { get_param: ip_cidr }\\n                  $MASK:\\n                    { get_param: ip_mask }\\n                template: |\\n                  $CIDR/$MASK\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[26], CreatedIndex=[26]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/qos_option_vpn], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"qos_option_vpn\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"incoming_policer_config\":\"Pincoming_policer_config\",\"incoming_policer_name\":\"Pincoming_policer_name\",\"jinja_be_forwarding_class\":\"Fvpn_service+vpn_service_id:be_forwarding_class\",\"jinja_ga_forwarding_class\":\"Fvpn_service+vpn_service_id:ga_forwarding_class\",\"jinja_type\":\"Pqos_type\",\"neighbour_prefix\":\"Fvpn_service+vpn_service_id:neighbour_prefix\",\"outgoing_policer_config\":\"Poutgoing_policer_config\",\"outgoing_policer_name\":\"Poutgoing_policer_name\",\"primary_device_ip\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_router+ha_router_id:edge_router+primary_router_id:login\",\"secondary_device_ip\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:login\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  incoming_policer_name:\\n    description: Name of created incoming policer\\n    label: Incoming policer name\\n    type: string\\n  incoming_policer_config:\\n    description: Configuration of incoming policer\\n    label: Incoming policer config\\n    type: string\\n  outgoing_policer_name:\\n    description: Name of created outgoing policer\\n    label: Outgoing policer name\\n    type: string\\n  outgoing_policer_config:\\n    description: Configuration of outgoing policer\\n    label: Outgoing policer config\\n    type: string\\n  neighbour_prefix:\\n    description: Name of prefix list used to specify traffic source/destination\\n    label: Neighbour prefix\\n    type: string\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          { get_param: incoming_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: three-color-policer\\n            name: { get_param: incoming_policer_name }\\n      - config:\\n          { get_param: outgoing_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: policer\\n            name: { get_param: outgoing_policer_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $CLASS:\\n                {% if jinja_type == \\\"besteffort\\\" %} {{ jinja_be_forwarding_class }} {% else %} {{ jinja_ga_forwarding_class }} {% endif %}\\n              $POLICER_NAME:\\n                get_param: incoming_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol vrrp;\\n                   }\\n                   then policer 10K-RE;\\n                   then accept;\\n               }\\n               term qos {\\n                   then {\\n                       three-color-policer {\\n                           {% if jinja_type == \\\"besteffort\\\" %}two-rate{% else %}single-rate{% endif %} $POLICER_NAME;\\n                       }\\n                       forwarding-class $CLASS;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: incoming_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $POLICER_NAME:\\n                get_param: outgoing_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       destination-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       protocol vrrp;\\n                   }\\n                   then accept;\\n               }\\n               term policer {\\n                   then {\\n                       policer $POLICER_NAME;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: outgoing_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[27], CreatedIndex=[27]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/vpn_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"vpn_gateway\",\"parameter_mappings\":{\"downlink_vlan\":\"Pdownlink_vlan_id\",\"heat_timeout\":\"C60\",\"input_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:incoming_policer_name\",\"output_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:outgoing_policer_name\",\"primary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_downlink_interface\":\"Pprimary_logical_downlink_interface_name\",\"primary_device_logical_uplink_interface\":\"Pprimary_logical_uplink_interface_name\",\"primary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_downlink_vrrp_config_group\":\"Fvpn_service+vpn_service_id:primary_downlink_vrrp_config_group\",\"secondary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_downlink_interface\":\"Psecondary_logical_downlink_interface_name\",\"secondary_device_logical_uplink_interface\":\"Psecondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_downlink_vrrp_config_group\":\"Fvpn_service+vpn_service_id:secondary_downlink_vrrp_config_group\",\"uplink_vlan\":\"Puplink_vlan_id\",\"vrf_name\":\"Pvrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  VPN Gateway\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_downlink_interface:\\n    description: Physical port on the Primary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_uplink_interface:\\n    description: Physical port on the Primary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_downlink_interface:\\n    description: Physical port on the Secondary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_uplink_interface:\\n    description: Physical port on the Secondary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan:\\n    description: vlan tag used by logical downlink interface\\n    label: VLAN ID\\n    type: string\\n  uplink_vlan:\\n    description: vlan tag used by logical uplink interface\\n    label: VLAN ID\\n    type: string\\n  vrf_name:\\n    description: Name for VRF used by logical interfaces\\n    label: VRF name\\n    type: string\\n  input_filter_name:\\n    description: Name for policer used for input\\n    label: Input filter name\\n    type: string\\n  output_filter_name:\\n    description: Name for policer used for output\\n    label: Output filter name\\n    type: string\\n  primary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      on_update: merge\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: downlink_vlan\\n              $INPUT_FILTER:\\n                get_param: input_filter_name\\n              $OUTPUT_FILTER:\\n                get_param: output_filter_name\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_downlink_vrrp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP\\n              vlan-id $VLAN;\\n              description vpn_gw;\\n              family inet {\\n                  filter {\\n                      input $INPUT_FILTER;\\n                      output $OUTPUT_FILTER;\\n                  }\\n              }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_downlink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan }\\n      - config:\\n          str_replace:\\n            params:\\n              $LIFD:\\n                get_param: {{ device }}_device_logical_downlink_interface\\n              $LIFU:\\n                get_param: {{ device }}_device_logical_uplink_interface\\n            template: |\\n                instance-type virtual-router;\\n                interface $LIFD;\\n                interface $LIFU;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: uplink_vlan\\n            template: |\\n              vlan-id $VLAN;\\n              description CloudGW_vpn;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_uplink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[28], CreatedIndex=[28]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gw_interface_vpn], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gw_interface_vpn\",\"parameter_mappings\":{\"bgp_group_name\":\"Cinet-gw-group\",\"downlink_vlan_id\":\"Fvpn_gateway+vpn_gw_id:downlink_vlan_id\",\"gohan_id\":\"Pid\",\"gw_vip\":\"Pgw_vipv4\",\"heat_timeout\":\"C60\",\"jinja_force_dependency\":\"Fvpn_gateway+vpn_gw_id:vpn_interface+connected_vpn_interface:id\",\"jinja_force_dependency2\":{\"field\":\"id\",\"path\":[{\"id\":\"network_id\",\"type\":\"network\"}]},\"local_as\":\"Fvpn_gateway+vpn_gw_id:local_as_number\",\"netmask\":\"Pnetmask\",\"primary_device_gw_ip\":\"Pprimary_ipv4\",\"primary_device_ip\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_priority\":\"C105\",\"primary_device_username\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ibgp_config_group\":\"Fvpn_gateway+vpn_gw_id:vpn_service+vpn_service_id:primary_ibgp_config_group\",\"primary_logical_interface_name\":\"Fvpn_gateway+vpn_gw_id:primary_logical_downlink_interface_name\",\"secondary_device_gw_ip\":\"Psecondary_ipv4\",\"secondary_device_ip\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_priority\":\"C100\",\"secondary_device_username\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ibgp_config_group\":\"Fvpn_gateway+vpn_gw_id:vpn_service+vpn_service_id:secondary_ibgp_config_group\",\"secondary_logical_interface_name\":\"Fvpn_gateway+vpn_gw_id:secondary_logical_downlink_interface_name\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Fvpn_gateway+vpn_gw_id:vrf_name\",\"vrrp_group\":\"Pvrid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan_id:\\n    description: Vlan tag for mx logical downlink interface\\n    label: Vlan Tag\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    type: string\\n    label: VRF\\n  bgp_group_name:\\n    type: string\\n    label: Name of BGP Group on VRF\\n  local_as:\\n    type: string\\n    label: Local AS Number\\n  primary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  secondary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                    get_param: vrrp_group\\n              $PRIORITY:\\n                    get_param: {{ device }}_device_priority\\n              $VIP:\\n                    get_param: gw_vip\\n            template: |\\n                vrrp-group $VRRP_GROUP {\\n                    virtual-address $VIP;\\n                    priority $PRIORITY;\\n                }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan_id }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name:\\n              str_replace:\\n                params:\\n                  $DEVICE_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n                  $NETMASK:\\n                    get_param: netmask\\n                template: |\\n                  $DEVICE_IP/$NETMASK\\n      - config:\\n          str_replace:\\n            params:\\n              $DEVICE_GW_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n              $NEIGHBOR_GW_IP:\\n                    get_param: {% if device == \\\"secondary\\\" %}primary{% else %}secondary{% endif %}_device_gw_ip\\n              $LOCAL_AS:\\n                    get_param: local_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ibgp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address $DEVICE_GW_IP;\\n              peer-as $LOCAL_AS;\\n              neighbor $NEIGHBOR_GW_IP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: gw_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[29], CreatedIndex=[29]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/static_route_vpn], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"static_route_vpn\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"next_hop\":\"Pnexthop\",\"primary_device_ip\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"route\":\"Pdestination\",\"secondary_device_ip\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"vrf_name\":\"Fvpn_gateway+vpn_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  VPN Gateway Static Route\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  vrf_name:\\n    description: Name of VRF to add this static route\\n    label: VRF\\n    type: string\\n  route:\\n    description: Static Route definition\\n    label: Route\\n    type: string\\n  next_hop:\\n    description: Next hop for the static route\\n    label: Next hop\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $NEXT_HOP:\\n                get_param: next_hop\\n            template: |\\n              next-hop $NEXT_HOP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: { get_param: route }\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[30], CreatedIndex=[30]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/vpn_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"vpn_interface\",\"parameter_mappings\":{\"bgp_group_name\":\"CCloudGW1\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C60\",\"jinja_primary_uplink_ip\":\"Oprimary:ip_address\",\"jinja_secondary_uplink_ip\":\"Osecondary:ip_address\",\"local_as\":\"Fvpn_gateway+vpn_gw_id:local_as_number\",\"md5\":\"Pbgp_md5\",\"primary_device_ip\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_interface\":\"Fvpn_gateway+vpn_gw_id:primary_logical_uplink_interface_name\",\"primary_device_password\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fvpn_gateway+vpn_gw_id:ha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ebgp_config_group\":\"Fvpn_gateway+vpn_gw_id:vpn_service+vpn_service_id:primary_ebgp_config_group\",\"primary_peer_ip\":\"Oprimary:bgp_peer_ip\",\"primary_router_id\":\"Oprimary:bgp_router_id\",\"remote_as\":\"Pbgp_remote_as\",\"secondary_device_ip\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_interface\":\"Fvpn_gateway+vpn_gw_id:secondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fvpn_gateway+vpn_gw_id:ha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fvpn_gateway+vpn_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ebgp_config_group\":\"Fvpn_gateway+vpn_gw_id:vpn_service+vpn_service_id:secondary_ebgp_config_group\",\"secondary_peer_ip\":\"Osecondary:bgp_peer_ip\",\"secondary_router_id\":\"Osecondary:bgp_router_id\",\"tenant_id\":\"Ptenant_id\",\"uplink_vlan\":\"Fvpn_gateway+vpn_gw_id:uplink_vlan_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Fvpn_gateway+vpn_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  vrf_name:\\n    description: Name of VRF (routing-instance) in MX config\\n    label: VRF Name\\n    type: string\\n  local_as:\\n    type: number\\n    label: Local AS Number\\n  primary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  secondary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  uplink_vlan:\\n    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)\\n    label: Uplink VLAN ID\\n    type: string\\n  primary_peer_ip:\\n    description: IP address of primary router eBGP neighbour\\n    label: Primary device BGP peer\\n    type: string\\n  secondary_peer_ip:\\n    description: IP address of secondary router eBGP neighbour\\n    label: Secondary device BGP peer\\n    type: string\\n  primary_router_id:\\n    description: Primary router VRF router id\\n    label: Primary router id\\n    type: string\\n  secondary_router_id:\\n    description: Secondary router VRF router id\\n    label: Secondary router id\\n    type: string\\n  remote_as:\\n    description: eBGP remote autonomous system\\n    label: Remote AS\\n    type: string\\n  md5:\\n    description: eBGP authentication key\\n    label: eBGP authentication key\\n    type: string\\n  bgp_group_name:\\n    description: Name of eBGP group\\n    label: eBGP group name\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the VPN Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n{% set primary_ip_uplink_split = jinja_primary_uplink_ip.split('/') %}\\n{% set secondary_ip_uplink_split = jinja_secondary_uplink_ip.split('/') %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name: {% if device == \\\"primary\\\" %} {{ jinja_primary_uplink_ip }} {% else %} {{ jinja_secondary_uplink_ip }} {% endif %}\\n      - config:\\n          str_replace:\\n            params:\\n              $NEIGHBOR_IP:\\n                    get_param: {{ device }}_peer_ip\\n              $REMOTE_AS:\\n                    get_param: remote_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ebgp_config_group\\n              $KEY:\\n                    get_param: md5\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address {% if device == \\\"primary\\\" %} {{ primary_ip_uplink_split[0] }} {% else %} {{ secondary_ip_uplink_split[0] }} {% endif %};\\n              peer-as $REMOTE_AS;\\n              neighbor $NEIGHBOR_IP authentication-key $KEY;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $ROUTER_ID:\\n                    get_param: {{device}}_router_id\\n              $LOCAL_AS:\\n                    get_param: local_as\\n            template: |\\n              router-id $ROUTER_ID;\\n              autonomous-system $LOCAL_AS;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\\n  bgp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: bgp_pool\\n      resource_type: vpn_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        instance: { get_param: vrf_name }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          peer_address: { get_param: primary_peer_ip }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          peer_address: { get_param: secondary_peer_ip }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n    depends_on: netconf_configure_secondary\\n\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_metric_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_metric\\n      resource_type: vpn_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: {{ device }}_router\\n      properties:\\n        device_ip: { get_param: {{ device }}_device_ip }\\n        if_name: { get_param: {{ device }}_device_logical_interface }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\n    depends_on: bgp_monitor\\n{% endfor %}\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: bgp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [bgp_monitor, link]}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: {{ device }}_interface_metric_monitor}\\n  {{ device }}_interface_monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [{{ device }}_interface_metric_monitor, link]}\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[31], CreatedIndex=[31]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/qos_option_aws], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"qos_option_aws\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"incoming_policer_config\":\"Pincoming_policer_config\",\"incoming_policer_name\":\"Pincoming_policer_name\",\"jinja_be_forwarding_class\":\"Faws_service+aws_service_id:be_forwarding_class\",\"jinja_ga_forwarding_class\":\"Faws_service+aws_service_id:ga_forwarding_class\",\"jinja_type\":\"Pqos_type\",\"neighbour_prefix\":\"Faws_service+aws_service_id:neighbour_prefix\",\"outgoing_policer_config\":\"Poutgoing_policer_config\",\"outgoing_policer_name\":\"Poutgoing_policer_name\",\"primary_device_ip\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_router+ha_router_id:edge_router+primary_router_id:login\",\"secondary_device_ip\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:login\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  incoming_policer_name:\\n    description: Name of created incoming policer\\n    label: Incoming policer name\\n    type: string\\n  incoming_policer_config:\\n    description: Configuration of incoming policer\\n    label: Incoming policer config\\n    type: string\\n  outgoing_policer_name:\\n    description: Name of created outgoing policer\\n    label: Outgoing policer name\\n    type: string\\n  outgoing_policer_config:\\n    description: Configuration of outgoing policer\\n    label: Outgoing policer config\\n    type: string\\n  neighbour_prefix:\\n    description: Name of prefix list used to specify traffic source/destination\\n    label: Neighbour prefix\\n    type: string\\nresources:\\n{% set forewarding_class = be_forwarding_class if qos_type == \\\"besteffort\\\" else ga_forwarding_class %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          { get_param: incoming_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: three-color-policer\\n            name: { get_param: incoming_policer_name }\\n      - config:\\n          { get_param: outgoing_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: policer\\n            name: { get_param: outgoing_policer_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $CLASS:\\n                {% if jinja_type == \\\"besteffort\\\" %} {{ jinja_be_forwarding_class }} {% else %} {{ jinja_ga_forwarding_class }} {% endif %}\\n              $POLICER_NAME:\\n                get_param: incoming_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol vrrp;\\n                   }\\n                   then policer 10K-RE;\\n                   then accept;\\n               }\\n               term qos {\\n                   then {\\n                       three-color-policer {\\n                           {% if jinja_type == \\\"besteffort\\\" %}two-rate{% else %}single-rate{% endif %} $POLICER_NAME;\\n                       }\\n                       forwarding-class $CLASS;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: incoming_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $POLICER_NAME:\\n                get_param: outgoing_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       destination-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       protocol vrrp;\\n                   }\\n                   then accept;\\n               }\\n               term policer {\\n                   then {\\n                       policer $POLICER_NAME;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: outgoing_policer_name\\n                template: |\\n                  FILTER_$NAME\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[32], CreatedIndex=[32]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/aws_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"aws_gateway\",\"parameter_mappings\":{\"downlink_vlan\":\"Pdownlink_vlan_id\",\"heat_timeout\":\"C60\",\"input_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:incoming_policer_name\",\"output_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:outgoing_policer_name\",\"primary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_downlink_interface\":\"Pprimary_logical_downlink_interface_name\",\"primary_device_logical_uplink_interface\":\"Pprimary_logical_uplink_interface_name\",\"primary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_downlink_vrrp_config_group\":\"Faws_service+aws_service_id:primary_downlink_vrrp_config_group\",\"secondary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_downlink_interface\":\"Psecondary_logical_downlink_interface_name\",\"secondary_device_logical_uplink_interface\":\"Psecondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_downlink_vrrp_config_group\":\"Faws_service+aws_service_id:secondary_downlink_vrrp_config_group\",\"uplink_vlan\":\"Puplink_vlan_id\",\"vrf_name\":\"Pvrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  AWS Gateway\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_downlink_interface:\\n    description: Physical port on the Primary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_uplink_interface:\\n    description: Physical port on the Primary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_downlink_interface:\\n    description: Physical port on the Secondary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_uplink_interface:\\n    description: Physical port on the Secondary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan:\\n    description: vlan tag used by logical downlink interface\\n    label: VLAN ID\\n    type: string\\n  uplink_vlan:\\n    description: vlan tag used by logical uplink interface\\n    label: VLAN ID\\n    type: string\\n  vrf_name:\\n    description: Name for VRF used by logical interfaces\\n    label: VRF name\\n    type: string\\n  input_filter_name:\\n    description: Name for policer used for input\\n    label: Input filter name\\n    type: string\\n  output_filter_name:\\n    description: Name for policer used for output\\n    label: Output filter name\\n    type: string\\n  primary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      on_update: merge\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: downlink_vlan\\n              $INPUT_FILTER:\\n                get_param: input_filter_name\\n              $OUTPUT_FILTER:\\n                get_param: output_filter_name\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_downlink_vrrp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              vlan-id $VLAN;\\n              description AWS_Downlink;\\n              family inet {\\n                  filter {\\n                      input $INPUT_FILTER;\\n                      output $OUTPUT_FILTER;\\n                  }\\n              }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_downlink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan }\\n      - config:\\n          str_replace:\\n            params:\\n              $LIFD:\\n                get_param: {{ device }}_device_logical_downlink_interface\\n              $LIFU:\\n                get_param: {{ device }}_device_logical_uplink_interface\\n            template: |\\n                instance-type virtual-router;\\n                interface $LIFD;\\n                interface $LIFU;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: uplink_vlan\\n            template: |\\n              vlan-id $VLAN;\\n              description AWS_Uplink;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_uplink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[33], CreatedIndex=[33]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gw_interface_aws], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gw_interface_aws\",\"parameter_mappings\":{\"bgp_group_name\":\"Cinet-gw-group\",\"downlink_vlan_id\":\"Faws_gateway+aws_gw_id:downlink_vlan_id\",\"gohan_id\":\"Pid\",\"gw_vip\":\"Pgw_vipv4\",\"heat_timeout\":\"C60\",\"jinja_force_dependency\":\"Faws_gateway+aws_gw_id:aws_interface+connected_aws_interface:id\",\"jinja_force_dependency2\":{\"field\":\"id\",\"path\":[{\"id\":\"network_id\",\"type\":\"network\"}]},\"local_as\":\"Faws_gateway+aws_gw_id:local_as_number\",\"netmask\":\"Pnetmask\",\"primary_device_gw_ip\":\"Pprimary_ipv4\",\"primary_device_ip\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_priority\":\"C105\",\"primary_device_username\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ibgp_config_group\":\"Faws_gateway+aws_gw_id:aws_service+aws_service_id:primary_ibgp_config_group\",\"primary_logical_interface_name\":\"Faws_gateway+aws_gw_id:primary_logical_downlink_interface_name\",\"secondary_device_gw_ip\":\"Psecondary_ipv4\",\"secondary_device_ip\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_priority\":\"C100\",\"secondary_device_username\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ibgp_config_group\":\"Faws_gateway+aws_gw_id:aws_service+aws_service_id:secondary_ibgp_config_group\",\"secondary_logical_interface_name\":\"Faws_gateway+aws_gw_id:secondary_logical_downlink_interface_name\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Faws_gateway+aws_gw_id:vrf_name\",\"vrrp_group\":\"Pvrid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan_id:\\n    description: Vlan tag for mx logical downlink interface\\n    label: Vlan Tag\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    type: string\\n    label: VRF\\n  bgp_group_name:\\n    type: string\\n    label: Name of BGP Group on VRF\\n  local_as:\\n    type: string\\n    label: Local AS Number\\n  primary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  secondary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                    get_param: vrrp_group\\n              $PRIORITY:\\n                    get_param: {{ device }}_device_priority\\n              $VIP:\\n                    get_param: gw_vip\\n            template: |\\n                vrrp-group $VRRP_GROUP {\\n                    virtual-address $VIP;\\n                    priority $PRIORITY;\\n                }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan_id }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name:\\n              str_replace:\\n                params:\\n                  $DEVICE_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n                  $NETMASK:\\n                    get_param: netmask\\n                template: |\\n                  $DEVICE_IP/$NETMASK\\n      - config:\\n          str_replace:\\n            params:\\n              $DEVICE_GW_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n              $NEIGHBOR_GW_IP:\\n                    get_param: {% if device == \\\"secondary\\\" %}primary{% else %}secondary{% endif %}_device_gw_ip\\n              $LOCAL_AS:\\n                    get_param: local_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ibgp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address $DEVICE_GW_IP;\\n              peer-as $LOCAL_AS;\\n              neighbor $NEIGHBOR_GW_IP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: gw_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[34], CreatedIndex=[34]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/static_route_aws], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"static_route_aws\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"next_hop\":\"Pnexthop\",\"primary_device_ip\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"route\":\"Pdestination\",\"secondary_device_ip\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"vrf_name\":\"Faws_gateway+aws_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  AWS Gateway Static Route\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  vrf_name:\\n    description: Name of VRF to add this static route\\n    label: VRF\\n    type: string\\n  route:\\n    description: Static Route definition\\n    label: Route\\n    type: string\\n  next_hop:\\n    description: Next hop for the static route\\n    label: Next hop\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $NEXT_HOP:\\n                get_param: next_hop\\n            template: |\\n              next-hop $NEXT_HOP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: { get_param: route }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[35], CreatedIndex=[35]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/aws_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"aws_interface\",\"parameter_mappings\":{\"bgp_group_name\":\"CAWS-PE\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C60\",\"jinja_primary_uplink_ip\":\"Oprimary:ip_address\",\"jinja_secondary_uplink_ip\":\"Osecondary:ip_address\",\"local_as\":\"Faws_gateway+aws_gw_id:local_as_number\",\"md5\":\"Pbgp_md5\",\"primary_device_ip\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_interface\":\"Faws_gateway+aws_gw_id:primary_logical_uplink_interface_name\",\"primary_device_password\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Faws_gateway+aws_gw_id:ha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ebgp_config_group\":\"Faws_gateway+aws_gw_id:aws_service+aws_service_id:primary_ebgp_config_group\",\"primary_peer_ip\":\"Oprimary:bgp_peer_ip\",\"primary_router_id\":\"Oprimary:bgp_router_id\",\"remote_as\":\"Pbgp_remote_as\",\"secondary_device_ip\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_interface\":\"Faws_gateway+aws_gw_id:secondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Faws_gateway+aws_gw_id:ha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Faws_gateway+aws_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ebgp_config_group\":\"Faws_gateway+aws_gw_id:aws_service+aws_service_id:secondary_ebgp_config_group\",\"secondary_peer_ip\":\"Osecondary:bgp_peer_ip\",\"secondary_router_id\":\"Osecondary:bgp_router_id\",\"tenant_id\":\"Ptenant_id\",\"uplink_vlan\":\"Faws_gateway+aws_gw_id:uplink_vlan_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Faws_gateway+aws_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  vrf_name:\\n    description: Name of VRF (routing-instance) in MX config\\n    label: VRF Name\\n    type: string\\n  local_as:\\n    type: number\\n    label: Local AS Number\\n  primary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  secondary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  uplink_vlan:\\n    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)\\n    label: Uplink VLAN ID\\n    type: string\\n  primary_peer_ip:\\n    description: IP address of primary router eBGP neighbour\\n    label: Primary device BGP peer\\n    type: string\\n  secondary_peer_ip:\\n    description: IP address of secondary router eBGP neighbour\\n    label: Secondary device BGP peer\\n    type: string\\n  primary_router_id:\\n    description: Primary router VRF router id\\n    label: Primary router id\\n    type: string\\n  secondary_router_id:\\n    description: Secondary router VRF router id\\n    label: Secondary router id\\n    type: string\\n  remote_as:\\n    description: eBGP remote autonomous system\\n    label: Remote AS\\n    type: string\\n  md5:\\n    description: eBGP authentication key\\n    label: eBGP authentication key\\n    type: string\\n  bgp_group_name:\\n    description: Name of eBGP group\\n    label: eBGP group name\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the AWS Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n{% set primary_ip_uplink_split = jinja_primary_uplink_ip.split('/') %}\\n{% set secondary_ip_uplink_split = jinja_secondary_uplink_ip.split('/') %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name: {% if device == \\\"primary\\\" %} {{ jinja_primary_uplink_ip }} {% else %} {{ jinja_secondary_uplink_ip }} {% endif %}\\n      - config:\\n          str_replace:\\n            params:\\n              $NEIGHBOR_IP:\\n                    get_param: {{ device }}_peer_ip\\n              $REMOTE_AS:\\n                    get_param: remote_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ebgp_config_group\\n              $KEY:\\n                    get_param: md5\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address {% if device == \\\"primary\\\" %} {{ primary_ip_uplink_split[0] }} {% else %} {{ secondary_ip_uplink_split[0] }} {% endif %};\\n              peer-as $REMOTE_AS;\\n              neighbor $NEIGHBOR_IP authentication-key $KEY;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $ROUTER_ID:\\n                    get_param: {{device}}_router_id\\n              $LOCAL_AS:\\n                    get_param: local_as\\n            template: |\\n              router-id $ROUTER_ID;\\n              autonomous-system $LOCAL_AS;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n{% endfor %}\\n\\n  bgp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: bgp_pool\\n      resource_type: aws_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        instance: { get_param: vrf_name }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          peer_address: { get_param: primary_peer_ip }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          peer_address: { get_param: secondary_peer_ip }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n    depends_on: netconf_configure_secondary\\n\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_metric_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_metric\\n      resource_type: aws_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: {{ device }}_router\\n      properties:\\n        device_ip: { get_param: {{ device }}_device_ip }\\n        if_name: { get_param: {{ device }}_device_logical_interface }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\n    depends_on: bgp_monitor\\n{% endfor %}\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: bgp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [bgp_monitor, link]}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: {{ device }}_interface_metric_monitor}\\n  {{ device }}_interface_monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [{{ device }}_interface_metric_monitor, link]}\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[36], CreatedIndex=[36]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/qos_option_azure], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"qos_option_azure\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"incoming_policer_config\":\"Pincoming_policer_config\",\"incoming_policer_name\":\"Pincoming_policer_name\",\"jinja_be_forwarding_class\":\"Fazure_service+azure_service_id:be_forwarding_class\",\"jinja_ga_forwarding_class\":\"Fazure_service+azure_service_id:ga_forwarding_class\",\"jinja_type\":\"Pqos_type\",\"neighbour_prefix\":\"Fazure_service+azure_service_id:neighbour_prefix\",\"outgoing_policer_config\":\"Poutgoing_policer_config\",\"outgoing_policer_name\":\"Poutgoing_policer_name\",\"primary_device_ip\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_router+ha_router_id:edge_router+primary_router_id:login\",\"secondary_device_ip\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:login\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n    hidden: true\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  incoming_policer_name:\\n    description: Name of created incoming policer\\n    label: Incoming policer name\\n    type: string\\n  incoming_policer_config:\\n    description: Configuration of incoming policer\\n    label: Incoming policer config\\n    type: string\\n  outgoing_policer_name:\\n    description: Name of created outgoing policer\\n    label: Outgoing policer name\\n    type: string\\n  outgoing_policer_config:\\n    description: Configuration of outgoing policer\\n    label: Outgoing policer config\\n    type: string\\n  neighbour_prefix:\\n    description: Name of prefix list used to specify traffic source/destination\\n    label: Neighbour prefix\\n    type: string\\nresources:\\n{% set forewarding_class = be_forwarding_class if qos_type == \\\"besteffort\\\" else ga_forwarding_class %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          { get_param: incoming_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: three-color-policer\\n            name: { get_param: incoming_policer_name }\\n      - config:\\n          { get_param: outgoing_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: policer\\n            name: { get_param: outgoing_policer_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $CLASS:\\n                {% if jinja_type == \\\"besteffort\\\" %} {{ jinja_be_forwarding_class }} {% else %} {{ jinja_ga_forwarding_class }} {% endif %}\\n              $POLICER_NAME:\\n                get_param: incoming_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol vrrp;\\n                   }\\n                   then policer 10K-RE;\\n                   then accept;\\n               }\\n               term qos {\\n                   then {\\n                       three-color-policer {\\n                           {% if jinja_type == \\\"besteffort\\\" %}two-rate{% else %}single-rate{% endif %} $POLICER_NAME;\\n                       }\\n                       forwarding-class $CLASS;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: incoming_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $POLICER_NAME:\\n                get_param: outgoing_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       destination-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       protocol vrrp;\\n                   }\\n                   then accept;\\n               }\\n               term policer {\\n                   then {\\n                       policer $POLICER_NAME;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: outgoing_policer_name\\n                template: |\\n                  FILTER_$NAME\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[37], CreatedIndex=[37]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/azure_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"azure_gateway\",\"parameter_mappings\":{\"downlink_vlan\":\"Pdownlink_vlan_id\",\"heat_timeout\":\"C60\",\"input_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:incoming_policer_name\",\"output_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:outgoing_policer_name\",\"primary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_downlink_interface\":\"Pprimary_logical_downlink_interface_name\",\"primary_device_logical_uplink_interface\":\"Pprimary_logical_uplink_interface_name\",\"primary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_downlink_vrrp_config_group\":\"Fazure_service+azure_service_id:primary_downlink_vrrp_config_group\",\"secondary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_downlink_interface\":\"Psecondary_logical_downlink_interface_name\",\"secondary_device_logical_uplink_interface\":\"Psecondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_downlink_vrrp_config_group\":\"Fazure_service+azure_service_id:secondary_downlink_vrrp_config_group\",\"uplink_vlan\":\"Puplink_vlan_id\",\"vrf_name\":\"Pvrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  AZURE Gateway\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_downlink_interface:\\n    description: Physical port on the Primary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_uplink_interface:\\n    description: Physical port on the Primary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_downlink_interface:\\n    description: Physical port on the Secondary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_uplink_interface:\\n    description: Physical port on the Secondary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan:\\n    description: vlan tag used by logical downlink interface\\n    label: VLAN ID\\n    type: string\\n  uplink_vlan:\\n    description: vlan tag used by logical uplink interface\\n    label: VLAN ID\\n    type: string\\n  vrf_name:\\n    description: Name for VRF used by logical interfaces\\n    label: VRF name\\n    type: string\\n  input_filter_name:\\n    description: Name for policer used for input\\n    label: Input filter name\\n    type: string\\n  output_filter_name:\\n    description: Name for policer used for output\\n    label: Output filter name\\n    type: string\\n  primary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      on_update: merge\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: downlink_vlan\\n              $INPUT_FILTER:\\n                get_param: input_filter_name\\n              $OUTPUT_FILTER:\\n                get_param: output_filter_name\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_downlink_vrrp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              vlan-id $VLAN;\\n              description AZURE_Downlink;\\n              family inet {\\n                  filter {\\n                      input $INPUT_FILTER;\\n                      output $OUTPUT_FILTER;\\n                  }\\n              }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_downlink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan }\\n      - config:\\n          str_replace:\\n            params:\\n              $LIFD:\\n                get_param: {{ device }}_device_logical_downlink_interface\\n              $LIFU:\\n                get_param: {{ device }}_device_logical_uplink_interface\\n            template: |\\n                instance-type virtual-router;\\n                interface $LIFD;\\n                interface $LIFU;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: uplink_vlan\\n            template: |\\n              vlan-id $VLAN;\\n              description AZURE_Uplink;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_uplink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[38], CreatedIndex=[38]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gw_interface_azure], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gw_interface_azure\",\"parameter_mappings\":{\"bgp_group_name\":\"Cinet-gw-group\",\"downlink_vlan_id\":\"Fazure_gateway+azure_gw_id:downlink_vlan_id\",\"gohan_id\":\"Pid\",\"gw_vip\":\"Pgw_vipv4\",\"heat_timeout\":\"C60\",\"jinja_force_dependency\":\"Fazure_gateway+azure_gw_id:azure_interface+connected_azure_interface:id\",\"jinja_force_dependency2\":{\"field\":\"id\",\"path\":[{\"id\":\"network_id\",\"type\":\"network\"}]},\"local_as\":\"Fazure_gateway+azure_gw_id:local_as_number\",\"netmask\":\"Pnetmask\",\"primary_device_gw_ip\":\"Pprimary_ipv4\",\"primary_device_ip\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_priority\":\"C105\",\"primary_device_username\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ibgp_config_group\":\"Fazure_gateway+azure_gw_id:azure_service+azure_service_id:primary_ibgp_config_group\",\"primary_logical_interface_name\":\"Fazure_gateway+azure_gw_id:primary_logical_downlink_interface_name\",\"secondary_device_gw_ip\":\"Psecondary_ipv4\",\"secondary_device_ip\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_priority\":\"C100\",\"secondary_device_username\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ibgp_config_group\":\"Fazure_gateway+azure_gw_id:azure_service+azure_service_id:secondary_ibgp_config_group\",\"secondary_logical_interface_name\":\"Fazure_gateway+azure_gw_id:secondary_logical_downlink_interface_name\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Fazure_gateway+azure_gw_id:vrf_name\",\"vrrp_group\":\"Pvrid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan_id:\\n    description: Vlan tag for mx logical downlink interface\\n    label: Vlan Tag\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    type: string\\n    label: VRF\\n  bgp_group_name:\\n    type: string\\n    label: Name of BGP Group on VRF\\n  local_as:\\n    type: string\\n    label: Local AS Number\\n  primary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  secondary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                    get_param: vrrp_group\\n              $PRIORITY:\\n                    get_param: {{ device }}_device_priority\\n              $VIP:\\n                    get_param: gw_vip\\n            template: |\\n                vrrp-group $VRRP_GROUP {\\n                    virtual-address $VIP;\\n                    priority $PRIORITY;\\n                }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan_id }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name:\\n              str_replace:\\n                params:\\n                  $DEVICE_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n                  $NETMASK:\\n                    get_param: netmask\\n                template: |\\n                  $DEVICE_IP/$NETMASK\\n      - config:\\n          str_replace:\\n            params:\\n              $DEVICE_GW_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n              $NEIGHBOR_GW_IP:\\n                    get_param: {% if device == \\\"secondary\\\" %}primary{% else %}secondary{% endif %}_device_gw_ip\\n              $LOCAL_AS:\\n                    get_param: local_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ibgp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address $DEVICE_GW_IP;\\n              peer-as $LOCAL_AS;\\n              neighbor $NEIGHBOR_GW_IP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: gw_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[39], CreatedIndex=[39]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/static_route_azure], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"static_route_azure\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"next_hop\":\"Pnexthop\",\"primary_device_ip\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"route\":\"Pdestination\",\"secondary_device_ip\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"vrf_name\":\"Fazure_gateway+azure_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  AZURE Gateway Static Route\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  vrf_name:\\n    description: Name of VRF to add this static route\\n    label: VRF\\n    type: string\\n  route:\\n    description: Static Route definition\\n    label: Route\\n    type: string\\n  next_hop:\\n    description: Next hop for the static route\\n    label: Next hop\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $NEXT_HOP:\\n                get_param: next_hop\\n            template: |\\n              next-hop $NEXT_HOP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: { get_param: route }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[40], CreatedIndex=[40]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/azure_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"azure_interface\",\"parameter_mappings\":{\"bgp_group_name\":\"CAZURE-PE\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C60\",\"jinja_primary_uplink_ip\":\"Oprimary:ip_address\",\"jinja_secondary_uplink_ip\":\"Osecondary:ip_address\",\"local_as\":\"Fazure_gateway+azure_gw_id:local_as_number\",\"md5\":\"Pbgp_md5\",\"primary_device_ip\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_interface\":\"Fazure_gateway+azure_gw_id:primary_logical_uplink_interface_name\",\"primary_device_password\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fazure_gateway+azure_gw_id:ha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ebgp_config_group\":\"Fazure_gateway+azure_gw_id:azure_service+azure_service_id:primary_ebgp_config_group\",\"primary_peer_ip\":\"Oprimary:bgp_peer_ip\",\"primary_router_id\":\"Oprimary:bgp_router_id\",\"remote_as\":\"Pbgp_remote_as\",\"secondary_device_ip\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_interface\":\"Fazure_gateway+azure_gw_id:secondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fazure_gateway+azure_gw_id:ha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fazure_gateway+azure_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ebgp_config_group\":\"Fazure_gateway+azure_gw_id:azure_service+azure_service_id:secondary_ebgp_config_group\",\"secondary_peer_ip\":\"Osecondary:bgp_peer_ip\",\"secondary_router_id\":\"Osecondary:bgp_router_id\",\"tenant_id\":\"Ptenant_id\",\"uplink_vlan\":\"Fazure_gateway+azure_gw_id:uplink_vlan_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Fazure_gateway+azure_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  vrf_name:\\n    description: Name of VRF (routing-instance) in MX config\\n    label: VRF Name\\n    type: string\\n  local_as:\\n    type: number\\n    label: Local AS Number\\n  primary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  secondary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  uplink_vlan:\\n    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)\\n    label: Uplink VLAN ID\\n    type: string\\n  primary_peer_ip:\\n    description: IP address of primary router eBGP neighbour\\n    label: Primary device BGP peer\\n    type: string\\n  secondary_peer_ip:\\n    description: IP address of secondary router eBGP neighbour\\n    label: Secondary device BGP peer\\n    type: string\\n  primary_router_id:\\n    description: Primary router VRF router id\\n    label: Primary router id\\n    type: string\\n  secondary_router_id:\\n    description: Secondary router VRF router id\\n    label: Secondary router id\\n    type: string\\n  remote_as:\\n    description: eBGP remote autonomous system\\n    label: Remote AS\\n    type: string\\n  md5:\\n    description: eBGP authentication key\\n    label: eBGP authentication key\\n    type: string\\n  bgp_group_name:\\n    description: Name of eBGP group\\n    label: eBGP group name\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the Azure Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n{% set primary_ip_uplink_split = jinja_primary_uplink_ip.split('/') %}\\n{% set secondary_ip_uplink_split = jinja_secondary_uplink_ip.split('/') %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name: {% if device == \\\"primary\\\" %} {{ jinja_primary_uplink_ip }} {% else %} {{ jinja_secondary_uplink_ip }} {% endif %}\\n      - config:\\n          str_replace:\\n            params:\\n              $NEIGHBOR_IP:\\n                    get_param: {{ device }}_peer_ip\\n              $REMOTE_AS:\\n                    get_param: remote_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ebgp_config_group\\n              $KEY:\\n                    get_param: md5\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address {% if device == \\\"primary\\\" %} {{ primary_ip_uplink_split[0] }} {% else %} {{ secondary_ip_uplink_split[0] }} {% endif %};\\n              peer-as $REMOTE_AS;\\n              neighbor $NEIGHBOR_IP authentication-key $KEY;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $ROUTER_ID:\\n                    get_param: {{device}}_router_id\\n              $LOCAL_AS:\\n                    get_param: local_as\\n            template: |\\n              router-id $ROUTER_ID;\\n              autonomous-system $LOCAL_AS;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n{% endfor %}\\n\\n  bgp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: bgp_pool\\n      resource_type: azure_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        instance: { get_param: vrf_name }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          peer_address: { get_param: primary_peer_ip }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          peer_address: { get_param: secondary_peer_ip }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n    depends_on: netconf_configure_secondary\\n\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_metric_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_metric\\n      resource_type: azure_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: {{ device }}_router\\n      properties:\\n        device_ip: { get_param: {{ device }}_device_ip }\\n        if_name: { get_param: {{ device }}_device_logical_interface }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\n    depends_on: bgp_monitor\\n{% endfor %}\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: bgp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [bgp_monitor, link]}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: {{ device }}_interface_metric_monitor}\\n  {{ device }}_interface_monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [{{ device }}_interface_metric_monitor, link]}\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[41], CreatedIndex=[41]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/qos_option_gcp], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"qos_option_gcp\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"incoming_policer_config\":\"Pincoming_policer_config\",\"incoming_policer_name\":\"Pincoming_policer_name\",\"jinja_be_forwarding_class\":\"Fgcp_service+gcp_service_id:be_forwarding_class\",\"jinja_ga_forwarding_class\":\"Fgcp_service+gcp_service_id:ga_forwarding_class\",\"jinja_type\":\"Pqos_type\",\"neighbour_prefix\":\"Fgcp_service+gcp_service_id:neighbour_prefix\",\"outgoing_policer_config\":\"Poutgoing_policer_config\",\"outgoing_policer_name\":\"Poutgoing_policer_name\",\"primary_device_ip\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_router+ha_router_id:edge_router+primary_router_id:login\",\"secondary_device_ip\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_router+ha_router_id:edge_router+secondary_router_id:login\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n    hidden: true\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  incoming_policer_name:\\n    description: Name of created incoming policer\\n    label: Incoming policer name\\n    type: string\\n  incoming_policer_config:\\n    description: Configuration of incoming policer\\n    label: Incoming policer config\\n    type: string\\n  outgoing_policer_name:\\n    description: Name of created outgoing policer\\n    label: Outgoing policer name\\n    type: string\\n  outgoing_policer_config:\\n    description: Configuration of outgoing policer\\n    label: Outgoing policer config\\n    type: string\\n  neighbour_prefix:\\n    description: Name of prefix list used to specify traffic source/destination\\n    label: Neighbour prefix\\n    type: string\\nresources:\\n{% set forewarding_class = be_forwarding_class if qos_type == \\\"besteffort\\\" else ga_forwarding_class %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          { get_param: incoming_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: three-color-policer\\n            name: { get_param: incoming_policer_name }\\n      - config:\\n          { get_param: outgoing_policer_config }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: policer\\n            name: { get_param: outgoing_policer_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $CLASS:\\n                {% if jinja_type == \\\"besteffort\\\" %} {{ jinja_be_forwarding_class }} {% else %} {{ jinja_ga_forwarding_class }} {% endif %}\\n              $POLICER_NAME:\\n                get_param: incoming_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       source-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol vrrp;\\n                   }\\n                   then policer 10K-RE;\\n                   then accept;\\n               }\\n               term qos {\\n                   then {\\n                       three-color-policer {\\n                           {% if jinja_type == \\\"besteffort\\\" %}two-rate{% else %}single-rate{% endif %} $POLICER_NAME;\\n                       }\\n                       forwarding-class $CLASS;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: incoming_policer_name\\n                template: |\\n                  FILTER_$NAME\\n      - config:\\n          str_replace:\\n            params:\\n              $PREFIX:\\n                get_param: neighbour_prefix\\n              $POLICER_NAME:\\n                get_param: outgoing_policer_name\\n            template: |\\n               interface-specific;\\n               term bgp-accept {\\n                   from {\\n                       destination-prefix-list {\\n                           $PREFIX;\\n                       }\\n                       protocol tcp;\\n                       port bgp;\\n                   }\\n                   then accept;\\n               }\\n               term vrrp-accept {\\n                   from {\\n                       protocol vrrp;\\n                   }\\n                   then accept;\\n               }\\n               term policer {\\n                   then {\\n                       policer $POLICER_NAME;\\n                       accept;\\n                   }\\n               }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: firewall\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: filter\\n            name:\\n              str_replace:\\n                params:\\n                  $NAME:\\n                    get_param: outgoing_policer_name\\n                template: |\\n                  FILTER_$NAME\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[42], CreatedIndex=[42]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gcp_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gcp_gateway\",\"parameter_mappings\":{\"downlink_vlan\":\"Pdownlink_vlan_id\",\"heat_timeout\":\"C60\",\"input_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:incoming_policer_name\",\"output_filter_name\":\"ACFILTER_\\u0026Fqos_option+qos_option_id:outgoing_policer_name\",\"primary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_downlink_interface\":\"Pprimary_logical_downlink_interface_name\",\"primary_device_logical_uplink_interface\":\"Pprimary_logical_uplink_interface_name\",\"primary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_downlink_vrrp_config_group\":\"Fgcp_service+gcp_service_id:primary_downlink_vrrp_config_group\",\"secondary_device_ip\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_downlink_interface\":\"Psecondary_logical_downlink_interface_name\",\"secondary_device_logical_uplink_interface\":\"Psecondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_downlink_interface\":\"Fha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_physical_uplink_interface\":\"Fha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_downlink_vrrp_config_group\":\"Fgcp_service+gcp_service_id:secondary_downlink_vrrp_config_group\",\"uplink_vlan\":\"Puplink_vlan_id\",\"vrf_name\":\"Pvrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  GCP Gateway\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_downlink_interface:\\n    description: Physical port on the Primary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_uplink_interface:\\n    description: Physical port on the Primary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_downlink_interface:\\n    description: Physical port on the Secondary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_uplink_interface:\\n    description: Physical port on the Secondary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan:\\n    description: vlan tag used by logical downlink interface\\n    label: VLAN ID\\n    type: string\\n  uplink_vlan:\\n    description: vlan tag used by logical uplink interface\\n    label: VLAN ID\\n    type: string\\n  vrf_name:\\n    description: Name for VRF used by logical interfaces\\n    label: VRF name\\n    type: string\\n  input_filter_name:\\n    description: Name for policer used for input\\n    label: Input filter name\\n    type: string\\n  output_filter_name:\\n    description: Name for policer used for output\\n    label: Output filter name\\n    type: string\\n  primary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      on_update: merge\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: downlink_vlan\\n              $INPUT_FILTER:\\n                get_param: input_filter_name\\n              $OUTPUT_FILTER:\\n                get_param: output_filter_name\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_downlink_vrrp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              vlan-id $VLAN;\\n              description GCP_Downlink;\\n              family inet {\\n                  filter {\\n                      input $INPUT_FILTER;\\n                      output $OUTPUT_FILTER;\\n                  }\\n              }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_downlink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan }\\n      - config:\\n          str_replace:\\n            params:\\n              $LIFD:\\n                get_param: {{ device }}_device_logical_downlink_interface\\n              $LIFU:\\n                get_param: {{ device }}_device_logical_uplink_interface\\n            template: |\\n                instance-type virtual-router;\\n                interface $LIFD;\\n                interface $LIFU;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $VLAN:\\n                get_param: uplink_vlan\\n            template: |\\n              vlan-id $VLAN;\\n              description GCP_Uplink;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_uplink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[43], CreatedIndex=[43]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gw_interface_gcp], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gw_interface_gcp\",\"parameter_mappings\":{\"bgp_group_name\":\"Cinet-gw-group\",\"downlink_vlan_id\":\"Fgcp_gateway+gcp_gw_id:downlink_vlan_id\",\"gohan_id\":\"Pid\",\"gw_vip\":\"Pgw_vipv4\",\"heat_timeout\":\"C60\",\"jinja_force_dependency\":\"Fgcp_gateway+gcp_gw_id:gcp_interface+connected_gcp_interface:id\",\"jinja_force_dependency2\":{\"field\":\"id\",\"path\":[{\"id\":\"network_id\",\"type\":\"network\"}]},\"local_as\":\"Fgcp_gateway+gcp_gw_id:local_as_number\",\"netmask\":\"Pnetmask\",\"primary_device_gw_ip\":\"Pprimary_ipv4\",\"primary_device_ip\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_priority\":\"C105\",\"primary_device_username\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ibgp_config_group\":\"Fgcp_gateway+gcp_gw_id:gcp_service+gcp_service_id:primary_ibgp_config_group\",\"primary_logical_interface_name\":\"Fgcp_gateway+gcp_gw_id:primary_logical_downlink_interface_name\",\"secondary_device_gw_ip\":\"Psecondary_ipv4\",\"secondary_device_ip\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_priority\":\"C100\",\"secondary_device_username\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ibgp_config_group\":\"Fgcp_gateway+gcp_gw_id:gcp_service+gcp_service_id:secondary_ibgp_config_group\",\"secondary_logical_interface_name\":\"Fgcp_gateway+gcp_gw_id:secondary_logical_downlink_interface_name\",\"tenant_id\":\"Ptenant_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Fgcp_gateway+gcp_gw_id:vrf_name\",\"vrrp_group\":\"Pvrid\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan_id:\\n    description: Vlan tag for mx logical downlink interface\\n    label: Vlan Tag\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    type: string\\n    label: VRF\\n  bgp_group_name:\\n    type: string\\n    label: Name of BGP Group on VRF\\n  local_as:\\n    type: string\\n    label: Local AS Number\\n  primary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  secondary_ibgp_config_group:\\n    description: Name for apply group to use for downlink interface\\n    label: Apply group name\\n    type: string\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                    get_param: vrrp_group\\n              $PRIORITY:\\n                    get_param: {{ device }}_device_priority\\n              $VIP:\\n                    get_param: gw_vip\\n            template: |\\n                vrrp-group $VRRP_GROUP {\\n                    virtual-address $VIP;\\n                    priority $PRIORITY;\\n                }\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: downlink_vlan_id }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name:\\n              str_replace:\\n                params:\\n                  $DEVICE_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n                  $NETMASK:\\n                    get_param: netmask\\n                template: |\\n                  $DEVICE_IP/$NETMASK\\n      - config:\\n          str_replace:\\n            params:\\n              $DEVICE_GW_IP:\\n                    get_param: {{ device }}_device_gw_ip\\n              $NEIGHBOR_GW_IP:\\n                    get_param: {% if device == \\\"secondary\\\" %}primary{% else %}secondary{% endif %}_device_gw_ip\\n              $LOCAL_AS:\\n                    get_param: local_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ibgp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address $DEVICE_GW_IP;\\n              peer-as $LOCAL_AS;\\n              neighbor $NEIGHBOR_GW_IP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: gw_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[44], CreatedIndex=[44]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/static_route_gcp], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"static_route_gcp\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"next_hop\":\"Pnexthop\",\"primary_device_ip\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_password\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_port\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"route\":\"Pdestination\",\"secondary_device_ip\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_password\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_port\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"vrf_name\":\"Fgcp_gateway+gcp_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  GCP Gateway Static Route\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  vrf_name:\\n    description: Name of VRF to add this static route\\n    label: VRF\\n    type: string\\n  route:\\n    description: Static Route definition\\n    label: Route\\n    type: string\\n  next_hop:\\n    description: Next hop for the static route\\n    label: Next hop\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      lock_timeout: 3000\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $NEXT_HOP:\\n                get_param: next_hop\\n            template: |\\n              next-hop $NEXT_HOP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: { get_param: route }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[45], CreatedIndex=[45]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gcp_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gcp_interface\",\"parameter_mappings\":{\"bgp_group_name\":\"CGCP-PE\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C60\",\"jinja_primary_uplink_ip\":\"Oprimary:ip_address\",\"jinja_secondary_uplink_ip\":\"Osecondary:ip_address\",\"local_as\":\"Fgcp_gateway+gcp_gw_id:local_as_number\",\"primary_device_ip\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ip\",\"primary_device_logical_interface\":\"Fgcp_gateway+gcp_gw_id:primary_logical_uplink_interface_name\",\"primary_device_password\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:password\",\"primary_device_physical_interface\":\"Fgcp_gateway+gcp_gw_id:ha_interface+uplink_interface_id:er_physical_interface+primary_interface_id:name\",\"primary_device_port\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:ssh_port\",\"primary_device_username\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+primary_router_id:login\",\"primary_ebgp_config_group\":\"Fgcp_gateway+gcp_gw_id:gcp_service+gcp_service_id:primary_ebgp_config_group\",\"primary_peer_ip\":\"Oprimary:bgp_peer_ip\",\"primary_router_id\":\"Oprimary:bgp_router_id\",\"remote_as\":\"Pbgp_remote_as\",\"secondary_device_ip\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ip\",\"secondary_device_logical_interface\":\"Fgcp_gateway+gcp_gw_id:secondary_logical_uplink_interface_name\",\"secondary_device_password\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:password\",\"secondary_device_physical_interface\":\"Fgcp_gateway+gcp_gw_id:ha_interface+uplink_interface_id:er_physical_interface+secondary_interface_id:name\",\"secondary_device_port\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:ssh_port\",\"secondary_device_username\":\"Fgcp_gateway+gcp_gw_id:ha_interface+downlink_interface_id:ha_router+ha_router_id:edge_router+secondary_router_id:login\",\"secondary_ebgp_config_group\":\"Fgcp_gateway+gcp_gw_id:gcp_service+gcp_service_id:secondary_ebgp_config_group\",\"secondary_peer_ip\":\"Osecondary:bgp_peer_ip\",\"secondary_router_id\":\"Osecondary:bgp_router_id\",\"tenant_id\":\"Ptenant_id\",\"uplink_vlan\":\"Fgcp_gateway+gcp_gw_id:uplink_vlan_id\",\"version\":\"Vauto_filled\",\"vrf_name\":\"Fgcp_gateway+gcp_gw_id:vrf_name\"},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inet Address\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  vrf_name:\\n    description: Name of VRF (routing-instance) in MX config\\n    label: VRF Name\\n    type: string\\n  local_as:\\n    type: number\\n    label: Local AS Number\\n  primary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  secondary_ebgp_config_group:\\n    description: Name of MX config group for eBGP config\\n    label: eBGP config group\\n    type: string\\n  uplink_vlan:\\n    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)\\n    label: Uplink VLAN ID\\n    type: string\\n  primary_peer_ip:\\n    description: IP address of primary router eBGP neighbour\\n    label: Primary device BGP peer\\n    type: string\\n  secondary_peer_ip:\\n    description: IP address of secondary router eBGP neighbour\\n    label: Secondary device BGP peer\\n    type: string\\n  primary_router_id:\\n    description: Primary router VRF router id\\n    label: Primary router id\\n    type: string\\n  secondary_router_id:\\n    description: Secondary router VRF router id\\n    label: Secondary router id\\n    type: string\\n  remote_as:\\n    description: eBGP remote autonomous system\\n    label: Remote AS\\n    type: string\\n  bgp_group_name:\\n    description: Name of eBGP group\\n    label: eBGP group name\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the AWS Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n{% set primary_ip_uplink_split = jinja_primary_uplink_ip.split('/') %}\\n{% set secondary_ip_uplink_split = jinja_secondary_uplink_ip.split('/') %}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: { get_param: uplink_vlan }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name: {% if device == \\\"primary\\\" %} {{ jinja_primary_uplink_ip }} {% else %} {{ jinja_secondary_uplink_ip }} {% endif %}\\n      - config:\\n          str_replace:\\n            params:\\n              $NEIGHBOR_IP:\\n                    get_param: {{ device }}_peer_ip\\n              $REMOTE_AS:\\n                    get_param: remote_as\\n              $APPLY_GROUP:\\n                    get_param: {{ device }}_ebgp_config_group\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              local-address {% if device == \\\"primary\\\" %} {{ primary_ip_uplink_split[0] }} {% else %} {{ secondary_ip_uplink_split[0] }} {% endif %};\\n              peer-as $REMOTE_AS;\\n              neighbor $NEIGHBOR_IP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: protocols\\n          - config_type: tag\\n            xml_type: tag\\n            tag: bgp\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: group\\n            name: { get_param: bgp_group_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $ROUTER_ID:\\n                    get_param: {{device}}_router_id\\n              $LOCAL_AS:\\n                    get_param: local_as\\n            template: |\\n              router-id $ROUTER_ID;\\n              autonomous-system $LOCAL_AS;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n{% endfor %}\\n\\n  bgp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: bgp_pool\\n      resource_type: gcp_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        instance: { get_param: vrf_name }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          peer_address: { get_param: primary_peer_ip }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          peer_address: { get_param: secondary_peer_ip }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n    depends_on: netconf_configure_secondary\\n\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_metric_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_metric\\n      resource_type: gcp_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: {{ device }}_router\\n      properties:\\n        device_ip: { get_param: {{ device }}_device_ip }\\n        if_name: { get_param: {{ device }}_device_logical_interface }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\n    depends_on: bgp_monitor\\n{% endfor %}\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: bgp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [bgp_monitor, link]}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: {{ device }}_interface_metric_monitor}\\n  {{ device }}_interface_monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [{{ device }}_interface_metric_monitor, link]}\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[46], CreatedIndex=[46]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/common_function_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"common_function_gateway\",\"parameter_mappings\":{\"gohan_id\":{\"field\":\"id\"},\"heat_timeout\":\"C60\",\"jinja_common_service_numbers\":{\"for_field\":\"common_functions\",\"for_mapping\":{\"field\":\"common_function_number\",\"path\":[{\"id\":\"common_function_id\",\"type\":\"common_function\"}]}},\"jinja_dnat_group_name\":{\"field\":\"dnat_group_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_dnat_pool_group_name\":{\"field\":\"dnat_pool_group_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_dummy_dependency\":{\"field\":\"id\",\"ignore_missing\":true,\"path\":[{\"id\":\"subnet_id\",\"type\":\"subnet\"}]},\"jinja_logical_tunnel_interface_name\":{\"field\":\"logical_tunnel_interface_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_logical_tunnel_unit_service\":{\"field\":\"logical_tunnel_unit_service\"},\"jinja_logical_tunnel_unit_user\":{\"field\":\"logical_tunnel_unit_user\"},\"jinja_nat_ip\":{\"field\":\"nat_ip\"},\"jinja_service_interface_name\":{\"field\":\"service_interface_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_service_vrf_name\":{\"field\":\"service_vrf_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_snapt_group_name\":{\"field\":\"snapt_group_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_snapt_pool_group_name\":{\"field\":\"snapt_pool_group_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_vlan_id\":{\"field\":\"vlan_id\"},\"jinja_vrf_name\":{\"field\":\"vrf_name\"},\"jinja_vrids\":{\"for_field\":{\"field\":\"vrrp_config\",\"path\":[\"common_function_pool_id\"]},\"for_mapping\":{\"field\":\"vrid\"}},\"jinja_vrrp_group_name\":{\"field\":\"vrrp_group_name\",\"path\":[\"common_function_pool_id\"]},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_logical_downlink_interface\":{\"field\":\"primary_logical_interface_name\"},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_physical_downlink_interface\":{\"field\":\"name\",\"path\":[\"downlink_interface_id\",\"primary_interface_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_logical_downlink_interface\":{\"field\":\"secondary_logical_interface_name\"},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_physical_downlink_interface\":{\"field\":\"name\",\"path\":[\"downlink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"tenant_id\":{\"field\":\"tenant_id\"},\"version\":{\"version\":\"auto_filled\"}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Common Function Gateway\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_downlink_interface:\\n    description: Physical port on the Primary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_downlink_interface:\\n    description: Physical port on the Secondary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the Common Function Gateway\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config: |\\n          nat-rules {{ jinja_vrf_name }}-SNAPT;\\n          nat-rules {{ jinja_vrf_name }}-DNAT;\\n          interface-service service-interface {{ jinja_service_interface_name }}.{{ jinja_vlan_id }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: services\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: service-set\\n            name: {{ jinja_vrf_name }}\\n      - config: |\\n          apply-groups {{ jinja_snapt_pool_group_name }};\\n          address {{ jinja_nat_ip }}/32;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: services\\n          - config_type: tag\\n            xml_type: tag\\n            tag: nat\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: pool\\n            name: {{ jinja_vrf_name }}-SNAPT-POOL\\n      - config: |\\n          apply-groups {{ jinja_snapt_group_name }};\\n          term source then translated source-pool {{ jinja_vrf_name }}-SNAPT-POOL;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: services\\n          - config_type: tag\\n            xml_type: tag\\n            tag: nat\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: rule\\n            name: {{ jinja_vrf_name }}-SNAPT\\n      {% for service_number in jinja_common_service_numbers %}\\n      - config: |\\n          apply-groups {{ jinja_dnat_pool_group_name }}-{{ service_number }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: services\\n          - config_type: tag\\n            xml_type: tag\\n            tag: nat\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: pool\\n            name: {{ jinja_vrf_name }}-{{ jinja_dnat_pool_group_name }}-{{ service_number }}\\n      {% endfor %}\\n      - config: |\\n          apply-groups {{ jinja_dnat_group_name }};\\n          {% for service_number in jinja_common_service_numbers %}\\n          term {{ service_number }} then translated destination-pool {{ jinja_vrf_name }}-{{ jinja_dnat_pool_group_name }}-{{ service_number }};\\n          {% endfor %}\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: services\\n          - config_type: tag\\n            xml_type: tag\\n            tag: nat\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: rule\\n            name: {{ jinja_vrf_name }}-DNAT\\n      - config: |\\n          peer-unit {{ jinja_logical_tunnel_unit_service }};\\n          family inet service input service-set {{ jinja_vrf_name }};\\n          family inet service output service-set {{ jinja_vrf_name }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: {{ jinja_logical_tunnel_interface_name }}\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: {{ jinja_logical_tunnel_unit_user }}\\n      - config: |\\n          peer-unit {{ jinja_logical_tunnel_unit_user }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: {{ jinja_logical_tunnel_interface_name }}\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: {{ jinja_logical_tunnel_unit_service }}\\n      - config: |\\n          family inet;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: {{ jinja_service_interface_name }}\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: {{ jinja_vlan_id }}\\n      - config: |\\n          apply-groups {{ jinja_vrrp_group_name }};\\n          description {{ jinja_vrf_name }};\\n          vlan-id {{ jinja_vlan_id }};\\n          family inet service input service-set {{ jinja_vrf_name }};\\n          family inet service output service-set {{ jinja_vrf_name }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: { get_param: {{ device }}_device_physical_downlink_interface }\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: {{ jinja_vlan_id }}\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: {{ jinja_service_vrf_name }}\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: interface\\n            name: {{ jinja_logical_tunnel_interface_name }}.{{ jinja_logical_tunnel_unit_service }}\\n      - config:\\n          next-hop {{ jinja_logical_tunnel_interface_name }}.{{ jinja_logical_tunnel_unit_service }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: {{ jinja_service_vrf_name }}\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: {{ jinja_nat_ip }}/32\\n      - config:\\n          str_replace:\\n            params:\\n              $DOWNLINK_INTERFACE:\\n                get_param: {{ device }}_device_logical_downlink_interface\\n            template: |\\n              instance-type virtual-router;\\n              interface {{ jinja_logical_tunnel_interface_name }}.{{ jinja_logical_tunnel_unit_user}};\\n              interface {{ jinja_service_interface_name}}.{{ jinja_vlan_id }};\\n              interface $DOWNLINK_INTERFACE;\\n              routing-options static route 0.0.0.0/0 next-hop {{ jinja_logical_tunnel_interface_name }}.{{ jinja_logical_tunnel_unit_user }};\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: {{ jinja_vrf_name }}\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: common_function_gateways\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n        {% for vrid in jinja_vrids %}\\n          - {{ vrid }}\\n        {% endfor %}\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_device_logical_downlink_interface }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_device_logical_downlink_interface }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary_vrid1: MASTER\\n                secondary_vrid1: BACKUP\\n                primary_vrid2: MASTER\\n                secondary_vrid2: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[47], CreatedIndex=[47]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/common_function], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"common_function\",\"parameter_mappings\":{\"heat_timeout\":\"C60\",\"jinja_dnat_group_name\":{\"field\":\"dnat_group_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_dnat_pool_group_name\":{\"field\":\"dnat_pool_group_name\",\"path\":[\"common_function_pool_id\"]},\"jinja_link_local_ip_address\":{\"field\":\"link_local_ip_address\"},\"jinja_service_number\":{\"field\":\"common_function_number\"},\"jinja_shared_ip_address\":{\"field\":\"shared_ip_address\"},\"jinja_vrid\":{\"field\":\"vrid\"},\"jinja_vrrp_group_name\":{\"field\":\"vrrp_group_name\",\"path\":[\"common_function_pool_id\"]},\"netmask\":{\"field\":\"link_local_netmask\",\"path\":[\"common_function_pool_id\"]},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_vrrp_ip\":{\"field\":\"primary_vrrp_ip\"},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_vrrp_ip\":{\"field\":\"secondary_vrrp_ip\"}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Common Function\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_vrrp_ip:\\n    description: Local ip in VRRP group on primary device.\\n    label: Primary VRRP ip.\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_vrrp_ip:\\n    description: Local ip in VRRP group on secondary device.\\n    label: Secondary VRRP ip.\\n    type: string\\n  netmask:\\n    description: Netmask used in link local network.\\n    label: Link-local netmask.\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    properties:\\n      lock_timeout: 3000\\n      configs:\\n      - config: \\\"\\\"\\n        path:\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: groups\\n            name: {{ jinja_vrrp_group_name }}\\n          - config_type: tag\\n            xml_type: tag\\n            tag: interfaces\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: interface\\n            name: \\u003c*\\u003e\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: unit\\n            name: \\u003c*\\u003e\\n          - config_type: tag\\n            xml_type: tag\\n            tag: family\\n          - config_type: tag\\n            xml_type: tag\\n            tag: inet\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: address\\n            name:\\n              str_replace:\\n                params:\\n                  $VIP:\\n                    get_param: {{ device }}_vrrp_ip\\n                  $NETMASK:\\n                    get_param: netmask\\n                template: |\\n                  $VIP/$NETMASK\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: vrrp-group\\n            name: {{ jinja_vrid }}\\n          - config_type: named_tag\\n            xml_type: named_tag # FIXME: this is probably not true, as far as i can see we don't support that in plugin at all :(\\n            tag: virtual-address\\n            name: {{ jinja_link_local_ip_address }}\\n      - config: |\\n          from {\\n            destination-address {\\n              {{ jinja_link_local_ip_address }}/32;\\n            }\\n          }\\n          then {\\n            translated {\\n              translation-type {\\n                dnat-44;\\n              }\\n            }\\n          }\\n        path:\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: groups\\n            name: {{ jinja_dnat_group_name }}\\n          - config_type: tag\\n            xml_type: tag\\n            tag: services\\n          - config_type: tag\\n            xml_type: tag\\n            tag: nat\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: rule\\n            name: \\u003c*\\u003e\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: term\\n            name: {{ jinja_service_number }}\\n      - config: |\\n          services {\\n            nat {\\n              pool \\u003c*\\u003e {\\n                address {{ jinja_shared_ip_address }}/32;\\n              }\\n            }\\n          }\\n        path:\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: groups\\n            name: {{ jinja_dnat_pool_group_name }}-{{ jinja_service_number }}\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[48], CreatedIndex=[48]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/qos_option_interdc], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"qos_option_interdc\",\"parameter_mappings\":{\"heat_timeout\":{\"constant\":60},\"incoming_policer_config\":{\"field\":\"incoming_policer_config\"},\"incoming_policer_name\":{\"field\":\"incoming_policer_name\"},\"jinja_be_forwarding_class\":{\"field\":\"be_forwarding_class\",\"path\":[\"interdc_service_id\"]},\"jinja_ga_forwarding_class\":{\"field\":\"ga_forwarding_class\",\"path\":[\"interdc_service_id\"]},\"jinja_type\":{\"field\":\"qos_type\"},\"outgoing_policer_config\":{\"field\":\"outgoing_policer_config\"},\"outgoing_policer_name\":{\"field\":\"outgoing_policer_name\"},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"ha_router_id\",\"primary_router_id\"]},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"ha_router_id\",\"secondary_router_id\"]}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  QoS Option\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  incoming_policer_name:\\n    description: Name of created incoming policer\\n    label: Incoming policer name\\n    type: string\\n  incoming_policer_config:\\n    description: Configuration of incoming policer\\n    label: Incoming policer config\\n    type: string\\n  outgoing_policer_name:\\n    description: Name of created outgoing policer\\n    label: Outgoing policer name\\n    type: string\\n  outgoing_policer_config:\\n    description: Configuration of outgoing policer\\n    label: Outgoing policer config\\n    type: string\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          { get_param: incoming_policer_config }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: firewall\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: three-color-policer\\n          name: { get_param: incoming_policer_name }\\n      - config:\\n          { get_param: outgoing_policer_config }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: firewall\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: policer\\n          name: { get_param: outgoing_policer_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $CLASS:\\n              {% if jinja_type == \\\"besteffort\\\" %}\\n                {{ jinja_be_forwarding_class }}\\n              {% else %}\\n                {{ jinja_ga_forwarding_class }}\\n              {% endif %}\\n              $POLICER_NAME:\\n                get_param: incoming_policer_name\\n            template: |\\n              interface-specific;\\n              term vrrp-accept {\\n                from {\\n                  protocol vrrp;\\n                }\\n                then policer 10K-RE;\\n                then accept;\\n              }\\n              term qos {\\n                then {\\n                  three-color-policer {\\n                    two-rate $POLICER_NAME;\\n                  }\\n                  forwarding-class $CLASS;\\n                  accept;\\n                }\\n              }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: firewall\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: filter\\n          name:\\n            str_replace:\\n              params:\\n                $NAME:\\n                  get_param: incoming_policer_name\\n              template: |\\n                FILTER_$NAME\\n      - config:\\n          str_replace:\\n            params:\\n              $POLICER_NAME:\\n                get_param: outgoing_policer_name\\n            template: |\\n              interface-specific;\\n              term vrrp-accept {\\n                from {\\n                  protocol vrrp;\\n                }\\n                then accept;\\n              }\\n              term policer {\\n                then {\\n                  policer $POLICER_NAME;\\n                  accept;\\n                }\\n              }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: firewall\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: filter\\n          name:\\n            str_replace:\\n              params:\\n                $NAME:\\n                  get_param: outgoing_policer_name\\n              template: |\\n                FILTER_$NAME\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[49], CreatedIndex=[49]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/interdc_gateway], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"interdc_gateway\",\"parameter_mappings\":{\"downlink_vlan\":{\"field\":\"downlink_vlan_id\"},\"heat_timeout\":{\"constant\":60},\"input_filter_name\":{\"field\":\"incoming_policer_name\",\"path\":[\"qos_option_id\"]},\"output_filter_name\":{\"field\":\"outgoing_policer_name\",\"path\":[\"qos_option_id\"]},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_logical_downlink_interface\":{\"field\":\"primary_logical_downlink_interface_name\"},\"primary_device_logical_uplink_interface\":{\"field\":\"primary_logical_uplink_interface_name\"},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_physical_downlink_interface\":{\"field\":\"name\",\"path\":[\"downlink_interface_id\",\"primary_interface_id\"]},\"primary_device_physical_uplink_interface\":{\"field\":\"name\",\"path\":[\"uplink_interface_id\",\"primary_interface_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_downlink_vrrp_config_group\":{\"field\":\"primary_downlink_vrrp_config_group\",\"path\":[\"interdc_service_id\"]},\"primary_uplink_vrrp_config_group\":{\"field\":\"primary_uplink_vrrp_config_group\",\"path\":[\"interdc_service_id\"]},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_logical_downlink_interface\":{\"field\":\"secondary_logical_downlink_interface_name\"},\"secondary_device_logical_uplink_interface\":{\"field\":\"secondary_logical_uplink_interface_name\"},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_physical_downlink_interface\":{\"field\":\"name\",\"path\":[\"downlink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_physical_uplink_interface\":{\"field\":\"name\",\"path\":[\"uplink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_downlink_vrrp_config_group\":{\"field\":\"secondary_downlink_vrrp_config_group\",\"path\":[\"interdc_service_id\"]},\"secondary_uplink_vrrp_config_group\":{\"field\":\"secondary_uplink_vrrp_config_group\",\"path\":[\"interdc_service_id\"]},\"uplink_vlan_id\":{\"field\":\"uplink_vlan_id\"},\"vrf_name\":{\"field\":\"vrf_name\"}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inter DC Gateway\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_downlink_interface:\\n    description: Physical port on the Primary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_physical_uplink_interface:\\n    description: Physical port on the Primary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_physical_downlink_interface:\\n    description: Physical port on the Secondary device on which the logical downlink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_downlink_interface:\\n    description: Name of the created logical downlink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_physical_uplink_interface:\\n    description: Physical port on the Secondary device on which the logical uplink port will be configured\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_uplink_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  input_filter_name:\\n    description: Name for policer used for input\\n    label: Input filter name\\n    type: string\\n  output_filter_name:\\n    description: Name for policer used for output\\n    label: Output filter name\\n    type: string\\n  downlink_vlan:\\n    description: vlan tag used by logical downlink interface\\n    label: VLAN ID\\n    type: string\\n  uplink_vlan_id:\\n    description: vlan tag used by logical uplink interface\\n    label: VLAN ID\\n    type: string\\n  vrf_name:\\n    description: Name for VRF used by logical interfaces\\n    label: VRF name\\n    type: string\\n  primary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  primary_uplink_vrrp_config_group:\\n    description: Name for apply group to use for uplink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_downlink_vrrp_config_group:\\n    description: Name for apply group to use for downlink interface for VRRP\\n    label: Apply group name\\n    type: string\\n  secondary_uplink_vrrp_config_group:\\n    description: Name for apply group to use for uplink interface for VRRP\\n    label: Apply group name\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      on_update: merge\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_downlink_vrrp_config_group\\n              $VLAN:\\n                get_param: downlink_vlan\\n              $INPUT_FILTER:\\n                get_param: input_filter_name\\n              $OUTPUT_FILTER:\\n                get_param: output_filter_name\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              description interdc_gw;\\n              vlan-id $VLAN;\\n              family inet {\\n                filter {\\n                  input FILTER_$INPUT_FILTER;\\n                  output FILTER_$OUTPUT_FILTER;\\n                }\\n              }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: interfaces\\n        - config_type: name\\n          xml_type: named_tag\\n          tag: interface\\n          name: { get_param: {{ device }}_device_physical_downlink_interface }\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: unit\\n          name: { get_param: downlink_vlan }\\n      - config:\\n          str_replace:\\n            params:\\n              $LIFD:\\n                get_param: {{ device }}_device_logical_downlink_interface\\n              $LIFU:\\n                get_param: {{ device }}_device_logical_uplink_interface\\n            template: |\\n                instance-type virtual-router;\\n                interface $LIFD;\\n                interface $LIFU;\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: routing-instances\\n        - config_type: name\\n          xml_type: named_tag\\n          tag: instance\\n          name: { get_param: vrf_name }\\n      - config:\\n          str_replace:\\n            params:\\n              $APPLY_GROUP:\\n                get_param: {{ device }}_uplink_vrrp_config_group\\n              $VLAN:\\n                get_param: uplink_vlan_id\\n            template: |\\n              apply-groups $APPLY_GROUP;\\n              description DC10GVDX;\\n              vlan-id $VLAN;\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: interfaces\\n        - config_type: name\\n          xml_type: named_tag\\n          tag: interface\\n          name: { get_param: {{ device }}_device_physical_uplink_interface }\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: unit\\n          name: { get_param: uplink_vlan_id }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[50], CreatedIndex=[50]
2019/02/01 00:26:37 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/interdc_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"interdc_interface\",\"parameter_mappings\":{\"downlink_vlan_id\":{\"field\":\"downlink_vlan_id\",\"path\":[\"interdc_gw_id\"]},\"gohan_id\":{\"field\":\"id\"},\"gw_vip\":{\"field\":\"gw_vipv4\"},\"heat_timeout\":{\"constant\":60},\"netmask\":{\"field\":\"netmask\"},\"primary_device_downlink_physical_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"primary_interface_id\"]},\"primary_device_gw_ip\":{\"field\":\"primary_ipv4\"},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_logical_interface\":{\"field\":\"primary_logical_uplink_interface_name\",\"path\":[\"interdc_gw_id\"]},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_physical_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"uplink_interface_id\",\"primary_interface_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_priority\":{\"constant\":105},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_logical_interface_name\":{\"field\":\"primary_logical_uplink_interface_name\",\"path\":[\"interdc_gw_id\"]},\"secondary_device_downlink_physical_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_gw_ip\":{\"field\":\"secondary_ipv4\"},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_logical_interface\":{\"field\":\"secondary_logical_uplink_interface_name\",\"path\":[\"interdc_gw_id\"]},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_physical_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"uplink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_priority\":{\"constant\":100},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_logical_interface_name\":{\"field\":\"secondary_logical_uplink_interface_name\",\"path\":[\"interdc_gw_id\"]},\"tenant_id\":{\"field\":\"tenant_id\"},\"uplink_vlan_id\":{\"field\":\"uplink_vlan_id\",\"path\":[\"interdc_gw_id\"]},\"version\":{\"version\":\"auto_filled\"},\"vrf_name\":{\"field\":\"vrf_name\",\"path\":[\"interdc_gw_id\"]},\"vrrp_group\":{\"field\":\"vrid\"}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Interdc Interface\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Primary device\\n    label: Logical Interface name\\n    type: string\\n  primary_device_downlink_physical_interface:\\n    description: MX physical port on which logical downlink interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_logical_interface:\\n    description: Name of the created logical uplink interface on the Secondary device\\n    label: Logical Interface name\\n    type: string\\n  secondary_device_downlink_physical_interface:\\n    description: MX physical port on which downlink logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    description: Name of VRF (routing-instance) in MX config\\n    label: VRF Name\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  uplink_vlan_id:\\n    description: VLAN ID used on uplink interfaces (same for both primary and secondary device)\\n    label: Uplink VLAN ID\\n    type: string\\n  downlink_vlan_id:\\n    description: VLAN ID used on downlink interfaces (same for both primary and secondary device)\\n    label: Downlink VLAN ID\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the InterDC Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                get_param: vrrp_group\\n              $VIP:\\n                get_param: gw_vip\\n              $PRIORITY:\\n                get_param: {{ device }}_device_priority\\n              $DOWNLINK_IF:\\n                get_param: secondary_device_downlink_physical_interface\\n              $DOWNLINK_VLAN_ID:\\n                get_param: downlink_vlan_id\\n            template: |\\n              vrrp-group $VRRP_GROUP {\\n                virtual-address $VIP;\\n                priority $PRIORITY;\\n                track {\\n                  interface $DOWNLINK_IF.$DOWNLINK_VLAN_ID {\\n                    priority-cost 10;\\n                  }\\n                }\\n              }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: interfaces\\n        - config_type: name\\n          xml_type: named_tag\\n          tag: interface\\n          name: { get_param: {{ device }}_device_physical_interface }\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: unit\\n          name: { get_param: uplink_vlan_id }\\n        - config_type: tag\\n          xml_type: tag\\n          tag: family\\n        - config_type: tag\\n          xml_type: tag\\n          tag: inet\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: address\\n          name:\\n            str_replace:\\n              params:\\n                $DEVICE_IP:\\n                  get_param: {{ device }}_device_gw_ip\\n                $NETMASK:\\n                  get_param: netmask\\n              template: |\\n                $DEVICE_IP/$NETMASK\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: interdc_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_metric_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports_metric\\n      resource_type: interdc_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: {{ device }}_router\\n      properties:\\n        device_ip: { get_param: {{ device }}_device_ip }\\n        if_name: { get_param: {{ device }}_device_logical_interface }\\n        community_name: EDGE_ROUTER_COMMUNITY\\n      syncer_properties:\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              device_index: {{ device }}\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\n    depends_on: vrrp_monitor\\n{% endfor %}\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  {{ device }}_interface_monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: {{ device }}_interface_metric_monitor}\\n  {{ device }}_interface_monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [{{ device }}_interface_metric_monitor, link]}\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[51], CreatedIndex=[51]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/gw_interface_interdc], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"gw_interface_interdc\",\"parameter_mappings\":{\"downlink_vlan_id\":{\"field\":\"downlink_vlan_id\",\"path\":[\"interdc_gw_id\"]},\"gohan_id\":{\"field\":\"id\"},\"gw_vip\":{\"field\":\"gw_vipv4\"},\"heat_timeout\":{\"constant\":60},\"jinja_force_dependency1\":{\"field\":\"id\",\"path\":[{\"id\":\"network_id\",\"type\":\"network\"}]},\"netmask\":{\"field\":\"netmask\"},\"primary_device_gw_ip\":{\"field\":\"primary_ipv4\"},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_physical_downlink_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"primary_interface_id\"]},\"primary_device_physical_uplink_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"uplink_interface_id\",\"primary_interface_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_priority\":{\"constant\":105},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_logical_interface_name\":{\"field\":\"primary_logical_downlink_interface_name\",\"path\":[\"interdc_gw_id\"]},\"secondary_device_gw_ip\":{\"field\":\"secondary_ipv4\"},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_physical_downlink_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_physical_uplink_interface\":{\"field\":\"name\",\"path\":[\"interdc_gw_id\",\"uplink_interface_id\",\"secondary_interface_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_priority\":{\"constant\":100},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_logical_interface_name\":{\"field\":\"secondary_logical_downlink_interface_name\",\"path\":[\"interdc_gw_id\"]},\"tenant_id\":{\"field\":\"tenant_id\"},\"uplink_vlan_id\":{\"field\":\"uplink_vlan_id\",\"path\":[\"interdc_gw_id\"]},\"version\":{\"version\":\"auto_filled\"},\"vrf_name\":{\"field\":\"vrf_name\",\"path\":[\"interdc_gw_id\"]},\"vrrp_group\":{\"field\":\"vrid\"}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Gateway Interface Inter DC\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  primary_device_physical_downlink_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  primary_device_physical_uplink_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_physical_downlink_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  secondary_device_physical_uplink_interface:\\n    description: MX physical port on which logical interface will be created\\n    label: Underlying physical interface\\n    type: string\\n  downlink_vlan_id:\\n    description: Vlan tag for mx logical downlink interface\\n    label: Vlan Tag\\n    type: string\\n  uplink_vlan_id:\\n    description: Vlan tag for mx logical uplink interface\\n    label: Vlan Tag\\n    type: string\\n  gw_vip:\\n    description: Virtual IP configured on VRRP\\n    label: Inet Address CIDR\\n    type: string\\n  primary_device_gw_ip:\\n    description: IP on primary device\\n    label: Inet Address CIDR\\n    type: string\\n  secondary_device_gw_ip:\\n    description: IP on secondary device\\n    label: Inet Address CIDR\\n    type: string\\n  netmask:\\n    description: Netmask for gw_ip\\n    label: Netmask\\n    type: number\\n  vrrp_group:\\n    type: string\\n    label: VRRP Group\\n  primary_device_priority:\\n    type: string\\n    label: Primary device priority\\n  secondary_device_priority:\\n    type: string\\n    label: Secondary device priority\\n  vrf_name:\\n    type: string\\n    label: VRF\\n  primary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  secondary_logical_interface_name:\\n    description: MX logical port\\n    label: Underlying logical interface\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the GW Interface\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    type: OS::Contrail::NetconfNamedConfigs\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $VRRP_GROUP:\\n                get_param: vrrp_group\\n              $PRIORITY:\\n                get_param: {{ device }}_device_priority\\n              $VIP:\\n                get_param: gw_vip\\n              $UPLINK_IF:\\n                get_param: {{device}}_device_physical_uplink_interface\\n              $UPLINK_VLAN_ID:\\n                get_param: uplink_vlan_id\\n            template: |\\n              vrrp-group $VRRP_GROUP {\\n                virtual-address $VIP;\\n                priority $PRIORITY;\\n                track {\\n                  interface $UPLINK_IF.$UPLINK_VLAN_ID {\\n                    priority-cost 10;\\n                  }\\n                }\\n              }\\n        path:\\n        - config_type: tag\\n          xml_type: tag\\n          tag: interfaces\\n        - config_type: name\\n          xml_type: named_tag\\n          tag: interface\\n          name: { get_param: {{ device }}_device_physical_downlink_interface }\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: unit\\n          name: { get_param: downlink_vlan_id }\\n        - config_type: tag\\n          xml_type: tag\\n          tag: family\\n        - config_type: tag\\n          xml_type: tag\\n          tag: inet\\n        - config_type: named_tag\\n          xml_type: named_tag\\n          tag: address\\n          name:\\n            str_replace:\\n              params:\\n                $DEVICE_IP:\\n                  get_param: {{ device }}_device_gw_ip\\n                $NETMASK:\\n                  get_param: netmask\\n              template: |\\n                $DEVICE_IP/$NETMASK\\n{% endfor %}\\n\\n  vrrp_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: vrrp_pool\\n      resource_type: gw_interfaces\\n      resource_id: { get_param: gohan_id }\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      field_name: status\\n      properties:\\n        vrid:\\n          - { get_param: vrrp_group }\\n        primary:\\n          host: { get_param: primary_device_ip }\\n          port: { get_param: primary_device_port }\\n          login: { get_param: primary_device_username }\\n          password: { get_param: primary_device_password }\\n          interface: { get_param: primary_logical_interface_name }\\n        secondary:\\n          host: { get_param: secondary_device_ip }\\n          port: { get_param: secondary_device_port }\\n          login: { get_param: secondary_device_username }\\n          password: { get_param: secondary_device_password }\\n          interface: { get_param: secondary_logical_interface_name }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: status\\n          hold_options:\\n            positive_status:\\n              - primary: MASTER\\n                secondary: BACKUP\\n            time_seconds: 360\\n    depends_on: netconf_configure_secondary\\n\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: vrrp_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [vrrp_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[52], CreatedIndex=[52]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/static_route_interdc], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"static_route_interdc\",\"parameter_mappings\":{\"heat_timeout\":{\"constant\":60},\"next_hop\":{\"field\":\"nexthop\"},\"primary_device_ip\":{\"field\":\"ip\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_password\":{\"field\":\"password\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"primary_device_username\":{\"field\":\"login\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"primary_router_id\"]},\"route\":{\"field\":\"destination\"},\"secondary_device_ip\":{\"field\":\"ip\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_password\":{\"field\":\"password\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_port\":{\"field\":\"ssh_port\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"secondary_device_username\":{\"field\":\"login\",\"path\":[\"interdc_gw_id\",\"downlink_interface_id\",\"ha_router_id\",\"secondary_router_id\"]},\"vrf_name\":{\"field\":\"vrf_name\",\"path\":[\"interdc_gw_id\"]}},\"template_file\":\"heat_template_version: 2013-05-23\\n\\ndescription: \\u003e\\n  Inter DC Gateway Static Route\\n\\nparameters:\\n  primary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Primary Device.\\n    label: Ip address of the device.\\n    type: string\\n  primary_device_port:\\n    description: Port that will be used to establish ssh connection to the Primary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  primary_device_username:\\n    description: Name of the user which will be used to log onto the Primary Device.\\n    label: User name to log on to device.\\n    type: string\\n  primary_device_password:\\n    description: Password of the user which will be used to log onto the Primary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  secondary_device_ip:\\n    description: Ip address that will be used to establish ssh connection to the Secondary Device.\\n    label: Ip address of the device.\\n    type: string\\n  secondary_device_port:\\n    description: Port that will be used to establish ssh connection to the Secondary Device.\\n    label: Port of the ssh connection.\\n    type: number\\n  secondary_device_username:\\n    description: Name of the user which will be used to log onto the Secondary Device.\\n    label: User name to log on to device.\\n    type: string\\n  secondary_device_password:\\n    description: Password of the user which will be used to log onto the Secondary Device.\\n    label: Users password.\\n    type: string\\n    hidden: true\\n  vrf_name:\\n    description: Name of VRF to add this static route\\n    label: VRF\\n    type: string\\n  route:\\n    description: Static Route definition\\n    label: Route\\n    type: string\\n  next_hop:\\n    description: Next hop for the static route\\n    label: Next hop\\n    type: string\\n\\nresources:\\n{% for device in [\\\"primary\\\", \\\"secondary\\\"] %}\\n  netconf_configure_{{ device }}:\\n    {% if device == \\\"secondary\\\" %}depends_on: netconf_configure_primary{% endif %}\\n    type: OS::Contrail::NetconfNamedConfigs\\n    properties:\\n      lock_timeout: 3000\\n      device_ip:\\n        get_param: {{ device }}_device_ip\\n      password:\\n        get_param: {{ device }}_device_password\\n      port:\\n        get_param: {{ device }}_device_port\\n      username:\\n        get_param: {{ device }}_device_username\\n      configs:\\n      - config:\\n          str_replace:\\n            params:\\n              $NEXT_HOP:\\n                get_param: next_hop\\n            template: |\\n              next-hop $NEXT_HOP;\\n        path:\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-instances\\n          - config_type: name\\n            xml_type: named_tag\\n            tag: instance\\n            name: { get_param: vrf_name }\\n          - config_type: tag\\n            xml_type: tag\\n            tag: routing-options\\n          - config_type: tag\\n            xml_type: tag\\n            tag: static\\n          - config_type: named_tag\\n            xml_type: named_tag\\n            tag: route\\n            name: { get_param: route }\\n{% endfor %}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[53], CreatedIndex=[53]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/quotas/default], value=[{"body":"{\"aws_gateway\":10000,\"azure_gateway\":10000,\"colocation_logical_link\":10000,\"common_function_gateway\":10000,\"firewall\":10000,\"gcp_gateway\":10000,\"hosting_logical_link\":10000,\"hosting_physical_link_plane_storage\":10000,\"id\":\"default\",\"interdc_gateway\":10000,\"internet_gateway\":10000,\"load_balancer\":10000,\"network\":10000,\"port\":30000,\"public_ip\":10000,\"subnet\":10000,\"tenant_id\":\"default\",\"vpn_gateway\":10000}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[54], CreatedIndex=[54]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/reserve_addresses/default], value=[{"body":"{\"id\":\"default\",\"subnets\":[\"169.254.0.0/16\",\"100.64.0.0/10\"],\"tenant_id\":\"default\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[55], CreatedIndex=[55]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/vnf_instance], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"vnf_instance\",\"parameter_mappings\":{\"availability_zone\":\"Pavailability_zone\",\"config_drive\":\"Pconfig_drive\",\"flavor\":\"Fvnf_plan+vnf_plan_id:flavor\",\"gohan_id\":\"Pid\",\"heat_timeout\":\"C30\",\"image\":\"Fvnf_template+vnf_template_id:image\",\"name\":\"Pname\",\"networks\":\"Pnetworks\",\"reboot\":\"Preboot\",\"tenant_id\":\"Ptenant_id\",\"user_data\":\"Puser_data\",\"user_data_format\":\"Puser_data_format\",\"version\":\"Vauto_filled\"},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: VNF Instance\\nparameters:\\n  name:\\n    default: \\\"\\\"\\n    type: string\\n  image:\\n    type: string\\n    constraints:\\n    - custom_constraint: glance.image\\n  flavor:\\n    type: string\\n    constraints:\\n    - custom_constraint: nova.flavor\\n  availability_zone:\\n    type: string\\n    default: \\\"\\\"\\n  networks:\\n    type: json\\n  reboot:\\n    type: string\\n    default: \\\"\\\"\\n  user_data:\\n    type: string\\n    default: \\\"\\\"\\n  user_data_format:\\n    type: string\\n  config_drive:\\n    type: boolean\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the VNF Instance\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n  server:\\n    type: ESI::VNF::Instance\\n    properties:\\n      name: { get_param: name }\\n      flavor: { get_param: flavor }\\n      image: { get_param: image }\\n      networks: { get_param: networks }\\n      availability_zone: { get_param: availability_zone }\\n      reboot: { get_param: reboot }\\n      user_data: { get_param: user_data }\\n      user_data_format: { get_param: user_data_format }\\n      config_drive: { get_param: config_drive }\\n  server_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: compute\\n      resource_type: vnf_instances\\n      resource_id: { get_param: gohan_id }\\n      field_name: server\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      properties:\\n        server_id: { get_resource: server }\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: server\\n    depends_on: server\\noutputs:\\n  server_id:\\n    description: A unique id for the nova server.\\n    value: { get_resource: server }\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: server_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [server_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[56], CreatedIndex=[56]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/firewall_config], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"firewall_config\",\"parameter_mappings\":{\"admin_password\":{\"field\":\"admin_password\"},\"admin_username\":{\"field\":\"admin_username\"},\"credentials\":{\"field\":\"credentials\",\"path\":[\"vnf_instance_id\",\"vnf_template_id\"]},\"default_gateway\":{\"field\":\"default_gateway\"},\"gohan_id\":{\"field\":\"id\"},\"heat_timeout\":{\"constant\":13},\"management_ip\":{\"field\":\"management_ip\",\"path\":[\"vnf_instance_id\"]},\"networks\":{\"field\":\"networks\"},\"other_password\":{\"field\":\"other_password\"},\"other_username\":{\"field\":\"other_username\"},\"tenant_id\":{\"field\":\"tenant_id\"},\"user_password\":{\"field\":\"user_password\"},\"user_username\":{\"field\":\"user_username\"},\"version\":{\"version\":\"auto_filled\"}},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: Vyatta Firewall Configuration\\nparameters:\\n  management_ip:\\n    type: string\\n  credentials:\\n    type: json\\n  default_gateway:\\n    type: string\\n    default: \\\"\\\"\\n  user_username:\\n    type: string\\n  user_password:\\n    type: string\\n    default: \\\"\\\"\\n    hidden: true\\n  admin_username:\\n    type: string\\n  admin_password:\\n    type: string\\n    default: \\\"\\\"\\n    hidden: true\\n  other_username:\\n    type: string\\n    default: \\\"\\\"\\n  other_password:\\n    type: string\\n    default: \\\"\\\"\\n    hidden: true\\n  networks:\\n    type: json\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the VNF Instance\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n  server:\\n    type: ESI::VNF::VyattaConfig\\n    properties:\\n      management_ip: { get_param: management_ip }\\n      credentials: { get_param: credentials }\\n      default_gateway: { get_param: default_gateway }\\n      user_username: { get_param: user_username }\\n      user_password: { get_param: user_password }\\n      admin_username: { get_param: admin_username }\\n      admin_password: { get_param: admin_password }\\n      other_username: { get_param: other_username }\\n      other_password: { get_param: other_password }\\n      networks: { get_param: networks }\\n  fw_device_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_device_fw\\n      resource_type: firewalls\\n      resource_id: { get_param: gohan_id }\\n      field_name: firewall\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      properties:\\n        device_ip: { get_param: management_ip }\\n        community_name: FIREWALL_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: firewall\\n        tsdb:\\n          cpu.user:\\n            metric: cpu.percents\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: user\\n          cpu.system:\\n            metric: cpu.percents\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: system\\n          cpu.idle:\\n            metric: cpu.percents\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: idle\\n          memory.total:\\n            metric: memory.kbytes\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: total\\n          memory.available:\\n            metric: memory.kbytes\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: available\\n          tcp.active:\\n            metric: tcp.connections\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              open: active\\n          tcp.passive:\\n            metric: tcp.connections\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              open: passive\\n    depends_on: server\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: fw_device_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [fw_device_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[57], CreatedIndex=[57]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/firewall_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"firewall_interface\",\"parameter_mappings\":{\"gohan_id\":{\"field\":\"id\"},\"heat_timeout\":{\"constant\":3},\"jinja_slot_number\":{\"field\":\"slot_number\"},\"management_ip\":{\"field\":\"management_ip\",\"path\":[\"firewall_id\",\"vnf_instance_id\"]},\"tenant_id\":{\"field\":\"tenant_id\"},\"version\":{\"version\":\"auto_filled\"}},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: Vyatta Firewall Interface\\nparameters:\\n  management_ip:\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the VNF Instance\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n  fw_interface_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports\\n      resource_type: firewall_interfaces\\n      resource_id: { get_param: gohan_id }\\n      field_name: interface\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      properties:\\n        device_ip: { get_param: management_ip }\\n        if_name: dp0s{{ jinja_slot_number + 3 }}\\n        community_name: FIREWALL_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: interface\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: fw_interface_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [fw_interface_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[58], CreatedIndex=[58]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/load_balancer_conf], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"load_balancer_conf\",\"parameter_mappings\":{\"admin_password\":{\"field\":\"admin_password\"},\"admin_username\":{\"field\":\"admin_username\"},\"credentials\":{\"field\":\"credentials\",\"path\":[\"load_balancer_plan_id\",\"vnf_template_id\"]},\"default_gateway\":{\"field\":\"default_gateway\"},\"heat_timeout\":{\"constant\":10},\"init_config\":{\"field\":\"init_config\",\"path\":[\"load_balancer_plan_id\",\"vnf_template_id\"]},\"internet_port\":{\"field\":\"internet_port\"},\"license_code\":{\"field\":\"license_code\",\"path\":[\"load_balancer_plan_id\"]},\"management_gateway\":{\"field\":\"management_gateway\"},\"management_ip\":{\"field\":\"management_ip\",\"path\":[\"vnf_instance_id\"]},\"model\":{\"field\":\"model\",\"path\":[\"load_balancer_plan_id\"]},\"networks\":{\"field\":\"networks\"},\"other_password\":{\"field\":\"other_password\"},\"other_username\":{\"field\":\"other_username\"},\"server_id\":{\"output_key\":\"server_id\",\"path\":[\"vnf_instance_id\"]},\"user_password\":{\"field\":\"user_password\"},\"user_username\":{\"field\":\"user_username\"}},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: Load Balancer Configuration\\nparameters:\\n  management_ip:\\n    type: string\\n  management_gateway:\\n    type: string\\n  admin_username:\\n    type: string\\n  admin_password:\\n    type: string\\n    hidden: true\\n  user_username:\\n    type: string\\n  user_password:\\n    type: string\\n    hidden: true\\n  other_username:\\n    type: string\\n  other_password:\\n    type: string\\n    hidden: true\\n  server_id:\\n    type: string\\n  license_code:\\n    type: string\\n  model:\\n    type: string\\n  init_config:\\n    type: string\\n  networks:\\n    type: string\\n  internet_port:\\n    type: string\\n  default_gateway:\\n    type: string\\n    default: \\\"\\\"\\n  credentials:\\n    type: string\\nresources:\\n  netscaler_configuration:\\n    type: ESI::VNF::NetscalerConfig\\n    properties:\\n      management_ip: { get_param: management_ip }\\n      management_gateway: { get_param: management_gateway }\\n      admin_username: { get_param: admin_username }\\n      admin_password: { get_param: admin_password }\\n      user_username: { get_param: user_username }\\n      user_password: { get_param: user_password }\\n      other_username: { get_param: other_username }\\n      other_password: { get_param: other_password }\\n      server_id: { get_param: server_id }\\n      license_code: { get_param: license_code }\\n      model: { get_param: model }\\n      init_config: { get_param: init_config }\\n      networks: { get_param: networks }\\n      internet_port: { get_param: internet_port }\\n      default_gateway: { get_param: default_gateway }\\n      credentials: { get_param: credentials }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[59], CreatedIndex=[59]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/load_balancer_syslog_server], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"load_balancer_syslog_server\",\"parameter_mappings\":{\"acl_logging\":{\"field\":\"acl_logging\"},\"appflow_logging\":{\"field\":\"appflow_logging\"},\"comment\":{\"field\":\"comment\"},\"credentials\":{\"field\":\"credentials\",\"path\":[\"load_balancer_id\",\"load_balancer_plan_id\",\"vnf_template_id\"]},\"date_format\":{\"field\":\"date_format\"},\"heat_timeout\":{\"constant\":10},\"init_config\":{\"field\":\"init_config\",\"path\":[\"load_balancer_id\",\"load_balancer_plan_id\",\"vnf_template_id\"]},\"ip_address\":{\"field\":\"ip_address\"},\"log_facility\":{\"field\":\"log_facility\"},\"log_level\":{\"field\":\"log_level\"},\"management_ip\":{\"field\":\"management_ip\",\"path\":[\"load_balancer_id\",\"vnf_instance_id\"]},\"name\":{\"field\":\"name\"},\"port_number\":{\"field\":\"port_number\"},\"priority\":{\"field\":\"priority\"},\"tcp_logging\":{\"field\":\"tcp_logging\"},\"time_zone\":{\"field\":\"time_zone\"},\"transport_type\":{\"field\":\"transport_type\"},\"user_configurable_log_messages\":{\"field\":\"user_configurable_log_messages\"},\"vserver_ip_address\":{\"field\":\"vserver_ip_address\"}},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: Syslog server\\nparameters:\\n  name:\\n    type: string\\n  ip_address:\\n    type: string\\n  port_number:\\n    type: number\\n  log_level:\\n    type: string\\n  log_facility:\\n    type: string\\n  tcp_logging:\\n    type: string\\n  acl_logging:\\n    type: string\\n  appflow_logging:\\n    type: string\\n  date_format:\\n    type: string\\n  time_zone:\\n    type: string\\n  user_configurable_log_messages:\\n    type: string\\n  transport_type:\\n    type: string\\n  priority:\\n    type: number\\n  vserver_ip_address:\\n    type: string\\n  comment:\\n    type: string\\n  management_ip:\\n    type: string\\n  credentials:\\n    type: string\\n  init_config:\\n    type: string\\nresources:\\n  load_balancer_syslog_server:\\n    type: ESI::VNF::NetscalerSyslogServer\\n    properties:\\n      name: { get_param: name }\\n      ip_address: { get_param: ip_address }\\n      port_number: { get_param: port_number }\\n      log_level: { get_param: log_level }\\n      log_facility: { get_param: log_facility }\\n      tcp_logging: { get_param: tcp_logging }\\n      acl_logging: { get_param: acl_logging }\\n      appflow_logging: { get_param: appflow_logging }\\n      date_format: { get_param: date_format }\\n      time_zone: { get_param: time_zone }\\n      user_configurable_log_messages: { get_param: user_configurable_log_messages }\\n      transport_type: { get_param: transport_type }\\n      priority: { get_param: priority }\\n      vserver_ip_address: { get_param: vserver_ip_address }\\n      comment: { get_param: comment }\\n      management_ip: { get_param: management_ip }\\n      credentials: { get_param: credentials }\\n      init_config: { get_param: init_config }\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[60], CreatedIndex=[60]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/load_balancer], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"load_balancer\",\"parameter_mappings\":{\"gohan_id\":{\"field\":\"id\"},\"heat_timeout\":{\"constant\":3},\"jinja_force_dependency\":{\"field\":\"id\",\"path\":[\"load_balancer_conf_id\"]},\"management_ip\":{\"field\":\"management_ip\",\"path\":[\"vnf_instance_id\"]},\"tenant_id\":{\"field\":\"tenant_id\"},\"version\":{\"version\":\"auto_filled\"}},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: Load Balancer\\nparameters:\\n  management_ip:\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the VNF Instance\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n  lb_device_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_device_lb\\n      resource_type: load_balancers\\n      resource_id: { get_param: gohan_id }\\n      field_name: load_balancer\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      properties:\\n        device_ip: { get_param: management_ip }\\n        community_name: LOAD_BALANCER_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: load_balancer\\n        tsdb:\\n          cpu.usage:\\n            metric: cpu.percents\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: usage\\n          memory.usage:\\n            metric: memory.percents\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              type: usage\\n          http.request:\\n            metric: http.request.connections\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n          tcp.client:\\n            metric: tcp.connections\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              owner: client\\n          tcp.server:\\n            metric: tcp.connections\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              owner: server\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: lb_device_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [lb_device_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[61], CreatedIndex=[61]
2019/02/01 00:26:38 Got updated data : Action=[set], key=[/config/v2.0/heat_templates/load_balancer_interface], value=[{"body":"{\"handler\":\"heat_worker\",\"id\":\"load_balancer_interface\",\"parameter_mappings\":{\"gohan_id\":{\"field\":\"id\"},\"heat_timeout\":{\"constant\":3},\"jinja_slot_number\":{\"field\":\"slot_number\"},\"management_ip\":{\"field\":\"management_ip\",\"path\":[\"load_balancer_id\",\"vnf_instance_id\"]},\"tenant_id\":{\"field\":\"tenant_id\"},\"version\":{\"version\":\"auto_filled\"}},\"template_file\":\"heat_template_version: 2013-05-23\\ndescription: Load Balancer Interface\\nparameters:\\n  management_ip:\\n    type: string\\n  gohan_id:\\n    type: string\\n    label: Gohan resource ID\\n    description: UUID of the VNF Instance\\n  tenant_id:\\n    type: string\\n    label: Tenant ID\\n  version:\\n    type: number\\n    label: Config version\\nresources:\\n  lb_interface_monitor:\\n    type: ESI::Monitoring::MonitoringTarget\\n    properties:\\n      type: snmp_ports\\n      resource_type: load_balancer_interfaces\\n      resource_id: { get_param: gohan_id }\\n      field_name: interface\\n      tenant_id: { get_param: tenant_id }\\n      version: { get_param: version }\\n      properties:\\n        device_ip: { get_param: management_ip }\\n        {% if jinja_slot_number == 0  %}\\n        if_name: 0/1\\n        {% else %}\\n        if_name: 1/{{ jinja_slot_number }}\\n        {% endif %}\\n        community_name: LOAD_BALANCER_COMMUNITY\\n      syncer_properties:\\n        etcd:\\n          status:\\n            key: interface\\n        tsdb:\\n          traffic.in:\\n            metric: traffic.bytes\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              direction: in\\n          traffic.out:\\n            metric: traffic.bytes\\n            tags:\\n              resource_id: { get_param: gohan_id }\\n              direction: out\\noutputs:\\n  monitoring_target_id:\\n    description: Monitoring Target ID\\n    value: { get_resource: lb_interface_monitor}\\n  monitoring_link:\\n    description: Monitoring Process Link\\n    value: { get_attr: [lb_interface_monitor, link]}\\n\",\"watch\":[]}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[62], CreatedIndex=[62]
2019/02/01 00:26:41 Got updated data : Action=[create], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:27:46.712634389 +0000 UTC], TTL=[65], ModifiedIndex=[63], CreatedIndex=[63]
2019/02/01 00:26:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:27:46.729978144 +0000 UTC], TTL=[65], ModifiedIndex=[64], CreatedIndex=[63]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/state/v2.0/quotas/default], value=[{"error": "", "state": {"worker_state": "READ_COMPLETE"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[65], CreatedIndex=[65]
2019/02/01 00:26:42 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/quotas/default], value=[{"body": {"aws_gateway": 10000, "azure_gateway": 10000, "colocation_logical_link": 10000, "common_function_gateway": 10000, "firewall": 10000, "gcp_gateway": 10000, "hosting_logical_link": 10000, "hosting_physical_link_plane_storage": 10000, "id": "default", "interdc_gateway": 10000, "internet_gateway": 10000, "load_balancer": 10000, "network": 10000, "port": 30000, "public_ip": 10000, "subnet": 10000, "tenant_id": "default", "vpn_gateway": 10000}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[66], CreatedIndex=[66]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/state/v2.0/reserve_addresses/default], value=[{"error": "", "state": {"worker_state": "READ_COMPLETE"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[67], CreatedIndex=[67]
2019/02/01 00:26:42 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/reserve_addresses/default], value=[{"body": {"id": "default", "subnets": ["169.254.0.0/16", "100.64.0.0/10"], "tenant_id": "default"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[68], CreatedIndex=[68]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[65], Expiration=[<nil>], TTL=[0], ModifiedIndex=[69], CreatedIndex=[69]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[65], Expiration=[<nil>], TTL=[0], ModifiedIndex=[70], CreatedIndex=[70]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[65], Expiration=[<nil>], TTL=[0], ModifiedIndex=[71], CreatedIndex=[71]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[65], Expiration=[<nil>], TTL=[0], ModifiedIndex=[72], CreatedIndex=[72]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[67], Expiration=[<nil>], TTL=[0], ModifiedIndex=[73], CreatedIndex=[73]
2019/02/01 00:26:42 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[67], Expiration=[<nil>], TTL=[0], ModifiedIndex=[74], CreatedIndex=[74]
2019/02/01 00:26:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:26:52.042882457 +0000 UTC], TTL=[10], ModifiedIndex=[75], CreatedIndex=[9]
2019/02/01 00:26:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:26:57.049833746 +0000 UTC], TTL=[10], ModifiedIndex=[76], CreatedIndex=[9]
2019/02/01 00:26:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:02.0515596 +0000 UTC], TTL=[10], ModifiedIndex=[77], CreatedIndex=[9]
2019/02/01 00:26:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:07.053521401 +0000 UTC], TTL=[10], ModifiedIndex=[78], CreatedIndex=[9]
2019/02/01 00:27:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:10.001593038 +0000 UTC], TTL=[10], ModifiedIndex=[79], CreatedIndex=[79]
2019/02/01 00:27:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:10.001855841 +0000 UTC], TTL=[10], ModifiedIndex=[80], CreatedIndex=[80]
2019/02/01 00:27:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:10.004123017 +0000 UTC], TTL=[10], ModifiedIndex=[81], CreatedIndex=[79]
2019/02/01 00:27:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:10.014679391 +0000 UTC], TTL=[10], ModifiedIndex=[82], CreatedIndex=[80]
2019/02/01 00:27:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[83], CreatedIndex=[79]
2019/02/01 00:27:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[84], CreatedIndex=[80]
2019/02/01 00:27:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:12.055341002 +0000 UTC], TTL=[10], ModifiedIndex=[85], CreatedIndex=[9]
2019/02/01 00:27:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:17.057005704 +0000 UTC], TTL=[10], ModifiedIndex=[86], CreatedIndex=[9]
2019/02/01 00:27:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:28:16.749881751 +0000 UTC], TTL=[65], ModifiedIndex=[87], CreatedIndex=[63]
2019/02/01 00:27:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:22.058791001 +0000 UTC], TTL=[10], ModifiedIndex=[88], CreatedIndex=[9]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/config/common/v1.0/tenants/4b4cb858859842a389d0b0c8eb567d59], value=[{"body":"{\"delete_retries\":0,\"end_time\":\"\",\"id\":\"4b4cb858859842a389d0b0c8eb567d59\",\"status\":\"active\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[89], CreatedIndex=[89]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/state/common/v1.0/tenants/4b4cb858859842a389d0b0c8eb567d59], value=[{"error": "", "state": {"worker_state": "READ_COMPLETE"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[90], CreatedIndex=[90]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[90], Expiration=[<nil>], TTL=[0], ModifiedIndex=[91], CreatedIndex=[91]
2019/02/01 00:27:15 Got updated data : Action=[create], key=[/esi-worker/config/common/v1.0/tenants/4b4cb858859842a389d0b0c8eb567d59], value=[{"body": {"delete_retries": 0, "end_time": "", "id": "4b4cb858859842a389d0b0c8eb567d59", "status": "active"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[92], CreatedIndex=[92]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/config/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"body":"{\"description\":\"\",\"existing\":\"existing\",\"hostname\":\"QFX-NW01\",\"id\":\"61a05e50-71f9-495d-b1cc-74382dfaec83\",\"management_ip_address\":\"10.161.0.33\",\"name\":\"sample-ese_device\",\"operational_state\":\"NO_STATE\",\"orchestration_state\":\"CREATE_IN_PROGRESS\",\"password\":\"password\",\"public_ip_address\":\"10.161.0.33\",\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\",\"type\":\"tor\",\"username\":\"esi\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[93], CreatedIndex=[93]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "create", "dependencies": [], "jobs": [{"action": "create", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1", "on_failure": "fail", "params": [{"param": "hostname", "resources": [], "type": "value", "value": "QFX-NW01"}, {"param": "name", "resources": [], "type": "value", "value": "sample-ese_device"}, {"param": "tenant_id", "resources": [], "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59"}, {"param": "device_ip", "resources": [], "type": "value", "value": "10.161.0.33"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "6"}, {"param": "version", "resources": [], "type": "value", "value": 1}, {"param": "gohan_id", "resources": [], "type": "value", "value": "61a05e50-71f9-495d-b1cc-74382dfaec83"}], "resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "resource_input": {"description": "", "existing": "existing", "hostname": "QFX-NW01", "id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "management_ip_address": "10.161.0.33", "name": "sample-ese_device", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "password": "password", "public_ip_address": "10.161.0.33", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "type": "tor", "username": "esi"}, "resource_type": "ese_device", "version": 1}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[94], CreatedIndex=[94]
2019/02/01 00:27:15 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"body": {"description": "", "existing": "existing", "hostname": "QFX-NW01", "id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "management_ip_address": "10.161.0.33", "name": "sample-ese_device", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "password": "password", "public_ip_address": "10.161.0.33", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "type": "tor", "username": "esi"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[95], CreatedIndex=[95]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/jobs/all/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[["heat_worker", {"is_first": true, "version": 1, "resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "resource_input": {"status": "PENDING_CREATE", "username": "esi", "password": "password", "description": "", "tags": {}, "operational_state": "NO_STATE", "public_ip_address": "10.161.0.33", "hostname": "QFX-NW01", "name": "sample-ese_device", "orchestration_state": "CREATE_IN_PROGRESS", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "existing": "existing", "type": "tor", "id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "management_ip_address": "10.161.0.33"}, "on_failure": "fail", "id": "create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f", "dependency": [], "handler": "heat_worker", "params": [{"param": "hostname", "type": "value", "value": "QFX-NW01", "resources": []}, {"param": "name", "type": "value", "value": "sample-ese_device", "resources": []}, {"param": "tenant_id", "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59", "resources": []}, {"param": "device_ip", "type": "value", "value": "10.161.0.33", "resources": []}, {"param": "heat_timeout", "type": "value", "value": "6", "resources": []}, {"param": "version", "type": "value", "value": 1, "resources": []}, {"param": "gohan_id", "type": "value", "value": "61a05e50-71f9-495d-b1cc-74382dfaec83", "resources": []}], "action": "create", "is_last": true, "job_name": "ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1", "resource_type": "ese_device"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[96], CreatedIndex=[96]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/jobs/ready/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[97], CreatedIndex=[97]
2019/02/01 00:27:15 Got updated data : Action=[create], key=[/jobs/working/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[17364004-38fa-4cfe-b9cd-ab463ce37b77], Expiration=[2019-02-01 00:28:15.567272608 +0000 UTC], TTL=[60], ModifiedIndex=[98], CreatedIndex=[98]
2019/02/01 00:27:15 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[99], CreatedIndex=[94]
2019/02/01 00:27:15 Got updated data : Action=[delete], key=[/jobs/ready/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[100], CreatedIndex=[97]
2019/02/01 00:27:15 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[101], CreatedIndex=[101]
2019/02/01 00:27:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:27.060736033 +0000 UTC], TTL=[10], ModifiedIndex=[102], CreatedIndex=[9]
2019/02/01 00:27:20 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"id": "ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83", "output": [{"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "259db18a-5c51-45d5-847e-9a05da626f80"}, {"description": "The FQ name of the physical router.", "output_key": "fq_name", "output_value": ["default-global-system-config", "NWSDP-JNPR-02"]}, {"description": "A unique id for the physical router.", "output_key": "id", "output_value": "7e5c78fa-71c0-427e-947f-586b1fc3c470"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/259db18a-5c51-45d5-847e-9a05da626f80"}, {"description": "The name of the physical router.", "output_key": "name", "output_value": "NWSDP-JNPR-02"}], "stack_id": "ese_device_61a05e50-71f9-495d-b1cc-74382dfaec83", "stack_status": "CREATE_COMPLETE", "status_reason": "Stack CREATE completed successfully", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[103], CreatedIndex=[103]
2019/02/01 00:27:20 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"heat_outputs": [{"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "259db18a-5c51-45d5-847e-9a05da626f80"}, {"description": "The FQ name of the physical router.", "output_key": "fq_name", "output_value": ["default-global-system-config", "NWSDP-JNPR-02"]}, {"description": "A unique id for the physical router.", "output_key": "id", "output_value": "7e5c78fa-71c0-427e-947f-586b1fc3c470"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/259db18a-5c51-45d5-847e-9a05da626f80"}, {"description": "The name of the physical router.", "output_key": "name", "output_value": "NWSDP-JNPR-02"}], "orchestration_state": "CREATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[104], CreatedIndex=[101]
2019/02/01 00:27:20 Got updated data : Action=[compareAndSwap], key=[/jobs/working/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[17364004-38fa-4cfe-b9cd-ab463ce37b77], Expiration=[2019-02-01 00:28:20.510174184 +0000 UTC], TTL=[60], ModifiedIndex=[105], CreatedIndex=[98]
2019/02/01 00:27:20 Got updated data : Action=[set], key=[/state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": \"259db18a-5c51-45d5-847e-9a05da626f80\", \"description\": \"Monitoring Target ID\", \"output_key\": \"monitoring_target_id\"}, {\"output_value\": [\"default-global-system-config\", \"NWSDP-JNPR-02\"], \"description\": \"The FQ name of the physical router.\", \"output_key\": \"fq_name\"}, {\"output_value\": \"7e5c78fa-71c0-427e-947f-586b1fc3c470\", \"description\": \"A unique id for the physical router.\", \"output_key\": \"id\"}, {\"output_value\": \"http://collector-agents-se:7070/targets/259db18a-5c51-45d5-847e-9a05da626f80\", \"description\": \"Monitoring Process Link\", \"output_key\": \"monitoring_link\"}, {\"output_value\": \"NWSDP-JNPR-02\", \"description\": \"The name of the physical router.\", \"output_key\": \"name\"}]", "orchestration_state": "CREATE_COMPLETE", "worker_state": "CREATE_COMPLETED"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[106], CreatedIndex=[106]
2019/02/01 00:27:20 Got updated data : Action=[create], key=[/jobs/finished/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[107], CreatedIndex=[107]
2019/02/01 00:27:20 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":106}], Expiration=[2019-02-01 00:27:30.531037411 +0000 UTC], TTL=[10], ModifiedIndex=[108], CreatedIndex=[108]
2019/02/01 00:27:20 Got updated data : Action=[delete], key=[/jobs/working/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[109], CreatedIndex=[98]
2019/02/01 00:27:20 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":106}], Expiration=[2019-02-01 00:27:30.543125404 +0000 UTC], TTL=[10], ModifiedIndex=[110], CreatedIndex=[108]
2019/02/01 00:27:20 Got updated data : Action=[delete], key=[/jobs/all/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[111], CreatedIndex=[96]
2019/02/01 00:27:20 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[112], CreatedIndex=[101]
2019/02/01 00:27:20 Got updated data : Action=[delete], key=[/jobs/finished/create:heat_worker:ese_device:61a05e50-71f9-495d-b1cc-74382dfaec83:1:u052f], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[113], CreatedIndex=[107]
2019/02/01 00:27:20 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[114], CreatedIndex=[108]
2019/02/01 00:27:20 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[106], Expiration=[<nil>], TTL=[0], ModifiedIndex=[115], CreatedIndex=[115]
2019/02/01 00:27:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:32.063168265 +0000 UTC], TTL=[10], ModifiedIndex=[116], CreatedIndex=[9]
2019/02/01 00:27:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:37.065315108 +0000 UTC], TTL=[10], ModifiedIndex=[117], CreatedIndex=[9]
2019/02/01 00:27:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:40.002067069 +0000 UTC], TTL=[10], ModifiedIndex=[118], CreatedIndex=[118]
2019/02/01 00:27:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:40.003351728 +0000 UTC], TTL=[10], ModifiedIndex=[119], CreatedIndex=[119]
2019/02/01 00:27:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:40.01415146 +0000 UTC], TTL=[10], ModifiedIndex=[120], CreatedIndex=[118]
2019/02/01 00:27:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:40.015865269 +0000 UTC], TTL=[10], ModifiedIndex=[121], CreatedIndex=[119]
2019/02/01 00:27:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[122], CreatedIndex=[118]
2019/02/01 00:27:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[123], CreatedIndex=[119]
2019/02/01 00:27:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:42.067586196 +0000 UTC], TTL=[10], ModifiedIndex=[124], CreatedIndex=[9]
2019/02/01 00:27:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:47.069579437 +0000 UTC], TTL=[10], ModifiedIndex=[125], CreatedIndex=[9]
2019/02/01 00:27:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:28:46.757045269 +0000 UTC], TTL=[65], ModifiedIndex=[126], CreatedIndex=[63]
2019/02/01 00:27:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:52.071526836 +0000 UTC], TTL=[10], ModifiedIndex=[127], CreatedIndex=[9]
2019/02/01 00:27:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:27:57.07433305 +0000 UTC], TTL=[10], ModifiedIndex=[128], CreatedIndex=[9]
2019/02/01 00:27:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:02.07702997 +0000 UTC], TTL=[10], ModifiedIndex=[129], CreatedIndex=[9]
2019/02/01 00:27:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:07.080328754 +0000 UTC], TTL=[10], ModifiedIndex=[130], CreatedIndex=[9]
2019/02/01 00:28:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:10.001763922 +0000 UTC], TTL=[10], ModifiedIndex=[131], CreatedIndex=[131]
2019/02/01 00:28:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:10.003330574 +0000 UTC], TTL=[10], ModifiedIndex=[132], CreatedIndex=[132]
2019/02/01 00:28:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:10.004225558 +0000 UTC], TTL=[10], ModifiedIndex=[133], CreatedIndex=[131]
2019/02/01 00:28:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:10.019923618 +0000 UTC], TTL=[10], ModifiedIndex=[134], CreatedIndex=[132]
2019/02/01 00:28:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[135], CreatedIndex=[131]
2019/02/01 00:28:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[136], CreatedIndex=[132]
2019/02/01 00:28:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:12.082350375 +0000 UTC], TTL=[10], ModifiedIndex=[137], CreatedIndex=[9]
2019/02/01 00:28:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:17.084091831 +0000 UTC], TTL=[10], ModifiedIndex=[138], CreatedIndex=[9]
2019/02/01 00:28:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:29:16.769766709 +0000 UTC], TTL=[65], ModifiedIndex=[139], CreatedIndex=[63]
2019/02/01 00:28:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:22.085979956 +0000 UTC], TTL=[10], ModifiedIndex=[140], CreatedIndex=[9]
2019/02/01 00:28:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:27.08797904 +0000 UTC], TTL=[10], ModifiedIndex=[141], CreatedIndex=[9]
2019/02/01 00:28:17 Got updated data : Action=[set], key=[/monitoring/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"switch":"UP","version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[142], CreatedIndex=[142]
2019/02/01 00:28:22 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[142], Expiration=[<nil>], TTL=[0], ModifiedIndex=[143], CreatedIndex=[143]
2019/02/01 00:28:22 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[142], Expiration=[<nil>], TTL=[0], ModifiedIndex=[144], CreatedIndex=[144]
2019/02/01 00:28:22 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":142}], Expiration=[2019-02-01 00:28:32.085579515 +0000 UTC], TTL=[10], ModifiedIndex=[145], CreatedIndex=[145]
2019/02/01 00:28:22 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[142], Expiration=[<nil>], TTL=[0], ModifiedIndex=[146], CreatedIndex=[146]
2019/02/01 00:28:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":142}], Expiration=[2019-02-01 00:28:32.09050421 +0000 UTC], TTL=[10], ModifiedIndex=[147], CreatedIndex=[145]
2019/02/01 00:28:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:32.090987699 +0000 UTC], TTL=[10], ModifiedIndex=[148], CreatedIndex=[9]
2019/02/01 00:28:22 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ese_devices/61a05e50-71f9-495d-b1cc-74382dfaec83], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[149], CreatedIndex=[145]
2019/02/01 00:28:22 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[142], Expiration=[<nil>], TTL=[0], ModifiedIndex=[150], CreatedIndex=[150]
2019/02/01 00:28:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:37.096874525 +0000 UTC], TTL=[10], ModifiedIndex=[151], CreatedIndex=[9]
2019/02/01 00:28:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:40.001705477 +0000 UTC], TTL=[10], ModifiedIndex=[152], CreatedIndex=[152]
2019/02/01 00:28:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:40.001889026 +0000 UTC], TTL=[10], ModifiedIndex=[153], CreatedIndex=[153]
2019/02/01 00:28:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:40.004033683 +0000 UTC], TTL=[10], ModifiedIndex=[154], CreatedIndex=[152]
2019/02/01 00:28:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:40.021395912 +0000 UTC], TTL=[10], ModifiedIndex=[155], CreatedIndex=[153]
2019/02/01 00:28:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[156], CreatedIndex=[152]
2019/02/01 00:28:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[157], CreatedIndex=[153]
2019/02/01 00:28:30 Got updated data : Action=[set], key=[/config/v2.0/physical_ports/c13acfa3-6780-4f53-90da-492dfd697e69], value=[{"body":"{\"description\":\"\",\"id\":\"c13acfa3-6780-4f53-90da-492dfd697e69\",\"name\":\"qfx-nw01-xe001\",\"plane\":\"data\",\"segmentation_ranges\":[{\"end\":4093,\"start\":3}],\"service_id\":\"server\",\"service_owner\":\"server\",\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[158], CreatedIndex=[158]
2019/02/01 00:28:30 Got updated data : Action=[set], key=[/state/v2.0/physical_ports/c13acfa3-6780-4f53-90da-492dfd697e69], value=[{"error": "", "state": {"worker_state": "READ_COMPLETE"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[159], CreatedIndex=[159]
2019/02/01 00:28:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/physical_ports/c13acfa3-6780-4f53-90da-492dfd697e69], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":159}], Expiration=[2019-02-01 00:28:40.338580388 +0000 UTC], TTL=[10], ModifiedIndex=[160], CreatedIndex=[160]
2019/02/01 00:28:30 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/physical_ports/c13acfa3-6780-4f53-90da-492dfd697e69], value=[{"body": {"description": "", "id": "c13acfa3-6780-4f53-90da-492dfd697e69", "name": "qfx-nw01-xe001", "plane": "data", "segmentation_ranges": [{"end": 4093, "start": 3}], "service_id": "server", "service_owner": "server", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[161], CreatedIndex=[161]
2019/02/01 00:28:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/physical_ports/c13acfa3-6780-4f53-90da-492dfd697e69], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":159}], Expiration=[2019-02-01 00:28:40.357668012 +0000 UTC], TTL=[10], ModifiedIndex=[162], CreatedIndex=[160]
2019/02/01 00:28:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/physical_ports/c13acfa3-6780-4f53-90da-492dfd697e69], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[163], CreatedIndex=[160]
2019/02/01 00:28:30 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[159], Expiration=[<nil>], TTL=[0], ModifiedIndex=[164], CreatedIndex=[164]
2019/02/01 00:28:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:42.098901848 +0000 UTC], TTL=[10], ModifiedIndex=[165], CreatedIndex=[9]
2019/02/01 00:28:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:47.10087397 +0000 UTC], TTL=[10], ModifiedIndex=[166], CreatedIndex=[9]
2019/02/01 00:28:37 Got updated data : Action=[set], key=[/config/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"body":"{\"connected_port_id\":\"c13acfa3-6780-4f53-90da-492dfd697e69\",\"connected_port_owner\":\"physical_port\",\"description\":\"\",\"ese_device_id\":\"61a05e50-71f9-495d-b1cc-74382dfaec83\",\"existing\":\"existing\",\"id\":\"0915a040-2f84-44fc-9083-1e2f719ae2eb\",\"name\":\"xe-0/0/1\",\"operational_state\":\"NO_STATE\",\"orchestration_state\":\"CREATE_IN_PROGRESS\",\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[167], CreatedIndex=[167]
2019/02/01 00:28:37 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "create", "dependencies": [], "jobs": [{"action": "create", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1", "on_failure": "fail", "params": [{"param": "physical_port_name", "resources": [], "type": "value", "value": "xe-0/0/1"}, {"param": "physical_device_hostname", "resources": [{"resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "resource_type": "ese_device"}], "type": "value", "value": "QFX-NW01"}, {"param": "tenant_id", "resources": [], "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59"}, {"param": "device_ip", "resources": [{"resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "resource_type": "ese_device"}], "type": "value", "value": "10.161.0.33"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "6"}, {"param": "version", "resources": [], "type": "value", "value": 1}, {"param": "gohan_id", "resources": [], "type": "value", "value": "0915a040-2f84-44fc-9083-1e2f719ae2eb"}], "resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "resource_input": {"connected_port_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "connected_port_owner": "physical_port", "description": "", "ese_device_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "existing": "existing", "id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "name": "xe-0/0/1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "resource_type": "ese_physical_port", "version": 1}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[168], CreatedIndex=[168]
2019/02/01 00:28:37 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"body": {"connected_port_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "connected_port_owner": "physical_port", "description": "", "ese_device_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "existing": "existing", "id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "name": "xe-0/0/1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[169], CreatedIndex=[169]
2019/02/01 00:28:37 Got updated data : Action=[set], key=[/jobs/all/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[["heat_worker", {"is_first": true, "version": 1, "resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "resource_input": {"status": "PENDING_CREATE", "connected_port_owner": "physical_port", "name": "xe-0/0/1", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "existing": "existing", "connected_port_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "orchestration_state": "CREATE_IN_PROGRESS", "ese_device_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "operational_state": "NO_STATE", "id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "description": ""}, "on_failure": "fail", "id": "create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1", "dependency": [], "handler": "heat_worker", "params": [{"param": "physical_port_name", "type": "value", "value": "xe-0/0/1", "resources": []}, {"param": "physical_device_hostname", "type": "value", "value": "QFX-NW01", "resources": [{"resource_type": "ese_device", "resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83"}]}, {"param": "tenant_id", "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59", "resources": []}, {"param": "device_ip", "type": "value", "value": "10.161.0.33", "resources": [{"resource_type": "ese_device", "resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83"}]}, {"param": "heat_timeout", "type": "value", "value": "6", "resources": []}, {"param": "version", "type": "value", "value": 1, "resources": []}, {"param": "gohan_id", "type": "value", "value": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "resources": []}], "action": "create", "is_last": true, "job_name": "ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1", "resource_type": "ese_physical_port"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[170], CreatedIndex=[170]
2019/02/01 00:28:37 Got updated data : Action=[set], key=[/jobs/ready/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[171], CreatedIndex=[171]
2019/02/01 00:28:37 Got updated data : Action=[create], key=[/jobs/working/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[892a4039-5cd9-457d-9901-8b8b8ccd455c], Expiration=[2019-02-01 00:29:37.338759903 +0000 UTC], TTL=[60], ModifiedIndex=[172], CreatedIndex=[172]
2019/02/01 00:28:37 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[173], CreatedIndex=[168]
2019/02/01 00:28:37 Got updated data : Action=[delete], key=[/jobs/ready/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[174], CreatedIndex=[171]
2019/02/01 00:28:37 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[175], CreatedIndex=[175]
2019/02/01 00:28:41 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"id": "ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb", "output": [{"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "39ab4e06-ac66-4e84-81c5-93b888427955"}, {"description": "A unique id for the physical interface", "output_key": "id", "output_value": "5a79909b-2bf3-4e26-8a9c-0bf6bb175457"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/39ab4e06-ac66-4e84-81c5-93b888427955"}, {"description": "The name of the physical interface.", "output_key": "name", "output_value": "xe-0/0/38"}], "stack_id": "ese_physical_port_0915a040-2f84-44fc-9083-1e2f719ae2eb", "stack_status": "CREATE_COMPLETE", "status_reason": "Stack CREATE completed successfully", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[176], CreatedIndex=[176]
2019/02/01 00:28:41 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"heat_outputs": [{"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "39ab4e06-ac66-4e84-81c5-93b888427955"}, {"description": "A unique id for the physical interface", "output_key": "id", "output_value": "5a79909b-2bf3-4e26-8a9c-0bf6bb175457"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/39ab4e06-ac66-4e84-81c5-93b888427955"}, {"description": "The name of the physical interface.", "output_key": "name", "output_value": "xe-0/0/38"}], "orchestration_state": "CREATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[177], CreatedIndex=[175]
2019/02/01 00:28:41 Got updated data : Action=[compareAndSwap], key=[/jobs/working/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[892a4039-5cd9-457d-9901-8b8b8ccd455c], Expiration=[2019-02-01 00:29:41.64408884 +0000 UTC], TTL=[60], ModifiedIndex=[178], CreatedIndex=[172]
2019/02/01 00:28:41 Got updated data : Action=[set], key=[/state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": \"39ab4e06-ac66-4e84-81c5-93b888427955\", \"description\": \"Monitoring Target ID\", \"output_key\": \"monitoring_target_id\"}, {\"output_value\": \"5a79909b-2bf3-4e26-8a9c-0bf6bb175457\", \"description\": \"A unique id for the physical interface\", \"output_key\": \"id\"}, {\"output_value\": \"http://collector-agents-se:7070/targets/39ab4e06-ac66-4e84-81c5-93b888427955\", \"description\": \"Monitoring Process Link\", \"output_key\": \"monitoring_link\"}, {\"output_value\": \"xe-0/0/38\", \"description\": \"The name of the physical interface.\", \"output_key\": \"name\"}]", "orchestration_state": "CREATE_COMPLETE", "worker_state": "CREATE_COMPLETED"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[179], CreatedIndex=[179]
2019/02/01 00:28:41 Got updated data : Action=[create], key=[/jobs/finished/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[180], CreatedIndex=[180]
2019/02/01 00:28:41 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":179}], Expiration=[2019-02-01 00:28:51.75289488 +0000 UTC], TTL=[10], ModifiedIndex=[181], CreatedIndex=[181]
2019/02/01 00:28:41 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":179}], Expiration=[2019-02-01 00:28:51.76105481 +0000 UTC], TTL=[10], ModifiedIndex=[182], CreatedIndex=[181]
2019/02/01 00:28:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:29:46.774855476 +0000 UTC], TTL=[65], ModifiedIndex=[183], CreatedIndex=[63]
2019/02/01 00:28:41 Got updated data : Action=[delete], key=[/jobs/working/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[184], CreatedIndex=[172]
2019/02/01 00:28:41 Got updated data : Action=[delete], key=[/jobs/all/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[185], CreatedIndex=[170]
2019/02/01 00:28:41 Got updated data : Action=[delete], key=[/jobs/finished/create:heat_worker:ese_physical_port:0915a040-2f84-44fc-9083-1e2f719ae2eb:1:gbjt1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[186], CreatedIndex=[180]
2019/02/01 00:28:41 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[187], CreatedIndex=[175]
2019/02/01 00:28:41 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[188], CreatedIndex=[181]
2019/02/01 00:28:41 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[179], Expiration=[<nil>], TTL=[0], ModifiedIndex=[189], CreatedIndex=[189]
2019/02/01 00:28:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:52.10298109 +0000 UTC], TTL=[10], ModifiedIndex=[190], CreatedIndex=[9]
2019/02/01 00:28:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:28:57.10462651 +0000 UTC], TTL=[10], ModifiedIndex=[191], CreatedIndex=[9]
2019/02/01 00:28:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:02.106867539 +0000 UTC], TTL=[10], ModifiedIndex=[192], CreatedIndex=[9]
2019/02/01 00:28:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:07.109531484 +0000 UTC], TTL=[10], ModifiedIndex=[193], CreatedIndex=[9]
2019/02/01 00:29:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:10.006005329 +0000 UTC], TTL=[10], ModifiedIndex=[194], CreatedIndex=[194]
2019/02/01 00:29:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:10.006087191 +0000 UTC], TTL=[10], ModifiedIndex=[195], CreatedIndex=[195]
2019/02/01 00:29:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:10.009205055 +0000 UTC], TTL=[10], ModifiedIndex=[196], CreatedIndex=[194]
2019/02/01 00:29:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:10.020603583 +0000 UTC], TTL=[10], ModifiedIndex=[197], CreatedIndex=[195]
2019/02/01 00:29:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[198], CreatedIndex=[195]
2019/02/01 00:29:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[199], CreatedIndex=[194]
2019/02/01 00:29:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:12.111443997 +0000 UTC], TTL=[10], ModifiedIndex=[200], CreatedIndex=[9]
2019/02/01 00:29:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:17.113577391 +0000 UTC], TTL=[10], ModifiedIndex=[201], CreatedIndex=[9]
2019/02/01 00:29:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:30:16.787518415 +0000 UTC], TTL=[65], ModifiedIndex=[202], CreatedIndex=[63]
2019/02/01 00:29:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:22.11649624 +0000 UTC], TTL=[10], ModifiedIndex=[203], CreatedIndex=[9]
2019/02/01 00:29:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:27.123276806 +0000 UTC], TTL=[10], ModifiedIndex=[204], CreatedIndex=[9]
2019/02/01 00:29:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:32.125360948 +0000 UTC], TTL=[10], ModifiedIndex=[205], CreatedIndex=[9]
2019/02/01 00:29:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:37.127288112 +0000 UTC], TTL=[10], ModifiedIndex=[206], CreatedIndex=[9]
2019/02/01 00:29:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:40.002043382 +0000 UTC], TTL=[10], ModifiedIndex=[207], CreatedIndex=[207]
2019/02/01 00:29:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:40.002203668 +0000 UTC], TTL=[10], ModifiedIndex=[208], CreatedIndex=[208]
2019/02/01 00:29:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:40.005577467 +0000 UTC], TTL=[10], ModifiedIndex=[209], CreatedIndex=[208]
2019/02/01 00:29:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:40.008617435 +0000 UTC], TTL=[10], ModifiedIndex=[210], CreatedIndex=[207]
2019/02/01 00:29:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[211], CreatedIndex=[208]
2019/02/01 00:29:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[212], CreatedIndex=[207]
2019/02/01 00:29:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:42.129528403 +0000 UTC], TTL=[10], ModifiedIndex=[213], CreatedIndex=[9]
2019/02/01 00:29:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:47.131679977 +0000 UTC], TTL=[10], ModifiedIndex=[214], CreatedIndex=[9]
2019/02/01 00:29:39 Got updated data : Action=[set], key=[/monitoring/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"port":"UP","version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[215], CreatedIndex=[215]
2019/02/01 00:29:39 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":215}], Expiration=[2019-02-01 00:29:49.266406714 +0000 UTC], TTL=[10], ModifiedIndex=[216], CreatedIndex=[216]
2019/02/01 00:29:39 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":215}], Expiration=[2019-02-01 00:29:49.281865503 +0000 UTC], TTL=[10], ModifiedIndex=[217], CreatedIndex=[216]
2019/02/01 00:29:39 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ese_physical_ports/0915a040-2f84-44fc-9083-1e2f719ae2eb], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[218], CreatedIndex=[216]
2019/02/01 00:29:39 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[215], Expiration=[<nil>], TTL=[0], ModifiedIndex=[219], CreatedIndex=[219]
2019/02/01 00:29:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:30:46.805235533 +0000 UTC], TTL=[65], ModifiedIndex=[220], CreatedIndex=[63]
2019/02/01 00:29:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:52.135711815 +0000 UTC], TTL=[10], ModifiedIndex=[221], CreatedIndex=[9]
2019/02/01 00:29:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:29:57.138158768 +0000 UTC], TTL=[10], ModifiedIndex=[222], CreatedIndex=[9]
2019/02/01 00:29:47 Got updated data : Action=[set], key=[/config/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"body":"{\"admin_state_up\":true,\"description\":\"sample network\",\"id\":\"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\",\"name\":\"sample-network\",\"orchestration_state\":\"CREATE_IN_PROGRESS\",\"plane\":\"data\",\"shared\":false,\"status\":\"PENDING_CREATE\",\"subnets\":[],\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[223], CreatedIndex=[223]
2019/02/01 00:29:47 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "create", "dependencies": [], "jobs": [{"action": "create", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1", "on_failure": "fail", "params": [{"param": "uuid", "resources": [], "type": "value", "value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "3"}, {"param": "name", "resources": [], "type": "value", "value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"param": "admin_state_up", "resources": [], "type": "value", "value": true}], "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_input": {"admin_state_up": true, "description": "sample network", "id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "name": "sample-network", "orchestration_state": "CREATE_IN_PROGRESS", "plane": "data", "shared": false, "status": "PENDING_CREATE", "subnets": [], "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "resource_type": "network", "version": 1}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[224], CreatedIndex=[224]
2019/02/01 00:29:47 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"body": {"admin_state_up": true, "description": "sample network", "id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "name": "sample-network", "orchestration_state": "CREATE_IN_PROGRESS", "plane": "data", "shared": false, "status": "PENDING_CREATE", "subnets": [], "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[225], CreatedIndex=[225]
2019/02/01 00:29:47 Got updated data : Action=[set], key=[/jobs/all/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[["heat_worker", {"is_first": true, "version": 1, "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_input": {"status": "PENDING_CREATE", "subnets": [], "description": "sample network", "admin_state_up": true, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "tags": {}, "plane": "data", "orchestration_state": "CREATE_IN_PROGRESS", "shared": false, "id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "name": "sample-network"}, "on_failure": "fail", "id": "create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q", "dependency": [], "handler": "heat_worker", "params": [{"param": "uuid", "type": "value", "value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resources": []}, {"param": "heat_timeout", "type": "value", "value": "3", "resources": []}, {"param": "name", "type": "value", "value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resources": []}, {"param": "admin_state_up", "type": "value", "value": true, "resources": []}], "action": "create", "is_last": true, "job_name": "network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1", "resource_type": "network"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[226], CreatedIndex=[226]
2019/02/01 00:29:47 Got updated data : Action=[set], key=[/jobs/ready/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[227], CreatedIndex=[227]
2019/02/01 00:29:47 Got updated data : Action=[create], key=[/jobs/working/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[83648111-527c-428e-be53-76ccbb2bbb09], Expiration=[2019-02-01 00:30:47.349765763 +0000 UTC], TTL=[60], ModifiedIndex=[228], CreatedIndex=[228]
2019/02/01 00:29:47 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[229], CreatedIndex=[224]
2019/02/01 00:29:47 Got updated data : Action=[delete], key=[/jobs/ready/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[230], CreatedIndex=[227]
2019/02/01 00:29:47 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[231], CreatedIndex=[231]
2019/02/01 00:29:50 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"id": "network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "output": [{"description": "The name of the virtual network.", "output_key": "route_targets", "output_value": []}, {"description": "The FQ name of the virtual network.", "output_key": "fq_name", "output_value": "default-domain:usertenant:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"description": "A unique id for the virtual network.", "output_key": "id", "output_value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"description": "The name of the virtual network.", "output_key": "name", "output_value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}], "stack_id": "network_b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "stack_status": "CREATE_COMPLETE", "status_reason": "Stack CREATE completed successfully", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[232], CreatedIndex=[232]
2019/02/01 00:29:50 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"heat_outputs": [{"description": "The name of the virtual network.", "output_key": "route_targets", "output_value": []}, {"description": "The FQ name of the virtual network.", "output_key": "fq_name", "output_value": "default-domain:usertenant:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"description": "A unique id for the virtual network.", "output_key": "id", "output_value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"description": "The name of the virtual network.", "output_key": "name", "output_value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}], "orchestration_state": "CREATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[233], CreatedIndex=[231]
2019/02/01 00:29:50 Got updated data : Action=[compareAndSwap], key=[/jobs/working/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[83648111-527c-428e-be53-76ccbb2bbb09], Expiration=[2019-02-01 00:30:50.687773393 +0000 UTC], TTL=[60], ModifiedIndex=[234], CreatedIndex=[228]
2019/02/01 00:29:50 Got updated data : Action=[set], key=[/state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": [], \"description\": \"The name of the virtual network.\", \"output_key\": \"route_targets\"}, {\"output_value\": \"default-domain:usertenant:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\", \"description\": \"The FQ name of the virtual network.\", \"output_key\": \"fq_name\"}, {\"output_value\": \"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\", \"description\": \"A unique id for the virtual network.\", \"output_key\": \"id\"}, {\"output_value\": \"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\", \"description\": \"The name of the virtual network.\", \"output_key\": \"name\"}]", "orchestration_state": "CREATE_COMPLETE", "worker_state": "CREATE_COMPLETED"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[235], CreatedIndex=[235]
2019/02/01 00:29:50 Got updated data : Action=[create], key=[/jobs/finished/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[236], CreatedIndex=[236]
2019/02/01 00:29:50 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":235}], Expiration=[2019-02-01 00:30:00.708986031 +0000 UTC], TTL=[10], ModifiedIndex=[237], CreatedIndex=[237]
2019/02/01 00:29:50 Got updated data : Action=[delete], key=[/jobs/working/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[238], CreatedIndex=[228]
2019/02/01 00:29:50 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":235}], Expiration=[2019-02-01 00:30:00.721021897 +0000 UTC], TTL=[10], ModifiedIndex=[239], CreatedIndex=[237]
2019/02/01 00:29:50 Got updated data : Action=[delete], key=[/jobs/all/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[240], CreatedIndex=[226]
2019/02/01 00:29:50 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[241], CreatedIndex=[231]
2019/02/01 00:29:50 Got updated data : Action=[delete], key=[/jobs/finished/create:heat_worker:network:b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1:1:5dp3q], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[242], CreatedIndex=[236]
2019/02/01 00:29:50 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/networks/b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[243], CreatedIndex=[237]
2019/02/01 00:29:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:02.140668781 +0000 UTC], TTL=[10], ModifiedIndex=[244], CreatedIndex=[9]
2019/02/01 00:29:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:07.143440413 +0000 UTC], TTL=[10], ModifiedIndex=[245], CreatedIndex=[9]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:10.002612001 +0000 UTC], TTL=[10], ModifiedIndex=[246], CreatedIndex=[246]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/cron_delete_tenant], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:10.002791246 +0000 UTC], TTL=[10], ModifiedIndex=[247], CreatedIndex=[247]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:10.012237543 +0000 UTC], TTL=[10], ModifiedIndex=[248], CreatedIndex=[248]
2019/02/01 00:30:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:10.016053914 +0000 UTC], TTL=[10], ModifiedIndex=[249], CreatedIndex=[246]
2019/02/01 00:30:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/cron_delete_tenant], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:10.04818192 +0000 UTC], TTL=[10], ModifiedIndex=[250], CreatedIndex=[247]
2019/02/01 00:30:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:10.050334725 +0000 UTC], TTL=[10], ModifiedIndex=[251], CreatedIndex=[248]
2019/02/01 00:30:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[252], CreatedIndex=[246]
2019/02/01 00:30:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/cron_delete_tenant], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[253], CreatedIndex=[247]
2019/02/01 00:30:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[254], CreatedIndex=[248]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/config/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"body":"{\"allocation_pools\":[{\"end\":\"192.168.200.254\",\"start\":\"192.168.200.2\"}],\"cidr\":\"192.168.200.0/24\",\"description\":\"sample subnet\",\"dhcp_server_address\":\"192.168.200.2\",\"dns_nameservers\":[\"0.0.0.0\"],\"enable_dhcp\":true,\"gateway_ip\":\"192.168.200.1\",\"host_routes\":[],\"id\":\"215cb166-b0c5-4fbb-ad5f-948cb93119fe\",\"ip_version\":4,\"name\":\"sample-subnet\",\"network_id\":\"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\",\"ntp_servers\":[],\"orchestration_state\":\"CREATE_IN_PROGRESS\",\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[255], CreatedIndex=[255]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "create", "dependencies": [], "jobs": [{"action": "create", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1", "on_failure": "fail", "params": [{"param": "name", "resources": [], "type": "value", "value": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}, {"param": "enable_dhcp", "resources": [], "type": "value", "value": true}, {"param": "network_id", "resources": [{"resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}], "type": "output_key", "value": {"output_key": "id", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}}, {"param": "ipam", "resources": [], "type": "value", "value": "default-domain:default-project:default-network-ipam"}, {"param": "dns_nameservers", "resources": [], "type": "value", "value": ["0.0.0.0"]}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "3"}, {"param": "dhcp_server_address", "resources": [], "type": "value", "value": "192.168.200.2"}, {"param": "ntp_servers", "resources": [], "type": "value", "value": []}, {"param": "allocation_pools", "resources": [], "type": "value", "value": [{"end": "192.168.200.254", "start": "192.168.200.2"}]}, {"param": "gateway_ip", "resources": [], "type": "value", "value": "192.168.200.1"}, {"param": "host_routes", "resources": [], "type": "value", "value": []}, {"param": "cidr", "resources": [], "type": "value", "value": "192.168.200.0/24"}], "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_input": {"allocation_pools": [{"end": "192.168.200.254", "start": "192.168.200.2"}], "cidr": "192.168.200.0/24", "description": "sample subnet", "dhcp_server_address": "192.168.200.2", "dns_nameservers": ["0.0.0.0"], "enable_dhcp": true, "gateway_ip": "192.168.200.1", "host_routes": [], "id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "ip_version": 4, "name": "sample-subnet", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "ntp_servers": [], "orchestration_state": "CREATE_IN_PROGRESS", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "resource_type": "subnet", "version": 1}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[256], CreatedIndex=[256]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/config/v2.0/ports/e50e0cef-49cc-4231-8331-d1119e2dea5a], value=[{"body":"{\"admin_state_up\":true,\"allowed_address_pairs\":[],\"attached\":false,\"binding:vif_type\":\"vrouter\",\"description\":\"DHCP Server Port\",\"device_id\":\"215cb166-b0c5-4fbb-ad5f-948cb93119fe\",\"device_owner\":\"network:dhcp\",\"fake_delete\":false,\"fixed_ips\":[{\"ip_address\":\"192.168.200.2\",\"subnet_id\":\"215cb166-b0c5-4fbb-ad5f-948cb93119fe\"}],\"host_routes\":[],\"id\":\"e50e0cef-49cc-4231-8331-d1119e2dea5a\",\"mac_address\":\"00:00:5e:00:01:00\",\"managed_by_service\":false,\"name\":\"dhcp-server-port\",\"network_id\":\"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\",\"orchestration_state\":\"NO_STATE\",\"security_groups\":[],\"status\":\"ACTIVE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[257], CreatedIndex=[257]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"body": {"allocation_pools": [{"end": "192.168.200.254", "start": "192.168.200.2"}], "cidr": "192.168.200.0/24", "description": "sample subnet", "dhcp_server_address": "192.168.200.2", "dns_nameservers": ["0.0.0.0"], "enable_dhcp": true, "gateway_ip": "192.168.200.1", "host_routes": [], "id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "ip_version": 4, "name": "sample-subnet", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "ntp_servers": [], "orchestration_state": "CREATE_IN_PROGRESS", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[258], CreatedIndex=[258]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/jobs/all/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[["heat_worker", {"is_first": true, "version": 1, "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_input": {"status": "PENDING_CREATE", "description": "sample subnet", "enable_dhcp": true, "tags": {}, "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "dns_nameservers": ["0.0.0.0"], "dhcp_server_address": "192.168.200.2", "ntp_servers": [], "allocation_pools": [{"start": "192.168.200.2", "end": "192.168.200.254"}], "gateway_ip": "192.168.200.1", "orchestration_state": "CREATE_IN_PROGRESS", "ip_version": 4, "host_routes": [], "cidr": "192.168.200.0/24", "id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "name": "sample-subnet"}, "on_failure": "fail", "id": "create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4", "dependency": [], "handler": "heat_worker", "params": [{"param": "name", "type": "value", "value": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resources": []}, {"param": "enable_dhcp", "type": "value", "value": true, "resources": []}, {"param": "network_id", "type": "output_key", "value": {"output_key": "id", "resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, "resources": [{"resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}]}, {"param": "ipam", "type": "value", "value": "default-domain:default-project:default-network-ipam", "resources": []}, {"param": "dns_nameservers", "type": "value", "value": ["0.0.0.0"], "resources": []}, {"param": "heat_timeout", "type": "value", "value": "3", "resources": []}, {"param": "dhcp_server_address", "type": "value", "value": "192.168.200.2", "resources": []}, {"param": "ntp_servers", "type": "value", "value": [], "resources": []}, {"param": "allocation_pools", "type": "value", "value": [{"start": "192.168.200.2", "end": "192.168.200.254"}], "resources": []}, {"param": "gateway_ip", "type": "value", "value": "192.168.200.1", "resources": []}, {"param": "host_routes", "type": "value", "value": [], "resources": []}, {"param": "cidr", "type": "value", "value": "192.168.200.0/24", "resources": []}], "action": "create", "is_last": true, "job_name": "subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1", "resource_type": "subnet"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[259], CreatedIndex=[259]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/state/v2.0/ports/e50e0cef-49cc-4231-8331-d1119e2dea5a], value=[{"error": "", "state": {"worker_state": "READ_COMPLETE"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[260], CreatedIndex=[260]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/ports/e50e0cef-49cc-4231-8331-d1119e2dea5a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":260}], Expiration=[2019-02-01 00:30:10.252754951 +0000 UTC], TTL=[10], ModifiedIndex=[261], CreatedIndex=[261]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/jobs/ready/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[262], CreatedIndex=[262]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/ports/e50e0cef-49cc-4231-8331-d1119e2dea5a], value=[{"body": {"admin_state_up": true, "allowed_address_pairs": [], "attached": false, "binding:vif_type": "vrouter", "description": "DHCP Server Port", "device_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "device_owner": "network:dhcp", "fake_delete": false, "fixed_ips": [{"ip_address": "192.168.200.2", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}], "host_routes": [], "id": "e50e0cef-49cc-4231-8331-d1119e2dea5a", "mac_address": "00:00:5e:00:01:00", "managed_by_service": false, "name": "dhcp-server-port", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "orchestration_state": "NO_STATE", "security_groups": [], "status": "ACTIVE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[263], CreatedIndex=[263]
2019/02/01 00:30:00 Got updated data : Action=[create], key=[/jobs/working/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[c7eac3e2-c11d-473a-95c3-e3562e5a2c0d], Expiration=[2019-02-01 00:31:00.260609417 +0000 UTC], TTL=[60], ModifiedIndex=[264], CreatedIndex=[264]
2019/02/01 00:30:00 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[265], CreatedIndex=[256]
2019/02/01 00:30:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/ports/e50e0cef-49cc-4231-8331-d1119e2dea5a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":260}], Expiration=[2019-02-01 00:30:10.266373769 +0000 UTC], TTL=[10], ModifiedIndex=[266], CreatedIndex=[261]
2019/02/01 00:30:00 Got updated data : Action=[delete], key=[/jobs/ready/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[267], CreatedIndex=[262]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[268], CreatedIndex=[268]
2019/02/01 00:30:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/ports/e50e0cef-49cc-4231-8331-d1119e2dea5a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[269], CreatedIndex=[261]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[260], Expiration=[<nil>], TTL=[0], ModifiedIndex=[270], CreatedIndex=[270]
2019/02/01 00:30:00 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[235], Expiration=[<nil>], TTL=[0], ModifiedIndex=[271], CreatedIndex=[271]
2019/02/01 00:30:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:12.145348259 +0000 UTC], TTL=[10], ModifiedIndex=[272], CreatedIndex=[9]
2019/02/01 00:30:03 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"id": "subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe", "output": [{"description": "IP prefix of local subnet.", "output_key": "ip_prefix", "output_value": "192.168.200.0/24"}, {"description": "The name of the local subnet.", "output_key": "name", "output_value": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}, {"description": "Default gateway of local subnet.", "output_key": "default_gateway", "output_value": "192.168.200.1"}, {"description": "A unique id for the network.", "output_key": "network_id", "output_value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"description": "IPAM this local subnet uses.", "output_key": "ipam", "output_value": "5a79909b-2bf3-4e26-8a9c-0bf6bb175457"}, {"description": "A unique id for the local subnet.", "output_key": "id", "output_value": "622495a6-b651-4033-9d30-c634e4b08851"}], "stack_id": "subnet_215cb166-b0c5-4fbb-ad5f-948cb93119fe", "stack_status": "CREATE_COMPLETE", "status_reason": "Stack CREATE completed successfully", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[273], CreatedIndex=[273]
2019/02/01 00:30:03 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"heat_outputs": [{"description": "IP prefix of local subnet.", "output_key": "ip_prefix", "output_value": "192.168.200.0/24"}, {"description": "The name of the local subnet.", "output_key": "name", "output_value": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}, {"description": "Default gateway of local subnet.", "output_key": "default_gateway", "output_value": "192.168.200.1"}, {"description": "A unique id for the network.", "output_key": "network_id", "output_value": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"description": "IPAM this local subnet uses.", "output_key": "ipam", "output_value": "5a79909b-2bf3-4e26-8a9c-0bf6bb175457"}, {"description": "A unique id for the local subnet.", "output_key": "id", "output_value": "622495a6-b651-4033-9d30-c634e4b08851"}], "orchestration_state": "CREATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[274], CreatedIndex=[268]
2019/02/01 00:30:03 Got updated data : Action=[compareAndSwap], key=[/jobs/working/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[c7eac3e2-c11d-473a-95c3-e3562e5a2c0d], Expiration=[2019-02-01 00:31:03.733647501 +0000 UTC], TTL=[60], ModifiedIndex=[275], CreatedIndex=[264]
2019/02/01 00:30:03 Got updated data : Action=[set], key=[/state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": \"192.168.200.0/24\", \"description\": \"IP prefix of local subnet.\", \"output_key\": \"ip_prefix\"}, {\"output_value\": \"215cb166-b0c5-4fbb-ad5f-948cb93119fe\", \"description\": \"The name of the local subnet.\", \"output_key\": \"name\"}, {\"output_value\": \"192.168.200.1\", \"description\": \"Default gateway of local subnet.\", \"output_key\": \"default_gateway\"}, {\"output_value\": \"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\", \"description\": \"A unique id for the network.\", \"output_key\": \"network_id\"}, {\"output_value\": \"5a79909b-2bf3-4e26-8a9c-0bf6bb175457\", \"description\": \"IPAM this local subnet uses.\", \"output_key\": \"ipam\"}, {\"output_value\": \"622495a6-b651-4033-9d30-c634e4b08851\", \"description\": \"A unique id for the local subnet.\", \"output_key\": \"id\"}]", "orchestration_state": "CREATE_COMPLETE", "worker_state": "CREATE_COMPLETED"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[276], CreatedIndex=[276]
2019/02/01 00:30:03 Got updated data : Action=[create], key=[/jobs/finished/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[277], CreatedIndex=[277]
2019/02/01 00:30:03 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":276}], Expiration=[2019-02-01 00:30:13.756566234 +0000 UTC], TTL=[10], ModifiedIndex=[278], CreatedIndex=[278]
2019/02/01 00:30:03 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":276}], Expiration=[2019-02-01 00:30:13.762436296 +0000 UTC], TTL=[10], ModifiedIndex=[279], CreatedIndex=[278]
2019/02/01 00:30:03 Got updated data : Action=[delete], key=[/jobs/working/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[280], CreatedIndex=[264]
2019/02/01 00:30:03 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[281], CreatedIndex=[268]
2019/02/01 00:30:03 Got updated data : Action=[delete], key=[/jobs/all/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[282], CreatedIndex=[259]
2019/02/01 00:30:03 Got updated data : Action=[delete], key=[/jobs/finished/create:heat_worker:subnet:215cb166-b0c5-4fbb-ad5f-948cb93119fe:1:gbmz4], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[283], CreatedIndex=[277]
2019/02/01 00:30:03 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/subnets/215cb166-b0c5-4fbb-ad5f-948cb93119fe], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[284], CreatedIndex=[278]
2019/02/01 00:30:03 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[276], Expiration=[<nil>], TTL=[0], ModifiedIndex=[285], CreatedIndex=[285]
2019/02/01 00:30:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:17.148272843 +0000 UTC], TTL=[10], ModifiedIndex=[286], CreatedIndex=[9]
2019/02/01 00:30:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:31:16.810637112 +0000 UTC], TTL=[65], ModifiedIndex=[287], CreatedIndex=[63]
2019/02/01 00:30:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:22.150206002 +0000 UTC], TTL=[10], ModifiedIndex=[288], CreatedIndex=[9]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/config/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"body":"{\"admin_state_up\":true,\"allowed_address_pairs\":[],\"attached\":false,\"binding:vif_type\":\"vrouter\",\"description\":\"\",\"device_id\":\"c13acfa3-6780-4f53-90da-492dfd697e69\",\"device_owner\":\"physical_port\",\"fake_delete\":false,\"fixed_ips\":[{\"ip_address\":\"192.168.200.101\",\"subnet_id\":\"215cb166-b0c5-4fbb-ad5f-948cb93119fe\"}],\"id\":\"3a04e6ed-68fb-4534-8822-d5162d19f35a\",\"mac_address\":\"fa:16:3e:e7:7c:0f\",\"managed_by_service\":false,\"name\":\"sample-port\",\"network_id\":\"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\",\"operational_state\":\"NO_STATE\",\"orchestration_state\":\"CREATE_IN_PROGRESS\",\"security_groups\":[],\"segmentation_id\":1003,\"segmentation_type\":\"vlan\",\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[289], CreatedIndex=[289]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "create", "dependencies": [], "jobs": [{"action": "create", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1", "on_failure": "fail", "params": [{"param": "jinja_attached", "resources": [], "type": "value", "value": false}, {"param": "virtual_network", "resources": [{"resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}], "type": "output_key", "value": {"output_key": "id", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}}, {"param": "virtual_machine", "resources": [], "type": "value", "value": "c13acfa3-6780-4f53-90da-492dfd697e69"}, {"param": "name", "resources": [], "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}, {"param": "admin_state_up", "resources": [], "type": "value", "value": true}, {"param": "tenant_id", "resources": [], "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "13"}, {"param": "virtual_machine_interface_allowed_address_pairs", "resources": [], "type": "value", "value": []}, {"param": "virtual_machine_interface_mac_address", "resources": [], "type": "value", "value": "fa:16:3e:e7:7c:0f"}, {"param": "device_owner", "resources": [], "type": "value", "value": "physical_port"}, {"param": "version", "resources": [], "type": "value", "value": 1}, {"param": "security_groups", "resources": [], "type": "value", "value": []}, {"param": "jinja_force_dependency_gw_interface", "resources": [], "type": "value", "value": null}, {"param": "jinja_fixed_ips", "resources": [], "type": "value", "value": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}]}, {"param": "jinja_force_dependency_cfg", "resources": [], "type": "value", "value": null}, {"param": "jinja_device_owner", "resources": [], "type": "value", "value": "physical_port"}, {"param": "jinja_subnets", "resources": [{"resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}], "type": "list", "value": [{"param": "jinja_subnets", "resources": [], "type": "output_key", "value": {"output_key": "id", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}}]}, {"param": "uuid", "resources": [], "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}], "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_input": {"admin_state_up": true, "allowed_address_pairs": [], "attached": false, "binding:vif_type": "vrouter", "description": "", "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "device_owner": "physical_port", "fake_delete": false, "fixed_ips": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "mac_address": "fa:16:3e:e7:7c:0f", "managed_by_service": false, "name": "sample-port", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "security_groups": [], "segmentation_id": 1003, "segmentation_type": "vlan", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "resource_type": "port", "version": 1}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[290], CreatedIndex=[290]
2019/02/01 00:30:13 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"body": {"admin_state_up": true, "allowed_address_pairs": [], "attached": false, "binding:vif_type": "vrouter", "description": "", "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "device_owner": "physical_port", "fake_delete": false, "fixed_ips": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "mac_address": "fa:16:3e:e7:7c:0f", "managed_by_service": false, "name": "sample-port", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "security_groups": [], "segmentation_id": 1003, "segmentation_type": "vlan", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[291], CreatedIndex=[291]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/config/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"body":"{\"connected_resource\":\"port\",\"description\":\"ESE Logical port for Port 3a04e6ed-68fb-4534-8822-d5162d19f35a\",\"ese_physical_port_id\":\"0915a040-2f84-44fc-9083-1e2f719ae2eb\",\"id\":\"74522211-c8db-41b6-8a35-4fac9656713c\",\"name\":\"xe-0/0/1.1003\",\"network_id\":\"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\",\"operational_state\":\"NO_STATE\",\"orchestration_state\":\"CREATE_IN_PROGRESS\",\"port_ids\":[\"3a04e6ed-68fb-4534-8822-d5162d19f35a\"],\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\",\"type\":\"L2\",\"vlan_id\":1003}","marked_for_deletion":false,"version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[292], CreatedIndex=[292]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/jobs/all/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[["heat_worker", {"is_first": true, "version": 1, "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_input": {"allowed_address_pairs": [], "device_owner": "physical_port", "fake_delete": false, "fixed_ips": [{"subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "ip_address": "192.168.200.101"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "security_groups": [], "binding:vif_type": "vrouter", "mac_address": "fa:16:3e:e7:7c:0f", "status": "PENDING_CREATE", "description": "", "tags": {}, "segmentation_id": 1003, "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "name": "sample-port", "admin_state_up": true, "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "managed_by_service": false, "attached": false, "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "segmentation_type": "vlan"}, "on_failure": "fail", "id": "create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv", "dependency": [], "handler": "heat_worker", "params": [{"param": "jinja_attached", "type": "value", "value": false, "resources": []}, {"param": "virtual_network", "type": "output_key", "value": {"output_key": "id", "resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, "resources": [{"resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}]}, {"param": "virtual_machine", "type": "value", "value": "c13acfa3-6780-4f53-90da-492dfd697e69", "resources": []}, {"param": "name", "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resources": []}, {"param": "admin_state_up", "type": "value", "value": true, "resources": []}, {"param": "tenant_id", "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59", "resources": []}, {"param": "heat_timeout", "type": "value", "value": "13", "resources": []}, {"param": "virtual_machine_interface_allowed_address_pairs", "type": "value", "value": [], "resources": []}, {"param": "virtual_machine_interface_mac_address", "type": "value", "value": "fa:16:3e:e7:7c:0f", "resources": []}, {"param": "device_owner", "type": "value", "value": "physical_port", "resources": []}, {"param": "version", "type": "value", "value": 1, "resources": []}, {"param": "security_groups", "type": "value", "value": [], "resources": []}, {"param": "jinja_force_dependency_gw_interface", "type": "value", "value": null, "resources": []}, {"param": "jinja_fixed_ips", "type": "value", "value": [{"subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "ip_address": "192.168.200.101"}], "resources": []}, {"param": "jinja_force_dependency_cfg", "type": "value", "value": null, "resources": []}, {"param": "jinja_device_owner", "type": "value", "value": "physical_port", "resources": []}, {"param": "jinja_subnets", "type": "list", "value": [{"resources": [], "type": "output_key", "value": {"output_key": "id", "resource_type": "subnet", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}, "param": "jinja_subnets"}], "resources": [{"resource_type": "subnet", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}]}, {"param": "uuid", "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resources": []}], "action": "create", "is_last": true, "job_name": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1", "resource_type": "port"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[293], CreatedIndex=[293]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/jobs/ready/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[294], CreatedIndex=[294]
2019/02/01 00:30:13 Got updated data : Action=[create], key=[/jobs/working/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[706b89df-4221-4102-ae01-7cbe8dbdc723], Expiration=[2019-02-01 00:31:13.590890832 +0000 UTC], TTL=[60], ModifiedIndex=[295], CreatedIndex=[295]
2019/02/01 00:30:13 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[296], CreatedIndex=[290]
2019/02/01 00:30:13 Got updated data : Action=[delete], key=[/jobs/ready/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[297], CreatedIndex=[294]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "create", "dependencies": [{"action": "create", "dependency": [], "handler": "heat_worker", "id": "create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv", "is_first": true, "is_last": true, "job_name": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1", "on_failure": "fail", "params": [{"param": "jinja_attached", "resources": [], "type": "value", "value": false}, {"param": "virtual_network", "resources": [{"resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}], "type": "output_key", "value": {"output_key": "id", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}}, {"param": "virtual_machine", "resources": [], "type": "value", "value": "c13acfa3-6780-4f53-90da-492dfd697e69"}, {"param": "name", "resources": [], "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}, {"param": "admin_state_up", "resources": [], "type": "value", "value": true}, {"param": "tenant_id", "resources": [], "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "13"}, {"param": "virtual_machine_interface_allowed_address_pairs", "resources": [], "type": "value", "value": []}, {"param": "virtual_machine_interface_mac_address", "resources": [], "type": "value", "value": "fa:16:3e:e7:7c:0f"}, {"param": "device_owner", "resources": [], "type": "value", "value": "physical_port"}, {"param": "version", "resources": [], "type": "value", "value": 1}, {"param": "security_groups", "resources": [], "type": "value", "value": []}, {"param": "jinja_force_dependency_gw_interface", "resources": [], "type": "value", "value": null}, {"param": "jinja_fixed_ips", "resources": [], "type": "value", "value": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}]}, {"param": "jinja_force_dependency_cfg", "resources": [], "type": "value", "value": null}, {"param": "jinja_device_owner", "resources": [], "type": "value", "value": "physical_port"}, {"param": "jinja_subnets", "resources": [{"resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}], "type": "list", "value": [{"param": "jinja_subnets", "resources": [], "type": "output_key", "value": {"output_key": "id", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}}]}, {"param": "uuid", "resources": [], "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}], "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_input": {"admin_state_up": true, "allowed_address_pairs": [], "attached": false, "binding:vif_type": "vrouter", "description": "", "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "device_owner": "physical_port", "fake_delete": false, "fixed_ips": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "mac_address": "fa:16:3e:e7:7c:0f", "managed_by_service": false, "name": "sample-port", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "security_groups": [], "segmentation_id": 1003, "segmentation_type": "vlan", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "resource_type": "port", "version": 1}], "jobs": [{"action": "create", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1", "on_failure": "fail", "params": [{"param": "logical_port_type", "resources": [], "type": "value", "value": "L2"}, {"param": "logical_port_vlan_id", "resources": [], "type": "value", "value": 1003}, {"param": "tenant_id", "resources": [], "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59"}, {"param": "device_ip", "resources": [{"resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "resource_type": "ese_physical_port"}, {"resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83", "resource_type": "ese_device"}], "type": "value", "value": "10.161.0.33"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "6"}, {"param": "jinja_port_ids", "resources": [], "type": "value", "value": ["3a04e6ed-68fb-4534-8822-d5162d19f35a"]}, {"param": "version", "resources": [], "type": "value", "value": 1}, {"param": "virtual_machine_interface_ids", "resources": [{"resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_type": "port"}], "type": "list", "value": [{"param": "virtual_machine_interface_ids", "resources": [], "type": "output_key", "value": {"output_key": "id", "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_type": "port"}}]}, {"param": "logical_port_name", "resources": [], "type": "value", "value": "xe-0/0/1.1003"}, {"param": "gohan_id", "resources": [], "type": "value", "value": "74522211-c8db-41b6-8a35-4fac9656713c"}, {"param": "physical_port_id", "resources": [{"resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "resource_type": "ese_physical_port"}], "type": "output_key", "value": {"output_key": "id", "resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "resource_type": "ese_physical_port"}}], "resource_id": "74522211-c8db-41b6-8a35-4fac9656713c", "resource_input": {"connected_resource": "port", "description": "ESE Logical port for Port 3a04e6ed-68fb-4534-8822-d5162d19f35a", "ese_physical_port_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "id": "74522211-c8db-41b6-8a35-4fac9656713c", "name": "xe-0/0/1.1003", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "port_ids": ["3a04e6ed-68fb-4534-8822-d5162d19f35a"], "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "type": "L2", "vlan_id": 1003}, "resource_type": "ese_logical_port", "version": 1}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[298], CreatedIndex=[298]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[299], CreatedIndex=[299]
2019/02/01 00:30:13 Got updated data : Action=[create], key=[/esi-worker/config/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"body": {"connected_resource": "port", "description": "ESE Logical port for Port 3a04e6ed-68fb-4534-8822-d5162d19f35a", "ese_physical_port_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "id": "74522211-c8db-41b6-8a35-4fac9656713c", "name": "xe-0/0/1.1003", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "port_ids": ["3a04e6ed-68fb-4534-8822-d5162d19f35a"], "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "type": "L2", "vlan_id": 1003}, "deleted": false, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[300], CreatedIndex=[300]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/jobs/all/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[["heat_worker", {"is_first": true, "version": 1, "resource_id": "74522211-c8db-41b6-8a35-4fac9656713c", "resource_input": {"status": "PENDING_CREATE", "name": "xe-0/0/1.1003", "tags": {}, "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "port_ids": ["3a04e6ed-68fb-4534-8822-d5162d19f35a"], "operational_state": "NO_STATE", "orchestration_state": "CREATE_IN_PROGRESS", "ese_physical_port_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb", "connected_resource": "port", "type": "L2", "id": "74522211-c8db-41b6-8a35-4fac9656713c", "vlan_id": 1003, "description": "ESE Logical port for Port 3a04e6ed-68fb-4534-8822-d5162d19f35a"}, "on_failure": "fail", "id": "create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz", "dependency": ["create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv"], "handler": "heat_worker", "params": [{"param": "logical_port_type", "type": "value", "value": "L2", "resources": []}, {"param": "logical_port_vlan_id", "type": "value", "value": 1003, "resources": []}, {"param": "tenant_id", "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59", "resources": []}, {"param": "device_ip", "type": "value", "value": "10.161.0.33", "resources": [{"resource_type": "ese_physical_port", "resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb"}, {"resource_type": "ese_device", "resource_id": "61a05e50-71f9-495d-b1cc-74382dfaec83"}]}, {"param": "heat_timeout", "type": "value", "value": "6", "resources": []}, {"param": "jinja_port_ids", "type": "value", "value": ["3a04e6ed-68fb-4534-8822-d5162d19f35a"], "resources": []}, {"param": "version", "type": "value", "value": 1, "resources": []}, {"param": "virtual_machine_interface_ids", "type": "list", "value": [{"resources": [], "type": "output_key", "value": {"output_key": "id", "resource_type": "port", "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}, "param": "virtual_machine_interface_ids"}], "resources": [{"resource_type": "port", "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}]}, {"param": "logical_port_name", "type": "value", "value": "xe-0/0/1.1003", "resources": []}, {"param": "gohan_id", "type": "value", "value": "74522211-c8db-41b6-8a35-4fac9656713c", "resources": []}, {"param": "physical_port_id", "type": "output_key", "value": {"output_key": "id", "resource_type": "ese_physical_port", "resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb"}, "resources": [{"resource_type": "ese_physical_port", "resource_id": "0915a040-2f84-44fc-9083-1e2f719ae2eb"}]}], "action": "create", "is_last": true, "job_name": "ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1", "resource_type": "ese_logical_port"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[301], CreatedIndex=[301]
2019/02/01 00:30:13 Got updated data : Action=[set], key=[/jobs/waiting/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[302], CreatedIndex=[302]
2019/02/01 00:30:13 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[303], CreatedIndex=[298]
2019/02/01 00:30:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:27.152353203 +0000 UTC], TTL=[10], ModifiedIndex=[304], CreatedIndex=[9]
2019/02/01 00:30:17 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"id": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a", "output": [{"description": "Virtual network.", "output_key": "virtual_network", "output_value": [["default-domain", "admin", "b62eefe0-0872-478d-adfe-1a606320f0e7"]]}, {"description": "Fully Qualified Name of the VMI", "output_key": "fq_name", "output_value": "default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "A unique id for the virtual machine interface.", "output_key": "id", "output_value": "f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "Virtual machine allowed address pairs.", "output_key": "allowed_address_pairs", "output_value": {"allowed_address_pair": []}}, {"description": "Virtual machine interface mac address.", "output_key": "mac_address", "output_value": ["fa:16:3e:f7:60:7f"]}], "stack_id": "port_3a04e6ed-68fb-4534-8822-d5162d19f35a", "stack_status": "CREATE_COMPLETE", "status_reason": "Stack CREATE completed successfully", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[305], CreatedIndex=[305]
2019/02/01 00:30:17 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"heat_outputs": [{"description": "Virtual network.", "output_key": "virtual_network", "output_value": [["default-domain", "admin", "b62eefe0-0872-478d-adfe-1a606320f0e7"]]}, {"description": "Fully Qualified Name of the VMI", "output_key": "fq_name", "output_value": "default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "A unique id for the virtual machine interface.", "output_key": "id", "output_value": "f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "Virtual machine allowed address pairs.", "output_key": "allowed_address_pairs", "output_value": {"allowed_address_pair": []}}, {"description": "Virtual machine interface mac address.", "output_key": "mac_address", "output_value": ["fa:16:3e:f7:60:7f"]}], "orchestration_state": "CREATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[306], CreatedIndex=[299]
2019/02/01 00:30:17 Got updated data : Action=[compareAndSwap], key=[/jobs/working/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[706b89df-4221-4102-ae01-7cbe8dbdc723], Expiration=[2019-02-01 00:31:17.942963584 +0000 UTC], TTL=[60], ModifiedIndex=[307], CreatedIndex=[295]
2019/02/01 00:30:17 Got updated data : Action=[set], key=[/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": [[\"default-domain\", \"admin\", \"b62eefe0-0872-478d-adfe-1a606320f0e7\"]], \"description\": \"Virtual network.\", \"output_key\": \"virtual_network\"}, {\"output_value\": \"default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7\", \"description\": \"Fully Qualified Name of the VMI\", \"output_key\": \"fq_name\"}, {\"output_value\": \"f68d0924-ef20-4c1b-ac45-0e6b879af5e7\", \"description\": \"A unique id for the virtual machine interface.\", \"output_key\": \"id\"}, {\"output_value\": {\"allowed_address_pair\": []}, \"description\": \"Virtual machine allowed address pairs.\", \"output_key\": \"allowed_address_pairs\"}, {\"output_value\": [\"fa:16:3e:f7:60:7f\"], \"description\": \"Virtual machine interface mac address.\", \"output_key\": \"mac_address\"}]", "orchestration_state": "CREATE_COMPLETE", "worker_state": "CREATE_COMPLETED"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[308], CreatedIndex=[308]
2019/02/01 00:30:17 Got updated data : Action=[create], key=[/jobs/finished/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[309], CreatedIndex=[309]
2019/02/01 00:30:17 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":308}], Expiration=[2019-02-01 00:30:27.966746358 +0000 UTC], TTL=[10], ModifiedIndex=[310], CreatedIndex=[310]
2019/02/01 00:30:17 Got updated data : Action=[delete], key=[/jobs/working/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[311], CreatedIndex=[295]
2019/02/01 00:30:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":308}], Expiration=[2019-02-01 00:30:27.970870799 +0000 UTC], TTL=[10], ModifiedIndex=[312], CreatedIndex=[310]
2019/02/01 00:30:17 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[313], CreatedIndex=[299]
2019/02/01 00:30:17 Got updated data : Action=[delete], key=[/jobs/all/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[314], CreatedIndex=[293]
2019/02/01 00:30:18 Got updated data : Action=[delete], key=[/jobs/finished/create:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:1:0g0mv], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[315], CreatedIndex=[309]
2019/02/01 00:30:18 Got updated data : Action=[create], key=[/jobs/ready/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[316], CreatedIndex=[316]
2019/02/01 00:30:18 Got updated data : Action=[create], key=[/jobs/working/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[f67ff47d-d4d8-43c2-a716-aff4cdbbe17d], Expiration=[2019-02-01 00:31:18.031976472 +0000 UTC], TTL=[60], ModifiedIndex=[317], CreatedIndex=[317]
2019/02/01 00:30:18 Got updated data : Action=[delete], key=[/jobs/waiting/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[318], CreatedIndex=[302]
2019/02/01 00:30:18 Got updated data : Action=[delete], key=[/jobs/ready/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[319], CreatedIndex=[316]
2019/02/01 00:30:18 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[320], CreatedIndex=[320]
2019/02/01 00:30:18 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[321], CreatedIndex=[310]
2019/02/01 00:30:18 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[308], Expiration=[<nil>], TTL=[0], ModifiedIndex=[322], CreatedIndex=[322]
2019/02/01 00:30:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:32.154932585 +0000 UTC], TTL=[10], ModifiedIndex=[323], CreatedIndex=[9]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"id": "ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c", "output": [{"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "17a787f7-e191-48c3-adaf-692a20a3768f"}, {"description": "A unique id for the logical interface", "output_key": "id", "output_value": "46b0cd68-d0fb-4d72-9def-830164f9e215"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/17a787f7-e191-48c3-adaf-692a20a3768f"}, {"description": "The name of the logical interface.", "output_key": "name", "output_value": "xe-0/0/38.0"}], "stack_id": "ese_logical_port_74522211-c8db-41b6-8a35-4fac9656713c", "stack_status": "CREATE_COMPLETE", "status_reason": "Stack CREATE completed successfully", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[324], CreatedIndex=[324]
2019/02/01 00:30:22 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"heat_outputs": [{"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "17a787f7-e191-48c3-adaf-692a20a3768f"}, {"description": "A unique id for the logical interface", "output_key": "id", "output_value": "46b0cd68-d0fb-4d72-9def-830164f9e215"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/17a787f7-e191-48c3-adaf-692a20a3768f"}, {"description": "The name of the logical interface.", "output_key": "name", "output_value": "xe-0/0/38.0"}], "orchestration_state": "CREATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[325], CreatedIndex=[320]
2019/02/01 00:30:22 Got updated data : Action=[compareAndSwap], key=[/jobs/working/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[f67ff47d-d4d8-43c2-a716-aff4cdbbe17d], Expiration=[2019-02-01 00:31:22.492232726 +0000 UTC], TTL=[60], ModifiedIndex=[326], CreatedIndex=[317]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": \"17a787f7-e191-48c3-adaf-692a20a3768f\", \"description\": \"Monitoring Target ID\", \"output_key\": \"monitoring_target_id\"}, {\"output_value\": \"46b0cd68-d0fb-4d72-9def-830164f9e215\", \"description\": \"A unique id for the logical interface\", \"output_key\": \"id\"}, {\"output_value\": \"http://collector-agents-se:7070/targets/17a787f7-e191-48c3-adaf-692a20a3768f\", \"description\": \"Monitoring Process Link\", \"output_key\": \"monitoring_link\"}, {\"output_value\": \"xe-0/0/38.0\", \"description\": \"The name of the logical interface.\", \"output_key\": \"name\"}]", "orchestration_state": "CREATE_COMPLETE", "worker_state": "CREATE_COMPLETED"}, "version": 1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[327], CreatedIndex=[327]
2019/02/01 00:30:22 Got updated data : Action=[create], key=[/jobs/finished/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[328], CreatedIndex=[328]
2019/02/01 00:30:22 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":327}], Expiration=[2019-02-01 00:30:32.515335652 +0000 UTC], TTL=[10], ModifiedIndex=[329], CreatedIndex=[329]
2019/02/01 00:30:22 Got updated data : Action=[delete], key=[/jobs/working/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[330], CreatedIndex=[317]
2019/02/01 00:30:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":327}], Expiration=[2019-02-01 00:30:32.522411335 +0000 UTC], TTL=[10], ModifiedIndex=[331], CreatedIndex=[329]
2019/02/01 00:30:22 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[332], CreatedIndex=[320]
2019/02/01 00:30:22 Got updated data : Action=[delete], key=[/jobs/all/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[333], CreatedIndex=[301]
2019/02/01 00:30:22 Got updated data : Action=[delete], key=[/jobs/finished/create:heat_worker:ese_logical_port:74522211-c8db-41b6-8a35-4fac9656713c:1:lxiiz], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[334], CreatedIndex=[328]
2019/02/01 00:30:22 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[335], CreatedIndex=[329]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[327], Expiration=[<nil>], TTL=[0], ModifiedIndex=[336], CreatedIndex=[336]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/config/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"body":"{\"admin_state_up\":true,\"allowed_address_pairs\":[],\"attached\":true,\"binding:vif_type\":\"vrouter\",\"description\":\"\",\"device_id\":\"c13acfa3-6780-4f53-90da-492dfd697e69\",\"device_owner\":\"physical_port\",\"ese_logical_port_id\":\"74522211-c8db-41b6-8a35-4fac9656713c\",\"fake_delete\":false,\"fixed_ips\":[{\"ip_address\":\"192.168.200.101\",\"subnet_id\":\"215cb166-b0c5-4fbb-ad5f-948cb93119fe\"}],\"id\":\"3a04e6ed-68fb-4534-8822-d5162d19f35a\",\"mac_address\":\"fa:16:3e:e7:7c:0f\",\"managed_by_service\":false,\"name\":\"sample-port\",\"network_id\":\"b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1\",\"operational_state\":\"NO_STATE\",\"orchestration_state\":\"UPDATE_IN_PROGRESS\",\"security_groups\":[],\"segmentation_id\":1003,\"segmentation_type\":\"vlan\",\"status\":\"PENDING_CREATE\",\"tags\":{},\"tenant_id\":\"4b4cb858859842a389d0b0c8eb567d59\"}","marked_for_deletion":false,"version":2}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[337], CreatedIndex=[337]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/worker-workflow-jobs], value=[{"action": "modify", "dependencies": [], "jobs": [{"action": "modify", "handler": "heat_worker", "is_first": true, "is_last": true, "job_name": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2", "on_failure": "fail", "params": [{"param": "jinja_attached", "resources": [], "type": "value", "value": true}, {"param": "virtual_network", "resources": [{"resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}, {"resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}], "type": "output_key", "value": {"output_key": "id", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "resource_type": "network"}}, {"param": "virtual_machine", "resources": [], "type": "value", "value": "c13acfa3-6780-4f53-90da-492dfd697e69"}, {"param": "name", "resources": [], "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}, {"param": "admin_state_up", "resources": [], "type": "value", "value": true}, {"param": "tenant_id", "resources": [], "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59"}, {"param": "heat_timeout", "resources": [], "type": "value", "value": "13"}, {"param": "virtual_machine_interface_allowed_address_pairs", "resources": [], "type": "value", "value": []}, {"param": "virtual_machine_interface_mac_address", "resources": [], "type": "value", "value": "fa:16:3e:e7:7c:0f"}, {"param": "device_owner", "resources": [], "type": "value", "value": "physical_port"}, {"param": "version", "resources": [], "type": "value", "value": 2}, {"param": "security_groups", "resources": [], "type": "value", "value": []}, {"param": "jinja_force_dependency_gw_interface", "resources": [], "type": "value", "value": null}, {"param": "jinja_fixed_ips", "resources": [], "type": "value", "value": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}]}, {"param": "jinja_force_dependency_cfg", "resources": [], "type": "value", "value": null}, {"param": "jinja_device_owner", "resources": [], "type": "value", "value": "physical_port"}, {"param": "jinja_subnets", "resources": [{"resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}, {"resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}], "type": "list", "value": [{"param": "jinja_subnets", "resources": [], "type": "output_key", "value": {"output_key": "id", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "resource_type": "subnet"}}]}, {"param": "uuid", "resources": [], "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a"}], "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_input": {"admin_state_up": true, "allowed_address_pairs": [], "attached": true, "binding:vif_type": "vrouter", "description": "", "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "device_owner": "physical_port", "ese_logical_port_id": "74522211-c8db-41b6-8a35-4fac9656713c", "fake_delete": false, "fixed_ips": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "mac_address": "fa:16:3e:e7:7c:0f", "managed_by_service": false, "name": "sample-port", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "UPDATE_IN_PROGRESS", "security_groups": [], "segmentation_id": 1003, "segmentation_type": "vlan", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "resource_type": "port", "version": 2}]}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[338], CreatedIndex=[338]
2019/02/01 00:30:22 Got updated data : Action=[compareAndSwap], key=[/esi-worker/config/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"body": {"admin_state_up": true, "allowed_address_pairs": [], "attached": true, "binding:vif_type": "vrouter", "description": "", "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "device_owner": "physical_port", "ese_logical_port_id": "74522211-c8db-41b6-8a35-4fac9656713c", "fake_delete": false, "fixed_ips": [{"ip_address": "192.168.200.101", "subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "mac_address": "fa:16:3e:e7:7c:0f", "managed_by_service": false, "name": "sample-port", "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "operational_state": "NO_STATE", "orchestration_state": "UPDATE_IN_PROGRESS", "security_groups": [], "segmentation_id": 1003, "segmentation_type": "vlan", "status": "PENDING_CREATE", "tags": {}, "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}, "deleted": false, "version": 2}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[339], CreatedIndex=[291]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/jobs/all/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[["heat_worker", {"is_first": true, "version": 2, "resource_id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resource_input": {"ese_logical_port_id": "74522211-c8db-41b6-8a35-4fac9656713c", "allowed_address_pairs": [], "device_owner": "physical_port", "fake_delete": false, "fixed_ips": [{"subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "ip_address": "192.168.200.101"}], "id": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "security_groups": [], "binding:vif_type": "vrouter", "mac_address": "fa:16:3e:e7:7c:0f", "status": "PENDING_CREATE", "description": "", "tags": {}, "segmentation_id": 1003, "device_id": "c13acfa3-6780-4f53-90da-492dfd697e69", "name": "sample-port", "admin_state_up": true, "network_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59", "managed_by_service": false, "attached": true, "operational_state": "NO_STATE", "orchestration_state": "UPDATE_IN_PROGRESS", "segmentation_type": "vlan"}, "on_failure": "fail", "id": "modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m", "dependency": [], "handler": "heat_worker", "params": [{"param": "jinja_attached", "type": "value", "value": true, "resources": []}, {"param": "virtual_network", "type": "output_key", "value": {"output_key": "id", "resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, "resources": [{"resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}, {"resource_type": "network", "resource_id": "b761b0cd-d7c3-4b7a-b596-cea1cf9cc1e1"}]}, {"param": "virtual_machine", "type": "value", "value": "c13acfa3-6780-4f53-90da-492dfd697e69", "resources": []}, {"param": "name", "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resources": []}, {"param": "admin_state_up", "type": "value", "value": true, "resources": []}, {"param": "tenant_id", "type": "value", "value": "4b4cb858859842a389d0b0c8eb567d59", "resources": []}, {"param": "heat_timeout", "type": "value", "value": "13", "resources": []}, {"param": "virtual_machine_interface_allowed_address_pairs", "type": "value", "value": [], "resources": []}, {"param": "virtual_machine_interface_mac_address", "type": "value", "value": "fa:16:3e:e7:7c:0f", "resources": []}, {"param": "device_owner", "type": "value", "value": "physical_port", "resources": []}, {"param": "version", "type": "value", "value": 2, "resources": []}, {"param": "security_groups", "type": "value", "value": [], "resources": []}, {"param": "jinja_force_dependency_gw_interface", "type": "value", "value": null, "resources": []}, {"param": "jinja_fixed_ips", "type": "value", "value": [{"subnet_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe", "ip_address": "192.168.200.101"}], "resources": []}, {"param": "jinja_force_dependency_cfg", "type": "value", "value": null, "resources": []}, {"param": "jinja_device_owner", "type": "value", "value": "physical_port", "resources": []}, {"param": "jinja_subnets", "type": "list", "value": [{"resources": [], "type": "output_key", "value": {"output_key": "id", "resource_type": "subnet", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}, "param": "jinja_subnets"}], "resources": [{"resource_type": "subnet", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}, {"resource_type": "subnet", "resource_id": "215cb166-b0c5-4fbb-ad5f-948cb93119fe"}]}, {"param": "uuid", "type": "value", "value": "3a04e6ed-68fb-4534-8822-d5162d19f35a", "resources": []}], "action": "modify", "is_last": true, "job_name": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2", "resource_type": "port"}, 0]], Expiration=[<nil>], TTL=[0], ModifiedIndex=[340], CreatedIndex=[340]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/jobs/ready/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[heat_worker], Expiration=[<nil>], TTL=[0], ModifiedIndex=[341], CreatedIndex=[341]
2019/02/01 00:30:22 Got updated data : Action=[delete], key=[/worker-workflow-jobs], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[342], CreatedIndex=[338]
2019/02/01 00:30:22 Got updated data : Action=[create], key=[/jobs/working/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[99c76b95-73f2-42ff-a404-85279ba8d86c], Expiration=[2019-02-01 00:31:22.633312758 +0000 UTC], TTL=[60], ModifiedIndex=[343], CreatedIndex=[343]
2019/02/01 00:30:22 Got updated data : Action=[delete], key=[/jobs/ready/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[344], CreatedIndex=[341]
2019/02/01 00:30:22 Got updated data : Action=[set], key=[/esi-worker/job_state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[345], CreatedIndex=[345]
2019/02/01 00:30:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:37.164587568 +0000 UTC], TTL=[10], ModifiedIndex=[346], CreatedIndex=[9]
2019/02/01 00:30:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:40.002051341 +0000 UTC], TTL=[10], ModifiedIndex=[347], CreatedIndex=[347]
2019/02/01 00:30:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:40.002248013 +0000 UTC], TTL=[10], ModifiedIndex=[348], CreatedIndex=[348]
2019/02/01 00:30:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:40.011716263 +0000 UTC], TTL=[10], ModifiedIndex=[349], CreatedIndex=[347]
2019/02/01 00:30:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:40.012491734 +0000 UTC], TTL=[10], ModifiedIndex=[350], CreatedIndex=[348]
2019/02/01 00:30:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[351], CreatedIndex=[347]
2019/02/01 00:30:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[352], CreatedIndex=[348]
2019/02/01 00:30:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:42.168168423 +0000 UTC], TTL=[10], ModifiedIndex=[353], CreatedIndex=[9]
2019/02/01 00:30:32 Got updated data : Action=[set], key=[/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"version":2,"vmi":"UP"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[354], CreatedIndex=[354]
2019/02/01 00:30:32 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[354], Expiration=[<nil>], TTL=[0], ModifiedIndex=[355], CreatedIndex=[355]
2019/02/01 00:30:33 Got updated data : Action=[set], key=[/esi-worker/heat_stacks/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"id": "port:3a04e6ed-68fb-4534-8822-d5162d19f35a", "output": [{"description": "Fully Qualified Name of the VMI", "output_key": "fq_name", "output_value": "default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "Virtual machine allowed address pairs.", "output_key": "allowed_address_pairs", "output_value": {"allowed_address_pair": []}}, {"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "bb927b26-ba6b-4049-9b55-54af3e1ea997"}, {"description": "Virtual machine interface mac address.", "output_key": "mac_address", "output_value": ["fa:16:3e:f7:60:7f"]}, {"description": "Virtual network.", "output_key": "virtual_network", "output_value": [["default-domain", "admin", "b62eefe0-0872-478d-adfe-1a606320f0e7"]]}, {"description": "A unique id for the virtual machine interface.", "output_key": "id", "output_value": "f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/bb927b26-ba6b-4049-9b55-54af3e1ea997"}], "stack_id": "port_3a04e6ed-68fb-4534-8822-d5162d19f35a", "stack_status": "UPDATE_COMPLETE", "status_reason": "Stack successfully updated", "tenant_id": "4b4cb858859842a389d0b0c8eb567d59"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[356], CreatedIndex=[356]
2019/02/01 00:30:33 Got updated data : Action=[compareAndSwap], key=[/esi-worker/job_state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"heat_outputs": [{"description": "Fully Qualified Name of the VMI", "output_key": "fq_name", "output_value": "default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "Virtual machine allowed address pairs.", "output_key": "allowed_address_pairs", "output_value": {"allowed_address_pair": []}}, {"description": "Monitoring Target ID", "output_key": "monitoring_target_id", "output_value": "bb927b26-ba6b-4049-9b55-54af3e1ea997"}, {"description": "Virtual machine interface mac address.", "output_key": "mac_address", "output_value": ["fa:16:3e:f7:60:7f"]}, {"description": "Virtual network.", "output_key": "virtual_network", "output_value": [["default-domain", "admin", "b62eefe0-0872-478d-adfe-1a606320f0e7"]]}, {"description": "A unique id for the virtual machine interface.", "output_key": "id", "output_value": "f68d0924-ef20-4c1b-ac45-0e6b879af5e7"}, {"description": "Monitoring Process Link", "output_key": "monitoring_link", "output_value": "http://collector-agents-se:7070/targets/bb927b26-ba6b-4049-9b55-54af3e1ea997"}], "orchestration_state": "UPDATE_COMPLETE"}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[357], CreatedIndex=[345]
2019/02/01 00:30:33 Got updated data : Action=[compareAndSwap], key=[/jobs/working/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[99c76b95-73f2-42ff-a404-85279ba8d86c], Expiration=[2019-02-01 00:31:33.20510492 +0000 UTC], TTL=[60], ModifiedIndex=[358], CreatedIndex=[343]
2019/02/01 00:30:33 Got updated data : Action=[set], key=[/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"error": "", "state": {"heat_outputs": "[{\"output_value\": \"default-domain:admin:f68d0924-ef20-4c1b-ac45-0e6b879af5e7\", \"description\": \"Fully Qualified Name of the VMI\", \"output_key\": \"fq_name\"}, {\"output_value\": {\"allowed_address_pair\": []}, \"description\": \"Virtual machine allowed address pairs.\", \"output_key\": \"allowed_address_pairs\"}, {\"output_value\": \"bb927b26-ba6b-4049-9b55-54af3e1ea997\", \"description\": \"Monitoring Target ID\", \"output_key\": \"monitoring_target_id\"}, {\"output_value\": [\"fa:16:3e:f7:60:7f\"], \"description\": \"Virtual machine interface mac address.\", \"output_key\": \"mac_address\"}, {\"output_value\": [[\"default-domain\", \"admin\", \"b62eefe0-0872-478d-adfe-1a606320f0e7\"]], \"description\": \"Virtual network.\", \"output_key\": \"virtual_network\"}, {\"output_value\": \"f68d0924-ef20-4c1b-ac45-0e6b879af5e7\", \"description\": \"A unique id for the virtual machine interface.\", \"output_key\": \"id\"}, {\"output_value\": \"http://collector-agents-se:7070/targets/bb927b26-ba6b-4049-9b55-54af3e1ea997\", \"description\": \"Monitoring Process Link\", \"output_key\": \"monitoring_link\"}]", "orchestration_state": "UPDATE_COMPLETE", "worker_state": "MODIFY_COMPLETED"}, "version": 2}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[359], CreatedIndex=[359]
2019/02/01 00:30:33 Got updated data : Action=[create], key=[/gohan/cluster/lock/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":359}], Expiration=[2019-02-01 00:30:43.234439549 +0000 UTC], TTL=[10], ModifiedIndex=[360], CreatedIndex=[360]
2019/02/01 00:30:33 Got updated data : Action=[create], key=[/jobs/finished/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[361], CreatedIndex=[361]
2019/02/01 00:30:33 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":359}], Expiration=[2019-02-01 00:30:43.240935877 +0000 UTC], TTL=[10], ModifiedIndex=[362], CreatedIndex=[360]
2019/02/01 00:30:33 Got updated data : Action=[delete], key=[/jobs/working/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[363], CreatedIndex=[343]
2019/02/01 00:30:33 Got updated data : Action=[compareAndDelete], key=[/esi-worker/job_state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[364], CreatedIndex=[345]
2019/02/01 00:30:33 Got updated data : Action=[delete], key=[/jobs/all/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[365], CreatedIndex=[340]
2019/02/01 00:30:33 Got updated data : Action=[delete], key=[/jobs/finished/modify:heat_worker:port:3a04e6ed-68fb-4534-8822-d5162d19f35a:2:28a9m], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[366], CreatedIndex=[361]
2019/02/01 00:30:33 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/state/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[367], CreatedIndex=[360]
2019/02/01 00:30:33 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:30:43.312649778 +0000 UTC], TTL=[10], ModifiedIndex=[368], CreatedIndex=[368]
2019/02/01 00:30:33 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:30:43.319543361 +0000 UTC], TTL=[10], ModifiedIndex=[369], CreatedIndex=[368]
2019/02/01 00:30:33 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[370], CreatedIndex=[368]
2019/02/01 00:30:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:47.169831724 +0000 UTC], TTL=[10], ModifiedIndex=[371], CreatedIndex=[9]
2019/02/01 00:30:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:31:46.817970933 +0000 UTC], TTL=[65], ModifiedIndex=[372], CreatedIndex=[63]
2019/02/01 00:30:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:52.171875139 +0000 UTC], TTL=[10], ModifiedIndex=[373], CreatedIndex=[9]
2019/02/01 00:30:43 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:30:53.412022846 +0000 UTC], TTL=[10], ModifiedIndex=[374], CreatedIndex=[374]
2019/02/01 00:30:43 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:30:53.419235508 +0000 UTC], TTL=[10], ModifiedIndex=[375], CreatedIndex=[374]
2019/02/01 00:30:43 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[376], CreatedIndex=[374]
2019/02/01 00:30:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:30:57.174798951 +0000 UTC], TTL=[10], ModifiedIndex=[377], CreatedIndex=[9]
2019/02/01 00:30:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:02.177067787 +0000 UTC], TTL=[10], ModifiedIndex=[378], CreatedIndex=[9]
2019/02/01 00:30:53 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:03.479883003 +0000 UTC], TTL=[10], ModifiedIndex=[379], CreatedIndex=[379]
2019/02/01 00:30:53 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:03.482008693 +0000 UTC], TTL=[10], ModifiedIndex=[380], CreatedIndex=[379]
2019/02/01 00:30:53 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[381], CreatedIndex=[379]
2019/02/01 00:30:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:07.179570786 +0000 UTC], TTL=[10], ModifiedIndex=[382], CreatedIndex=[9]
2019/02/01 00:31:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:10.001743947 +0000 UTC], TTL=[10], ModifiedIndex=[383], CreatedIndex=[383]
2019/02/01 00:31:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:10.001758966 +0000 UTC], TTL=[10], ModifiedIndex=[384], CreatedIndex=[384]
2019/02/01 00:31:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:10.004475745 +0000 UTC], TTL=[10], ModifiedIndex=[385], CreatedIndex=[383]
2019/02/01 00:31:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:10.023431258 +0000 UTC], TTL=[10], ModifiedIndex=[386], CreatedIndex=[384]
2019/02/01 00:31:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[387], CreatedIndex=[384]
2019/02/01 00:31:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[388], CreatedIndex=[383]
2019/02/01 00:31:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:12.182327064 +0000 UTC], TTL=[10], ModifiedIndex=[389], CreatedIndex=[9]
2019/02/01 00:31:03 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:13.547711757 +0000 UTC], TTL=[10], ModifiedIndex=[390], CreatedIndex=[390]
2019/02/01 00:31:03 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:13.549540494 +0000 UTC], TTL=[10], ModifiedIndex=[391], CreatedIndex=[390]
2019/02/01 00:31:03 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[392], CreatedIndex=[390]
2019/02/01 00:31:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:17.18488942 +0000 UTC], TTL=[10], ModifiedIndex=[393], CreatedIndex=[9]
2019/02/01 00:31:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:32:16.832801381 +0000 UTC], TTL=[65], ModifiedIndex=[394], CreatedIndex=[63]
2019/02/01 00:31:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:22.187306085 +0000 UTC], TTL=[10], ModifiedIndex=[395], CreatedIndex=[9]
2019/02/01 00:31:13 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:23.613711793 +0000 UTC], TTL=[10], ModifiedIndex=[396], CreatedIndex=[396]
2019/02/01 00:31:13 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:23.616411538 +0000 UTC], TTL=[10], ModifiedIndex=[397], CreatedIndex=[396]
2019/02/01 00:31:13 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[398], CreatedIndex=[396]
2019/02/01 00:31:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:27.189847406 +0000 UTC], TTL=[10], ModifiedIndex=[399], CreatedIndex=[9]
2019/02/01 00:31:20 Got updated data : Action=[set], key=[/monitoring/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"logical_port":"UP","version":1}], Expiration=[<nil>], TTL=[0], ModifiedIndex=[400], CreatedIndex=[400]
2019/02/01 00:31:20 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":400}], Expiration=[2019-02-01 00:31:30.256910372 +0000 UTC], TTL=[10], ModifiedIndex=[401], CreatedIndex=[401]
2019/02/01 00:31:20 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":400}], Expiration=[2019-02-01 00:31:30.261009146 +0000 UTC], TTL=[10], ModifiedIndex=[402], CreatedIndex=[401]
2019/02/01 00:31:20 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ese_logical_ports/74522211-c8db-41b6-8a35-4fac9656713c], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[403], CreatedIndex=[401]
2019/02/01 00:31:20 Got updated data : Action=[set], key=[/gohan/watch/index/monitoring], value=[400], Expiration=[<nil>], TTL=[0], ModifiedIndex=[404], CreatedIndex=[404]
2019/02/01 00:31:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:32.192453144 +0000 UTC], TTL=[10], ModifiedIndex=[405], CreatedIndex=[9]
2019/02/01 00:31:23 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:33.685548899 +0000 UTC], TTL=[10], ModifiedIndex=[406], CreatedIndex=[406]
2019/02/01 00:31:23 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:33.687629752 +0000 UTC], TTL=[10], ModifiedIndex=[407], CreatedIndex=[406]
2019/02/01 00:31:23 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[408], CreatedIndex=[406]
2019/02/01 00:31:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:37.194568584 +0000 UTC], TTL=[10], ModifiedIndex=[409], CreatedIndex=[9]
2019/02/01 00:31:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:40.001719795 +0000 UTC], TTL=[10], ModifiedIndex=[410], CreatedIndex=[410]
2019/02/01 00:31:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:40.001984949 +0000 UTC], TTL=[10], ModifiedIndex=[411], CreatedIndex=[411]
2019/02/01 00:31:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:40.004755932 +0000 UTC], TTL=[10], ModifiedIndex=[412], CreatedIndex=[410]
2019/02/01 00:31:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:40.014033392 +0000 UTC], TTL=[10], ModifiedIndex=[413], CreatedIndex=[411]
2019/02/01 00:31:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[414], CreatedIndex=[410]
2019/02/01 00:31:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[415], CreatedIndex=[411]
2019/02/01 00:31:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:42.196494386 +0000 UTC], TTL=[10], ModifiedIndex=[416], CreatedIndex=[9]
2019/02/01 00:31:33 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:43.76931302 +0000 UTC], TTL=[10], ModifiedIndex=[417], CreatedIndex=[417]
2019/02/01 00:31:33 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:43.77126783 +0000 UTC], TTL=[10], ModifiedIndex=[418], CreatedIndex=[417]
2019/02/01 00:31:33 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[419], CreatedIndex=[417]
2019/02/01 00:31:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:47.199353377 +0000 UTC], TTL=[10], ModifiedIndex=[420], CreatedIndex=[9]
2019/02/01 00:31:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:32:46.841291163 +0000 UTC], TTL=[65], ModifiedIndex=[421], CreatedIndex=[63]
2019/02/01 00:31:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:52.202334375 +0000 UTC], TTL=[10], ModifiedIndex=[422], CreatedIndex=[9]
2019/02/01 00:31:43 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:53.838957963 +0000 UTC], TTL=[10], ModifiedIndex=[423], CreatedIndex=[423]
2019/02/01 00:31:43 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:31:53.841838498 +0000 UTC], TTL=[10], ModifiedIndex=[424], CreatedIndex=[423]
2019/02/01 00:31:43 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[425], CreatedIndex=[423]
2019/02/01 00:31:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:31:57.204518767 +0000 UTC], TTL=[10], ModifiedIndex=[426], CreatedIndex=[9]
2019/02/01 00:31:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:02.207141126 +0000 UTC], TTL=[10], ModifiedIndex=[427], CreatedIndex=[9]
2019/02/01 00:31:53 Got updated data : Action=[create], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:32:03.9075707 +0000 UTC], TTL=[10], ModifiedIndex=[428], CreatedIndex=[428]
2019/02/01 00:31:53 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":354}], Expiration=[2019-02-01 00:32:03.911058095 +0000 UTC], TTL=[10], ModifiedIndex=[429], CreatedIndex=[428]
2019/02/01 00:31:53 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/monitoring/v2.0/ports/3a04e6ed-68fb-4534-8822-d5162d19f35a], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[430], CreatedIndex=[428]
2019/02/01 00:31:53 Got updated data : Action=[set], key=[/gohan/watch/index/state], value=[359], Expiration=[<nil>], TTL=[0], ModifiedIndex=[431], CreatedIndex=[431]
2019/02/01 00:31:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:07.210142864 +0000 UTC], TTL=[10], ModifiedIndex=[432], CreatedIndex=[9]
2019/02/01 00:32:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:10.001591703 +0000 UTC], TTL=[10], ModifiedIndex=[433], CreatedIndex=[433]
2019/02/01 00:32:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:10.00174842 +0000 UTC], TTL=[10], ModifiedIndex=[434], CreatedIndex=[434]
2019/02/01 00:32:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:10.004325969 +0000 UTC], TTL=[10], ModifiedIndex=[435], CreatedIndex=[433]
2019/02/01 00:32:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:10.013147899 +0000 UTC], TTL=[10], ModifiedIndex=[436], CreatedIndex=[434]
2019/02/01 00:32:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[437], CreatedIndex=[433]
2019/02/01 00:32:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[438], CreatedIndex=[434]
2019/02/01 00:32:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:12.213217329 +0000 UTC], TTL=[10], ModifiedIndex=[439], CreatedIndex=[9]
2019/02/01 00:32:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:17.215397474 +0000 UTC], TTL=[10], ModifiedIndex=[440], CreatedIndex=[9]
2019/02/01 00:32:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:33:16.853598119 +0000 UTC], TTL=[65], ModifiedIndex=[441], CreatedIndex=[63]
2019/02/01 00:32:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:22.217411438 +0000 UTC], TTL=[10], ModifiedIndex=[442], CreatedIndex=[9]
2019/02/01 00:32:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:27.219773155 +0000 UTC], TTL=[10], ModifiedIndex=[443], CreatedIndex=[9]
2019/02/01 00:32:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:32.222063451 +0000 UTC], TTL=[10], ModifiedIndex=[444], CreatedIndex=[9]
2019/02/01 00:32:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:37.224247893 +0000 UTC], TTL=[10], ModifiedIndex=[445], CreatedIndex=[9]
2019/02/01 00:32:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:40.001326172 +0000 UTC], TTL=[10], ModifiedIndex=[446], CreatedIndex=[446]
2019/02/01 00:32:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:40.001473998 +0000 UTC], TTL=[10], ModifiedIndex=[447], CreatedIndex=[447]
2019/02/01 00:32:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:40.003231723 +0000 UTC], TTL=[10], ModifiedIndex=[448], CreatedIndex=[446]
2019/02/01 00:32:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:40.023594749 +0000 UTC], TTL=[10], ModifiedIndex=[449], CreatedIndex=[447]
2019/02/01 00:32:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[450], CreatedIndex=[446]
2019/02/01 00:32:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[451], CreatedIndex=[447]
2019/02/01 00:32:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:42.226687171 +0000 UTC], TTL=[10], ModifiedIndex=[452], CreatedIndex=[9]
2019/02/01 00:32:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:47.228875455 +0000 UTC], TTL=[10], ModifiedIndex=[453], CreatedIndex=[9]
2019/02/01 00:32:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:33:46.865494326 +0000 UTC], TTL=[65], ModifiedIndex=[454], CreatedIndex=[63]
2019/02/01 00:32:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:52.230765955 +0000 UTC], TTL=[10], ModifiedIndex=[455], CreatedIndex=[9]
2019/02/01 00:32:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:32:57.232664112 +0000 UTC], TTL=[10], ModifiedIndex=[456], CreatedIndex=[9]
2019/02/01 00:32:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:02.234790963 +0000 UTC], TTL=[10], ModifiedIndex=[457], CreatedIndex=[9]
2019/02/01 00:32:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:07.236920798 +0000 UTC], TTL=[10], ModifiedIndex=[458], CreatedIndex=[9]
2019/02/01 00:33:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:10.001998128 +0000 UTC], TTL=[10], ModifiedIndex=[459], CreatedIndex=[459]
2019/02/01 00:33:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:10.002174755 +0000 UTC], TTL=[10], ModifiedIndex=[460], CreatedIndex=[460]
2019/02/01 00:33:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:10.00462229 +0000 UTC], TTL=[10], ModifiedIndex=[461], CreatedIndex=[459]
2019/02/01 00:33:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:10.01134698 +0000 UTC], TTL=[10], ModifiedIndex=[462], CreatedIndex=[460]
2019/02/01 00:33:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[463], CreatedIndex=[459]
2019/02/01 00:33:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[464], CreatedIndex=[460]
2019/02/01 00:33:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:12.23996642 +0000 UTC], TTL=[10], ModifiedIndex=[465], CreatedIndex=[9]
2019/02/01 00:33:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:17.242119654 +0000 UTC], TTL=[10], ModifiedIndex=[466], CreatedIndex=[9]
2019/02/01 00:33:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:34:16.879285207 +0000 UTC], TTL=[65], ModifiedIndex=[467], CreatedIndex=[63]
2019/02/01 00:33:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:22.244062755 +0000 UTC], TTL=[10], ModifiedIndex=[468], CreatedIndex=[9]
2019/02/01 00:33:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:27.246478187 +0000 UTC], TTL=[10], ModifiedIndex=[469], CreatedIndex=[9]
2019/02/01 00:33:22 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:32.248462978 +0000 UTC], TTL=[10], ModifiedIndex=[470], CreatedIndex=[9]
2019/02/01 00:33:27 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:37.250422605 +0000 UTC], TTL=[10], ModifiedIndex=[471], CreatedIndex=[9]
2019/02/01 00:33:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:40.001605593 +0000 UTC], TTL=[10], ModifiedIndex=[472], CreatedIndex=[472]
2019/02/01 00:33:30 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:40.001770054 +0000 UTC], TTL=[10], ModifiedIndex=[473], CreatedIndex=[473]
2019/02/01 00:33:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:40.003296293 +0000 UTC], TTL=[10], ModifiedIndex=[474], CreatedIndex=[472]
2019/02/01 00:33:30 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:40.015329044 +0000 UTC], TTL=[10], ModifiedIndex=[475], CreatedIndex=[473]
2019/02/01 00:33:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[476], CreatedIndex=[473]
2019/02/01 00:33:30 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[477], CreatedIndex=[472]
2019/02/01 00:33:32 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:42.25247638 +0000 UTC], TTL=[10], ModifiedIndex=[478], CreatedIndex=[9]
2019/02/01 00:33:37 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:47.254642021 +0000 UTC], TTL=[10], ModifiedIndex=[479], CreatedIndex=[9]
2019/02/01 00:33:41 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:34:46.894011855 +0000 UTC], TTL=[65], ModifiedIndex=[480], CreatedIndex=[63]
2019/02/01 00:33:42 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:52.259787869 +0000 UTC], TTL=[10], ModifiedIndex=[481], CreatedIndex=[9]
2019/02/01 00:33:47 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:33:57.262003235 +0000 UTC], TTL=[10], ModifiedIndex=[482], CreatedIndex=[9]
2019/02/01 00:33:52 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:02.264336457 +0000 UTC], TTL=[10], ModifiedIndex=[483], CreatedIndex=[9]
2019/02/01 00:33:57 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:07.266853463 +0000 UTC], TTL=[10], ModifiedIndex=[484], CreatedIndex=[9]
2019/02/01 00:34:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:10.001807205 +0000 UTC], TTL=[10], ModifiedIndex=[485], CreatedIndex=[485]
2019/02/01 00:34:00 Got updated data : Action=[create], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:10.001993505 +0000 UTC], TTL=[10], ModifiedIndex=[486], CreatedIndex=[486]
2019/02/01 00:34:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:10.00464644 +0000 UTC], TTL=[10], ModifiedIndex=[487], CreatedIndex=[485]
2019/02/01 00:34:00 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:10.026071415 +0000 UTC], TTL=[10], ModifiedIndex=[488], CreatedIndex=[486]
2019/02/01 00:34:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_create_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[489], CreatedIndex=[485]
2019/02/01 00:34:00 Got updated data : Action=[compareAndDelete], key=[/gohan/cluster/lock/cron:/tenant_connection_delete_cron], value=[], Expiration=[<nil>], TTL=[0], ModifiedIndex=[490], CreatedIndex=[486]
2019/02/01 00:34:02 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:12.270325565 +0000 UTC], TTL=[10], ModifiedIndex=[491], CreatedIndex=[9]
2019/02/01 00:34:07 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:17.273089877 +0000 UTC], TTL=[10], ModifiedIndex=[492], CreatedIndex=[9]
2019/02/01 00:34:11 Got updated data : Action=[compareAndSwap], key=[/job_manager_id], value=[042ca249-fc76-41c1-831c-35227c8f45dd], Expiration=[2019-02-01 00:35:16.906583848 +0000 UTC], TTL=[65], ModifiedIndex=[493], CreatedIndex=[63]
2019/02/01 00:34:12 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:22.275973932 +0000 UTC], TTL=[10], ModifiedIndex=[494], CreatedIndex=[9]
2019/02/01 00:34:17 Got updated data : Action=[compareAndSwap], key=[/gohan/cluster/sync], value=[{"ProcessID":"gohan-server188dd5ce-c584-4467-8920-ab2d86f4feee","Index":0}], Expiration=[2019-02-01 00:34:27.27861963 +0000 UTC], TTL=[10], ModifiedIndex=[495], CreatedIndex=[9]
